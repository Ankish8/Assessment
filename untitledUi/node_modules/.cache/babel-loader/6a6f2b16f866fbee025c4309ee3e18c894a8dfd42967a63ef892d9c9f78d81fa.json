{"ast":null,"code":"import { defineProperty as e } from \"../../../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { camelCase as o } from \"lodash-es\";\nimport { getStyle as t } from \"../../../../helpers/typesciptCssModulesHelper.js\";\nimport r from \"classnames\";\nimport l, { forwardRef as n, useMemo as s, useRef as c, useCallback as i, useEffect as a } from \"react\";\nimport { contentColors as m } from \"../../../../utils/colors-vars-map.js\";\nimport u from \"../../../../utils/colors-utils.js\";\nimport d from \"../../../Icon/Icon.js\";\nimport p from \"../../../Tooltip/Tooltip.js\";\nimport f from \"../../../Clickable/Clickable.js\";\nimport { getTestId as v } from \"../../../../tests/testIds.js\";\nimport { ComponentDefaultTestId as I } from \"../../../../tests/constants.js\";\nimport C from \"./ColorPickerItemComponent.module.scss.js\";\nvar g = n(function (n, g) {\n  var y = n.color,\n    E = n.onColorClicked,\n    j = n.colorStyle,\n    k = void 0 === j ? \"regular\" : j,\n    b = n.shouldRenderIndicatorWithoutBackground,\n    S = n.ColorIndicatorIcon,\n    h = n.SelectedIndicatorIcon,\n    L = void 0 === h ? S : h,\n    M = n.isSelected,\n    N = n.colorSize,\n    P = n.tooltipContent,\n    T = n.isActive,\n    W = n.colorShape,\n    _ = n[\"data-testid\"],\n    x = s(function () {\n      return m.includes(y);\n    }, [y]),\n    A = x ? u.getMondayColorAsStyle(y, k) : y,\n    R = c(null),\n    z = i(function () {\n      return E(y);\n    }, [E, y]);\n  a(function () {\n    if ((null == R ? void 0 : R.current) && !b && x) {\n      var e = R.current,\n        o = function (e) {\n          e.target.style.background = u.getMondayColorAsStyle(y, \"selected\" === k ? \"regular\" : \"hover\");\n        },\n        t = function (e) {\n          e.target.style.background = A;\n        };\n      return e.addEventListener(\"mouseenter\", o, !1), e.addEventListener(\"mouseleave\", t, !1), function () {\n        e.removeEventListener(\"mouseenter\", o, !1), e.removeEventListener(\"mouseleave\", t, !1);\n      };\n    }\n  }, [y, A, k, x, R, b]);\n  var B = M || S,\n    D = b ? {\n      color: A\n    } : {};\n  return l.createElement(p, {\n    content: P\n  }, l.createElement(\"li\", {\n    className: r(C.itemWrapper, e(e(e({}, C.selectedColor, M), C.active, T), C.circle, \"circle\" === W)),\n    \"data-testid\": _ || v(I.COLOR_PICKER_ITEM, y)\n  }, l.createElement(\"div\", {\n    className: r(C.feedbackIndicator)\n  }), l.createElement(f, {\n    ref: R,\n    ariaLabel: y,\n    className: r(C.colorItem, t(C, o(\"color-item-size-\" + N)), e({}, C.colorItemTextMode, b)),\n    style: {\n      background: b ? \"transparent\" : A\n    },\n    onClick: z,\n    tabIndex: \"-1\",\n    onMouseDown: function (e) {\n      return e.preventDefault();\n    }\n  }, l.createElement(\"div\", {\n    className: r(C.colorIndicatorWrapper),\n    style: D\n  }, B && l.createElement(d, {\n    icon: M ? L : S,\n    className: r(e({}, C.colorIconWhite, !b)),\n    ignoreFocusStyle: !0\n  })))));\n});\nexport { g as default };","map":{"version":3,"names":["g","n","y","color","E","onColorClicked","j","colorStyle","k","b","shouldRenderIndicatorWithoutBackground","S","ColorIndicatorIcon","h","SelectedIndicatorIcon","L","M","isSelected","N","colorSize","P","tooltipContent","T","isActive","W","colorShape","_","x","s","m","includes","A","u","getMondayColorAsStyle","R","c","z","i","a","current","e","o","setHoverColor","target","style","background","t","restoreToOriginalColor","addEventListener","removeEventListener","B","D","l","createElement","p","content","className","r","C","itemWrapper","selectedColor","active","circle","v","I","COLOR_PICKER_ITEM","feedbackIndicator","f","ref","ariaLabel","colorItem","colorItemTextMode","onClick","tabIndex","onMouseDown","preventDefault","colorIndicatorWrapper","d","icon","colorIconWhite","ignoreFocusStyle","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/ColorPicker/components/ColorPickerItemComponent/ColorPickerItemComponent.tsx"],"sourcesContent":["import { camelCase } from \"lodash-es\";\nimport { getStyle } from \"../../../../helpers/typesciptCssModulesHelper\";\nimport cx from \"classnames\";\nimport React, { useRef, useCallback, useMemo, forwardRef, useEffect } from \"react\";\nimport { contentColors } from \"../../../../utils/colors-vars-map\";\nimport ColorUtils from \"../../../../utils/colors-utils\";\nimport Icon from \"../../../Icon/Icon\";\nimport Tooltip from \"../../../Tooltip/Tooltip\";\nimport Clickable from \"../../../Clickable/Clickable\";\nimport { ColorPickerValueOnly } from \"../../ColorPicker.types\";\nimport { ColorShapes, ColorPickerSizes } from \"../../ColorPicker.types\";\nimport { getTestId } from \"../../../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../../../tests/constants\";\nimport { SubIcon, VibeComponentProps, ElementContent, ColorStyle } from \"../../../../types\";\nimport styles from \"./ColorPickerItemComponent.module.scss\";\n\nexport interface ColorPickerItemComponentProps extends VibeComponentProps {\n  /**\n   * The color value of the item.\n   */\n  color: ColorPickerValueOnly;\n  /**\n   * Callback fired when the color is clicked.\n   */\n  onColorClicked: (color: ColorPickerValueOnly) => void;\n  /**\n   * The style applied to the color.\n   */\n  colorStyle: ColorStyle;\n  /**\n   * If true, renders the color indicator without a background.\n   */\n  shouldRenderIndicatorWithoutBackground: boolean;\n  /**\n   * Icon displayed inside the color item.\n   */\n  ColorIndicatorIcon: SubIcon;\n  /**\n   * Icon displayed when the color is selected.\n   */\n  SelectedIndicatorIcon: SubIcon;\n  /**\n   * If true, the color is marked as selected.\n   */\n  isSelected: boolean;\n  /**\n   * The size of the color item.\n   */\n  colorSize: ColorPickerSizes;\n  /**\n   * Tooltip content for the color item.\n   */\n  tooltipContent: ElementContent;\n  /**\n   * If true, the color item is currently active.\n   */\n  isActive: boolean;\n  /**\n   * The shape of the color item.\n   */\n  colorShape: ColorShapes;\n}\n\nconst ColorPickerItemComponent = forwardRef(\n  (\n    {\n      color,\n      onColorClicked,\n      colorStyle = \"regular\",\n      shouldRenderIndicatorWithoutBackground,\n      ColorIndicatorIcon,\n      SelectedIndicatorIcon = ColorIndicatorIcon,\n      isSelected,\n      colorSize,\n      tooltipContent,\n      isActive,\n      colorShape,\n      \"data-testid\": dataTestId\n    }: ColorPickerItemComponentProps,\n    _ref: React.ForwardedRef<HTMLElement>\n  ) => {\n    const isMondayColor = useMemo(() => (contentColors as readonly string[]).includes(color), [color]); // casting to any since color can be one of the system content colors but can also be a custom one\n    const colorAsStyle = isMondayColor ? ColorUtils.getMondayColorAsStyle(color, colorStyle) : color;\n    const itemRef = useRef<HTMLDivElement>(null);\n\n    const onClick = useCallback(() => onColorClicked(color), [onColorClicked, color]);\n\n    useEffect(() => {\n      if (!itemRef?.current || shouldRenderIndicatorWithoutBackground || !isMondayColor) return;\n      const item = itemRef.current;\n      const setHoverColor = (e: MouseEvent) => {\n        if (colorStyle === \"selected\") {\n          (e.target as HTMLDivElement).style.background = ColorUtils.getMondayColorAsStyle(color, \"regular\");\n        } else {\n          (e.target as HTMLDivElement).style.background = ColorUtils.getMondayColorAsStyle(color, \"hover\");\n        }\n      };\n      const restoreToOriginalColor = (e: MouseEvent) => {\n        (e.target as HTMLDivElement).style.background = colorAsStyle;\n      };\n      item.addEventListener(\"mouseenter\", setHoverColor, false);\n      item.addEventListener(\"mouseleave\", restoreToOriginalColor, false);\n\n      return () => {\n        item.removeEventListener(\"mouseenter\", setHoverColor, false);\n        item.removeEventListener(\"mouseleave\", restoreToOriginalColor, false);\n      };\n    }, [color, colorAsStyle, colorStyle, isMondayColor, itemRef, shouldRenderIndicatorWithoutBackground]);\n\n    const shouldRenderIcon = isSelected || ColorIndicatorIcon;\n    const colorIndicatorWrapperStyle = shouldRenderIndicatorWithoutBackground ? { color: colorAsStyle } : {};\n    return (\n      <Tooltip content={tooltipContent}>\n        <li\n          className={cx(styles.itemWrapper, {\n            [styles.selectedColor]: isSelected,\n            [styles.active]: isActive,\n            [styles.circle]: colorShape === \"circle\"\n          })}\n          data-testid={dataTestId || getTestId(ComponentDefaultTestId.COLOR_PICKER_ITEM, color)}\n        >\n          <div className={cx(styles.feedbackIndicator)} />\n          <Clickable\n            ref={itemRef}\n            ariaLabel={color}\n            className={cx(styles.colorItem, getStyle(styles, camelCase(\"color-item-size-\" + colorSize)), {\n              [styles.colorItemTextMode]: shouldRenderIndicatorWithoutBackground\n            })}\n            style={{ background: shouldRenderIndicatorWithoutBackground ? \"transparent\" : colorAsStyle }}\n            onClick={onClick}\n            tabIndex=\"-1\"\n            onMouseDown={e => e.preventDefault()} // this is for quill to not lose the selection\n          >\n            <div className={cx(styles.colorIndicatorWrapper)} style={colorIndicatorWrapperStyle}>\n              {shouldRenderIcon && (\n                <Icon\n                  icon={isSelected ? SelectedIndicatorIcon : ColorIndicatorIcon}\n                  className={cx({\n                    [styles.colorIconWhite]: !shouldRenderIndicatorWithoutBackground\n                  })}\n                  ignoreFocusStyle\n                />\n              )}\n            </div>\n          </Clickable>\n        </li>\n      </Tooltip>\n    );\n  }\n);\n\nexport default ColorPickerItemComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
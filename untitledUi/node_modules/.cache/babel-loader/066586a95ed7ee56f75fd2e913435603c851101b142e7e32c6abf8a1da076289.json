{"ast":null,"code":"import e from \"react\";\nimport t from \"moment\";\nimport o from \"./DatePickerHeader.module.scss.js\";\nimport r from \"../../Icon/Icon.js\";\nimport a from \"../../../../icons/dist/react/DropdownChevronUp.js\";\nimport n from \"../../../../icons/dist/react/DropdownChevronDown.js\";\nvar i = function (i) {\n  var c = i.isMonthYearSelection,\n    m = i.onToggleMonthYearPicker,\n    s = i.hideNavigationKeys,\n    l = i[\"data-testid\"],\n    d = i.ariaLabel,\n    p = void 0 === d ? \"Toggle select year\" : d,\n    f = t(i.currentDate.valueOf()),\n    u = f.format(\"MMMM\"),\n    v = f.format(\"YYYY\");\n  return e.createElement(\"div\", {\n    className: o.datePickerHeader\n  }, e.createElement(\"div\", null, u + \" \" + v), !s && e.createElement(\"button\", {\n    \"data-testid\": \"\".concat(l, \"-year-toggle\"),\n    type: \"button\",\n    className: o.button,\n    \"aria-label\": p,\n    onClick: m\n  }, e.createElement(\"div\", {\n    className: o.buttonContent\n  }, e.createElement(r, {\n    iconType: \"svg\",\n    icon: c ? a : n,\n    iconSize: 24\n  }))));\n};\nexport { i as default };","map":{"version":3,"names":["i","DatePickerHeader","c","isMonthYearSelection","m","onToggleMonthYearPicker","s","hideNavigationKeys","l","d","ariaLabel","p","f","t","currentDate","valueOf","u","format","v","e","createElement","className","o","datePickerHeader","concat","type","button","onClick","buttonContent","r","iconType","icon","a","n","iconSize","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/DatePicker/DatePickerHeader/DatePickerHeader.tsx"],"sourcesContent":["import React from \"react\";\nimport { DropdownChevronUp, DropdownChevronDown } from \"@vibe/icons\";\nimport moment from \"moment\";\nimport { Moment } from \"../types\";\nimport styles from \"./DatePickerHeader.module.scss\";\nimport Icon from \"../../Icon/Icon\";\n\nexport interface DatePickerHeaderProps {\n  /**\n   * The currently shown date.\n   */\n  currentDate: Moment;\n  /**\n   * If true, the month and year selection view is active.\n   */\n  isMonthYearSelection: boolean;\n  /**\n   * Callback fired when toggling the month and year picker.\n   */\n  onToggleMonthYearPicker: () => void;\n  /**\n   * If true, hides the navigation buttons.\n   */\n  hideNavigationKeys: boolean;\n  /**\n   * Test ID for testing purposes.\n   */\n  \"data-testid\"?: string;\n  /**\n   * The ARIA label for the toggle button.\n   */\n  ariaLabel?: string;\n}\n\nconst DatePickerHeader = (props: DatePickerHeaderProps) => {\n  const {\n    currentDate,\n    isMonthYearSelection,\n    onToggleMonthYearPicker,\n    hideNavigationKeys,\n    \"data-testid\": dateTestId,\n    ariaLabel = \"Toggle select year\"\n  } = props;\n\n  const localedDated = moment(currentDate.valueOf());\n  const month = localedDated.format(\"MMMM\");\n  const year = localedDated.format(\"YYYY\");\n  const string = month + \" \" + year;\n  return (\n    <div className={styles.datePickerHeader}>\n      <div>{string}</div>\n      {!hideNavigationKeys && (\n        <button\n          data-testid={`${dateTestId}-year-toggle`}\n          type=\"button\"\n          className={styles.button}\n          aria-label={ariaLabel}\n          onClick={onToggleMonthYearPicker}\n        >\n          <div className={styles.buttonContent}>\n            <Icon iconType=\"svg\" icon={isMonthYearSelection ? DropdownChevronUp : DropdownChevronDown} iconSize={24} />\n          </div>\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default DatePickerHeader;\n"],"mappings":";;;;;;AAkCA,IAAMA,CAAA,GAAmB,SAAAC,CAACD,CAAA;EACxB,IAEEE,CAAA,GAKEF,CAAA,CALFG,oBAAA;IACAC,CAAA,GAIEJ,CAAA,CAJFK,uBAAA;IACAC,CAAA,GAGEN,CAAA,CAHFO,kBAAA;IACeC,CAAA,GAEbR,CAAA,CAFF;IAAaS,CAAA,GAEXT,CAAA,CADFU,SAAA;IAAAC,CAAA,QAAY,MAAHF,CAAA,GAAG,uBAAoBA,CAAA;IAG5BG,CAAA,GAAeC,CAAA,CAFjBb,CAAA,CANFc,WAAA,CAQsCC,OAAA;IAClCC,CAAA,GAAQJ,CAAA,CAAaK,MAAA,CAAO;IAC5BC,CAAA,GAAON,CAAA,CAAaK,MAAA,CAAO;EAEjC,OACEE,CAAA,CAAKC,aAAA;IAAAC,SAAA,EAAWC,CAAA,CAAOC;EAAA,GACrBJ,CAAA,CAAAC,aAAA,cAHWJ,CAAA,GAAQ,MAAME,CAAA,IAIvBZ,CAAA,IACAa,CAAA,CAAAC,aAAA;IAAA,kBAAAI,MAAA,CACkBhB,CAAA,EAAwB;IACxCiB,IAAA,EAAK;IACLJ,SAAA,EAAWC,CAAA,CAAOI,MAAA;IAAA,cACNf,CAAA;IACZgB,OAAA,EAASvB;EAAA,GAETe,CAAA,CAAAC,aAAA;IAAKC,SAAA,EAAWC,CAAA,CAAOM;EAAA,GACrBT,CAAA,CAACC,aAAA,CAAAS,CAAA,EAAK;IAAAC,QAAA,EAAS;IAAMC,IAAA,EAAM7B,CAAA,GAAuB8B,CAAA,GAAoBC,CAAA;IAAqBC,QAAA,EAAU;EAAA,KAMjH;AAAA;AAAA,SAAAlC,CAAA,IAAAmC,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { slicedToArray as e, defineProperty as r } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { camelCase as t } from \"lodash-es\";\nimport o from \"classnames\";\nimport { getTestId as a, ComponentDefaultTestId as l } from \"../../tests/testIds.js\";\nimport { getStyle as s } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport i, { forwardRef as n, useRef as m, useState as c, useMemo as p, useCallback as d, useEffect as u } from \"react\";\nimport f from \"../Text/Text.js\";\nimport b from \"./Leg.js\";\nimport { LabelAllowedColor as j, LabelKind as v, mapSizesToTextSize as k } from \"./LabelConstants.js\";\nimport { contentColors as C } from \"../../utils/colors-vars-map.js\";\nimport { withStaticProps as E } from \"../../types/withStaticProps.js\";\nimport g from \"../../hooks/useClickableProps/useClickableProps.js\";\nimport y from \"../../hooks/useMergeRef.js\";\nimport L from \"./Label.module.scss.js\";\nimport h from \"./LabelCelebrationAnimation.js\";\nvar x = E(n(function (n, j) {\n  var v = n.className,\n    E = n.labelClassName,\n    x = n.kind,\n    N = void 0 === x ? \"fill\" : x,\n    P = n.color,\n    A = void 0 === P ? \"primary\" : P,\n    H = n.text,\n    T = void 0 === H ? \"\" : H,\n    I = n.isLegIncluded,\n    w = void 0 !== I && I,\n    B = n.id,\n    M = n[\"data-testid\"],\n    W = n.onClick,\n    _ = n.celebrationAnimation,\n    z = n.size,\n    D = void 0 === z ? \"medium\" : z,\n    O = m(null),\n    R = y(j, O),\n    S = c(_),\n    q = e(S, 2),\n    F = q[0],\n    G = q[1],\n    J = !!W,\n    K = p(function () {\n      return o(L.label, s(L, t(\"kind-\" + N)), s(L, t(\"color-\" + A)), r(r(r({}, L.withLeg, w), L.clickable, J), L.small, \"small\" === D), E);\n    }, [N, A, w, E, J, D]),\n    Q = p(function () {\n      if (C.includes(A)) return {\n        backgroundColor: \"var(--color-\".concat(A, \")\")\n      };\n    }, [A]),\n    U = d(function (e) {\n      W && (e.preventDefault(), W(e));\n    }, [W]),\n    V = g({\n      onClick: U,\n      id: B,\n      ariaHidden: !1,\n      ariaHasPopup: !1,\n      ariaExpanded: !1\n    }, O);\n  u(function () {\n    G(_);\n  }, [_]);\n  var X = p(function () {\n    return i.createElement(\"span\", Object.assign({}, J && V, {\n      className: o(r({}, L.clickableWrapper, J), v),\n      \"data-testid\": M || a(l.LABEL, B),\n      ref: R\n    }), i.createElement(f, {\n      style: Q,\n      element: \"span\",\n      type: k[D],\n      className: K,\n      color: \"onInverted\",\n      \"data-celebration-text\": F\n    }, i.createElement(f, {\n      element: \"span\",\n      type: k[D],\n      color: \"inherit\",\n      className: o(r({}, L.smallText, \"small\" === D))\n    }, T), i.createElement(\"span\", {\n      className: o(L.legWrapper)\n    }, w ? i.createElement(b, null) : null)));\n  }, [J, V, v, M, B, R, K, F, T, w, D, Q]);\n  return F && \"line\" === N ? i.createElement(h, {\n    onAnimationEnd: function () {\n      return G(!1);\n    }\n  }, X) : X;\n}), {\n  colors: j,\n  kinds: v\n});\nexport { x as default };","map":{"version":3,"names":["x","E","n","j","v","className","labelClassName","kind","N","P","color","A","H","text","T","I","isLegIncluded","w","B","id","M","W","onClick","_","celebrationAnimation","z","size","D","O","m","R","y","S","c","q","e","F","G","J","K","p","o","L","label","s","t","r","withLeg","clickable","small","Q","C","includes","backgroundColor","concat","U","d","preventDefault","V","g","ariaHidden","ariaHasPopup","ariaExpanded","u","X","i","createElement","Object","assign","clickableWrapper","a","l","LABEL","ref","f","style","element","type","k","smallText","legWrapper","b","h","onAnimationEnd","colors","kinds","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/Label/Label.tsx"],"sourcesContent":["import { camelCase } from \"lodash-es\";\nimport cx from \"classnames\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport React, { forwardRef, useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport Text from \"../Text/Text\";\nimport Leg from \"./Leg\";\nimport { LabelAllowedColor as LabelColorEnum, LabelKind as LabelKindEnum, mapSizesToTextSize } from \"./LabelConstants\";\nimport { LabelColor, LabelKind, ContentColor } from \"./Label.types\";\nimport { contentColors } from \"../../utils/colors-vars-map\";\nimport { VibeComponentProps, withStaticProps } from \"../../types\";\nimport useClickableProps from \"../../hooks/useClickableProps/useClickableProps\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport styles from \"./Label.module.scss\";\nimport LabelCelebrationAnimation from \"./LabelCelebrationAnimation\";\nimport { LabelSizes } from \"./Label.types\";\n\nexport interface LabelProps extends VibeComponentProps {\n  /**\n   * Class name applied to the inner text wrapper.\n   */\n  labelClassName?: string;\n  /**\n   * The visual style of the label.\n   */\n  kind?: LabelKind;\n  /**\n   * The background color of the label.\n   */\n  color?: LabelColor;\n  /**\n   * The text content of the label.\n   */\n  text?: string;\n  /**\n   * If true, includes a leg (decorative extension).\n   */\n  isLegIncluded?: boolean;\n  /**\n   * Callback fired when the label is clicked.\n   */\n  onClick?: (event: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void;\n  /**\n   * If true, triggers a celebration animation.\n   */\n  celebrationAnimation?: boolean;\n  /**\n   * The size of the label.\n   */\n  size?: LabelSizes;\n}\n\nconst Label = forwardRef<HTMLElement, LabelProps>(\n  (\n    {\n      className,\n      labelClassName,\n      kind = \"fill\",\n      color = \"primary\",\n      text = \"\",\n      isLegIncluded = false,\n      id,\n      \"data-testid\": dataTestId,\n      onClick,\n      celebrationAnimation,\n      size = \"medium\"\n    }: LabelProps,\n    ref\n  ) => {\n    const labelRef = useRef<HTMLSpanElement>(null);\n    const mergedRef = useMergeRef(ref, labelRef);\n    const [isCelebrationAnimation, setIsCelebrationAnimation] = useState(celebrationAnimation);\n\n    const isClickable = Boolean(onClick);\n\n    const classNames = useMemo(\n      () =>\n        cx(\n          styles.label,\n          getStyle(styles, camelCase(\"kind\" + \"-\" + kind)),\n          getStyle(styles, camelCase(\"color\" + \"-\" + color)),\n          {\n            [styles.withLeg]: isLegIncluded,\n            [styles.clickable]: isClickable,\n            [styles.small]: size === \"small\"\n          },\n          labelClassName\n        ),\n      [kind, color, isLegIncluded, labelClassName, isClickable, size]\n    );\n\n    const backgroundColorStyle = useMemo(() => {\n      if (contentColors.includes(color as ContentColor)) {\n        return { backgroundColor: `var(--color-${color})` };\n      }\n    }, [color]);\n\n    const onClickCallback = useCallback(\n      (event: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        if (onClick) {\n          event.preventDefault();\n          onClick(event);\n        }\n      },\n      [onClick]\n    );\n\n    const clickableProps = useClickableProps(\n      {\n        onClick: onClickCallback,\n        id,\n        ariaHidden: false,\n        ariaHasPopup: false,\n        ariaExpanded: false\n      },\n      labelRef\n    );\n\n    useEffect(() => {\n      setIsCelebrationAnimation(celebrationAnimation);\n    }, [celebrationAnimation]);\n\n    const label = useMemo(() => {\n      return (\n        <span\n          {...(isClickable && clickableProps)}\n          className={cx({ [styles.clickableWrapper]: isClickable }, className)}\n          data-testid={dataTestId || getTestId(ComponentDefaultTestId.LABEL, id)}\n          ref={mergedRef}\n        >\n          <Text\n            style={backgroundColorStyle}\n            element=\"span\"\n            type={mapSizesToTextSize[size]}\n            className={classNames}\n            color=\"onInverted\"\n            data-celebration-text={isCelebrationAnimation}\n          >\n            <Text\n              element=\"span\"\n              type={mapSizesToTextSize[size]}\n              color=\"inherit\"\n              className={cx({ [styles.smallText]: size === \"small\" })}\n            >\n              {text}\n            </Text>\n            <span className={cx(styles.legWrapper)}>{isLegIncluded ? <Leg /> : null}</span>\n          </Text>\n        </span>\n      );\n    }, [\n      isClickable,\n      clickableProps,\n      className,\n      dataTestId,\n      id,\n      mergedRef,\n      classNames,\n      isCelebrationAnimation,\n      text,\n      isLegIncluded,\n      size,\n      backgroundColorStyle\n    ]);\n\n    // Celebration animation is applied only for line kind\n    if (isCelebrationAnimation && kind === \"line\") {\n      return (\n        <LabelCelebrationAnimation onAnimationEnd={() => setIsCelebrationAnimation(false)}>\n          {label}\n        </LabelCelebrationAnimation>\n      );\n    }\n\n    return label;\n  }\n);\n\ninterface LabelStaticProps {\n  colors: typeof LabelColorEnum;\n  kinds: typeof LabelKindEnum;\n}\n\nexport default withStaticProps<LabelProps, LabelStaticProps>(Label, {\n  colors: LabelColorEnum,\n  kinds: LabelKindEnum\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { __rest as t } from \"../../../_virtual/_tslib.js\";\nimport i, { useContext as e, useMemo as s } from \"react\";\nimport n from \"classnames\";\nimport r from \"../Steps/Steps.js\";\nimport o from \"./TipseenBasicContent.js\";\nimport a from \"./TipseenWizard.module.scss.js\";\nimport { TipseenContext as m } from \"./Tipseen.js\";\nimport { TipseenColor as l } from \"./TipseenConstants.js\";\nvar p = function (p) {\n  var c = p.id,\n    u = p.title,\n    d = p.onFinish,\n    f = p.titleClassName,\n    z = p.className,\n    N = t(p, [\"id\", \"title\", \"onFinish\", \"titleClassName\", \"className\"]),\n    j = e(m),\n    C = s(function () {\n      return j === l.INVERTED ? \"on-inverted-background\" : \"on-primary-color\";\n    }, [j]),\n    T = s(function () {\n      return {\n        kind: \"primary\",\n        size: \"small\"\n      };\n    }, []),\n    h = s(function () {\n      return {\n        size: \"small\"\n      };\n    }, []),\n    B = s(function () {\n      return {\n        kind: \"primary\",\n        size: \"small\",\n        children: \"Got it\"\n      };\n    }, []);\n  return i.createElement(o, {\n    title: u,\n    className: n(a.tipseenWizard, z),\n    titleClassName: f,\n    id: c || \"wizard\"\n  }, i.createElement(r, Object.assign({\n    className: n(a.tipseenWizardWizard),\n    color: C,\n    isContentOnTop: !0,\n    areButtonsIconsHidden: !0,\n    backButtonProps: h,\n    nextButtonProps: T,\n    finishButtonProps: B,\n    onFinish: d\n  }, N)));\n};\nexport { p as default };","map":{"version":3,"names":["p","TipseenWizard","c","id","u","title","d","onFinish","f","titleClassName","z","className","N","t","j","e","m","C","s","l","INVERTED","T","kind","size","h","B","children","i","createElement","o","n","a","tipseenWizard","r","Object","assign","tipseenWizardWizard","color","isContentOnTop","areButtonsIconsHidden","backButtonProps","nextButtonProps","finishButtonProps","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/Tipseen/TipseenWizard.tsx"],"sourcesContent":["import React, { FC, useContext, useMemo } from \"react\";\nimport cx from \"classnames\";\nimport Steps, { StepsProps } from \"../Steps/Steps\";\nimport TipseenBasicContent from \"./TipseenBasicContent\";\nimport styles from \"./TipseenWizard.module.scss\";\nimport { TipseenContext } from \"./Tipseen\";\nimport { TipseenColor } from \"./TipseenConstants\";\nimport { ButtonSize, ButtonType } from \"../Button\";\n\nconst FINISH_TEXT = \"Got it\";\n\nexport interface TipseenWizardProps extends StepsProps {\n  /**\n   * The title text displayed in the Tipseen Wizard.\n   */\n  title?: string;\n  /**\n   * Class name applied to the Tipseen title.\n   */\n  titleClassName?: string;\n  /**\n   * Callback fired when the wizard is completed.\n   */\n  onFinish?: (e: React.MouseEvent | React.KeyboardEvent) => void;\n}\n\nconst TipseenWizard: FC<TipseenWizardProps> = ({ id, title, onFinish, titleClassName, className, ...stepsProps }) => {\n  const overrideStepsProps = stepsProps as StepsProps;\n  const color = useContext(TipseenContext);\n  const buttonColor = useMemo(() => {\n    return color === TipseenColor.INVERTED ? \"on-inverted-background\" : \"on-primary-color\";\n  }, [color]);\n\n  const nextButtonProps = useMemo(\n    () => ({\n      kind: \"primary\" as ButtonType,\n      size: \"small\" as ButtonSize\n    }),\n    []\n  );\n  const backButtonProps = useMemo(\n    () => ({\n      size: \"small\" as ButtonSize\n    }),\n    []\n  );\n  const finishButtonProps = useMemo(\n    () => ({\n      kind: \"primary\" as ButtonType,\n      size: \"small\" as ButtonSize,\n      children: FINISH_TEXT\n    }),\n    []\n  );\n  return (\n    <TipseenBasicContent\n      title={title}\n      className={cx(styles.tipseenWizard, className)}\n      titleClassName={titleClassName}\n      id={id || \"wizard\"}\n    >\n      <Steps\n        className={cx(styles.tipseenWizardWizard)}\n        color={buttonColor}\n        isContentOnTop\n        areButtonsIconsHidden\n        backButtonProps={backButtonProps}\n        nextButtonProps={nextButtonProps}\n        finishButtonProps={finishButtonProps}\n        onFinish={onFinish}\n        {...overrideStepsProps}\n      />\n    </TipseenBasicContent>\n  );\n};\nexport default TipseenWizard;\n"],"mappings":";;;;;;;;AASA,IAiBMA,CAAA,GAAwC,SAAAC,CAACD,CAAA;EAAA,IAAEE,CAAA,GAA+DF,CAAA,CAA/DG,EAAA;IAAIC,CAAA,GAA2DJ,CAAA,CAA3DK,KAAA;IAAOC,CAAA,GAAoDN,CAAA,CAApDO,QAAA;IAAUC,CAAA,GAA0CR,CAAA,CAA1CS,cAAA;IAAgBC,CAAA,GAA0BV,CAAA,CAA1BW,SAAA;IAC9EC,CAAA,GADsGC,CAAA,CAAAb,CAAA,EAA/D;IAEvCc,CAAA,GAAQC,CAAA,CAAWC,CAAA;IACnBC,CAAA,GAAcC,CAAA,CAAQ;MAC1B,OAAOJ,CAAA,KAAUK,CAAA,CAAaC,QAAA,GAAW,2BAA2B,kBACtE;IAAA,GAAG,CAACN,CAAA;IAEEO,CAAA,GAAkBH,CAAA,CACtB;MAAA,OAAO;QACLI,IAAA,EAAM;QACNC,IAAA,EAAM;MAAA,CACN;IAAA,GACF;IAEIC,CAAA,GAAkBN,CAAA,CACtB;MAAA,OAAO;QACLK,IAAA,EAAM;MAAA,CACN;IAAA,GACF;IAEIE,CAAA,GAAoBP,CAAA,CACxB;MAAA,OAAO;QACLI,IAAA,EAAM;QACNC,IAAA,EAAM;QACNG,QAAA,EAzCc;MAAA,CA0Cd;IAAA,GACF;EAEF,OACEC,CAAA,CAACC,aAAA,CAAAC,CAAA,EACC;IAAAxB,KAAA,EAAOD,CAAA;IACPO,SAAA,EAAWmB,CAAA,CAAGC,CAAA,CAAOC,aAAA,EAAetB,CAAA;IACpCD,cAAA,EAAgBD,CAAA;IAChBL,EAAA,EAAID,CAAA,IAAM;EAAA,GAEVyB,CAAA,CAAAC,aAAA,CAACK,CAAA,EACCC,MAAA,CAAAC,MAAA;IAAAxB,SAAA,EAAWmB,CAAA,CAAGC,CAAA,CAAOK,mBAAA;IACrBC,KAAA,EAAOpB,CAAA;IACPqB,cAAA;IACAC,qBAAA,GAAqB;IACrBC,eAAA,EAAiBhB,CAAA;IACjBiB,eAAA,EAAiBpB,CAAA;IACjBqB,iBAAA,EAAmBjB,CAAA;IACnBlB,QAAA,EAAUD;EAAA,GACNM,CAAA,GAIZ;AAAA;AAAA,SAAAZ,CAAA,IAAA2C,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { __rest as t } from \"../../../../../_virtual/_tslib.js\";\nimport e, { forwardRef as i } from \"react\";\nimport \"../../../Menu/Menu/Menu.js\";\nimport n from \"../../../Menu/MenuItem/MenuItem.js\";\nimport \"../../../Menu/MenuItemButton/MenuItemButton.js\";\nimport \"../../../Menu/MenuDivider/MenuDivider.js\";\nimport \"../../../Menu/MenuTitle/MenuTitle.js\";\nimport \"../../../Menu/MenuGridItem/MenuGridItem.js\";\nimport { getTestId as r } from \"../../../../tests/testIds.js\";\nimport { ComponentDefaultTestId as o } from \"../../../../tests/constants.js\";\nvar s = i(function (i, s) {\n  var u = i.id,\n    m = i[\"data-testid\"],\n    M = i.link,\n    d = i.onClick,\n    a = t(i, [\"id\", \"data-testid\", \"link\", \"onClick\"]);\n  return e.createElement(n, Object.assign({\n    id: u,\n    onClick: M ? function (t) {\n      d && d(t), M && window.open(M);\n    } : d,\n    \"data-testid\": m || r(o.BREADCRUMB_MENU_ITEM, u),\n    ref: s\n  }, a));\n});\ns.isMenuChild = !0, s.isSelectable = !0;\nexport { s as default };","map":{"version":3,"names":["s","i","u","id","m","M","link","d","onClick","a","t","e","createElement","n","Object","assign","window","open","r","o","BREADCRUMB_MENU_ITEM","ref","isMenuChild","isSelectable","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/BreadcrumbsBar/BreadcrumbMenu/BreadcrumbMenuItem/BreadcrumbMenuItem.tsx"],"sourcesContent":["import React, { forwardRef, ForwardRefExoticComponent, RefAttributes } from \"react\";\nimport { MenuItem, MenuItemProps } from \"../../../Menu\";\nimport { getTestId } from \"../../../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../../../tests/constants\";\n\nexport interface BreadcrumbMenuItemProps extends MenuItemProps {\n  /** Link to navigate to when item is clicked */\n  link?: string;\n}\n\ninterface BreadcrumbMenuItemComponent\n  extends ForwardRefExoticComponent<BreadcrumbMenuItemProps & RefAttributes<unknown>> {\n  isMenuChild?: boolean;\n  isSelectable?: boolean;\n}\n\nconst BreadcrumbMenuItem: BreadcrumbMenuItemComponent = forwardRef<unknown, BreadcrumbMenuItemProps>(\n  (\n    { id, \"data-testid\": dataTestId, link, onClick, ...rest }: BreadcrumbMenuItemProps,\n    ref: React.ForwardedRef<HTMLLIElement>\n  ) => {\n    const handleClick = link\n      ? (event: React.MouseEvent | React.KeyboardEvent) => {\n          if (onClick) onClick(event);\n          if (link) window.open(link);\n        }\n      : onClick;\n\n    return (\n      <MenuItem\n        id={id}\n        onClick={handleClick}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.BREADCRUMB_MENU_ITEM, id)}\n        ref={ref}\n        {...rest}\n      />\n    );\n  }\n);\n\nBreadcrumbMenuItem.isMenuChild = true;\nBreadcrumbMenuItem.isSelectable = true;\n\nexport default BreadcrumbMenuItem;\n"],"mappings":";;;;;;;;;;AAgBM,IAAAA,CAAA,GAAkDC,CAAA,CACtD,UACEA,CAAA,EACAD,CAAA;EADA,IAAEE,CAAA,GAAgFD,CAAA,CAAhFE,EAAA;IAAmBC,CAAA,GAA6DH,CAAA,CAA5E;IAA2BI,CAAA,GAAiDJ,CAAA,CAAjDK,IAAA;IAAMC,CAAA,GAA2CN,CAAA,CAA3CO,OAAA;IAAYC,CAAA,GAAIC,CAAA,CAAAT,CAAA,EAAvD;EAUA,OACEU,CAAA,CAAAC,aAAA,CAACC,CAAA,EAAQC,MAAA,CAAAC,MAAA;IACPZ,EAAA,EAAID,CAAA;IACJM,OAAA,EAVgBH,CAAA,GAChB,UAACK,CAAA;MACKH,CAAA,IAASA,CAAA,CAAQG,CAAA,GACjBL,CAAA,IAAMW,MAAA,CAAOC,IAAA,CAAKZ,CAAA,CACvB;IAAA,IACDE,CAAA;IAKoB,eACPH,CAAA,IAAcc,CAAA,CAAUC,CAAA,CAAuBC,oBAAA,EAAsBlB,CAAA;IAClFmB,GAAA,EAAKrB;EAAA,GACDS,CAAA,EAGV;AAAA;AAGFT,CAAA,CAAmBsB,WAAA,IAAc,GACjCtB,CAAA,CAAmBuB,YAAA,IAAe;AAAA,SAAAvB,CAAA,IAAAwB,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
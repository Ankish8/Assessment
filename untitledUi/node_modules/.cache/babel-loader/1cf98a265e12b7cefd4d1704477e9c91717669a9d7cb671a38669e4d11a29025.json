{"ast":null,"code":"import { __rest as t } from \"../../../_virtual/_tslib.js\";\nimport e, { forwardRef as r, useRef as o } from \"react\";\nimport s from \"classnames\";\nimport { camelCase as a } from \"lodash-es\";\nimport i from \"../../hooks/useMergeRef.js\";\nimport { getTestId as m } from \"../../tests/testIds.js\";\nimport { ComponentDefaultTestId as n } from \"../../tests/constants.js\";\nimport { BadgeType as c, BadgeAlignments as d, BadgeAnchor as l } from \"./BadgeConstants.js\";\nimport p from \"./Indicator/Indicator.js\";\nimport f from \"../Counter/Counter.js\";\nimport { getStyle as j } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport u from \"./Badge.module.scss.js\";\nimport { withStaticProps as g } from \"../../types/withStaticProps.js\";\nimport \"../../utils/colors-vars-map.js\";\nvar v = g(r(function (r, c) {\n  var d = r.type,\n    l = void 0 === d ? \"indicator\" : d,\n    g = r.anchor,\n    v = void 0 === g ? \"top-end\" : g,\n    h = r.alignment,\n    b = void 0 === h ? \"rectangular\" : h,\n    y = r.className,\n    E = r.id,\n    C = r[\"data-testid\"],\n    N = r.children,\n    B = t(r, [\"type\", \"anchor\", \"alignment\", \"className\", \"id\", \"data-testid\", \"children\"]),\n    I = o(null),\n    M = i(c, I),\n    O = s(u.badge, j(u, a(v)), j(u, b)),\n    _ = B.color || \"indicator\" === l ? \"notification\" : \"negative\";\n  return e.createElement(\"div\", {\n    ref: M,\n    className: s(u.badgeWrapper, y),\n    id: E\n  }, N, e.createElement(\"div\", {\n    className: O,\n    \"data-testid\": C || m(n.BADGE, E)\n  }, \"indicator\" === l ? e.createElement(p, Object.assign({\n    color: _\n  }, B)) : \"counter\" === l && e.createElement(f, Object.assign({\n    color: _\n  }, B))));\n}), {\n  types: c,\n  alignments: d,\n  anchors: l\n});\nexport { v as default };","map":{"version":3,"names":["v","g","r","c","d","type","l","anchor","h","alignment","b","y","className","E","id","C","N","children","B","t","I","o","M","i","O","s","u","badge","j","a","_","color","e","createElement","ref","badgeWrapper","m","n","BADGE","p","Object","assign","f","types","alignments","anchors","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/Badge/Badge.tsx"],"sourcesContent":["import React, { forwardRef, useRef } from \"react\";\nimport cx from \"classnames\";\nimport { camelCase } from \"lodash-es\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../tests/constants\";\nimport {\n  BadgeAlignments as BadgeAlignmentsEnum,\n  BadgeAnchor as BadgeAnchorEnum,\n  BadgeType as BadgeTypeEnum\n} from \"./BadgeConstants\";\nimport { BadgeAlignments, BadgeAnchor, BadgeType } from \"./Badge.types\";\nimport Indicator, { IndicatorProps } from \"./Indicator/Indicator\";\nimport Counter, { CounterProps } from \"../Counter/Counter\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport { IndicatorColor } from \"./Indicator/IndicatorConstants\";\nimport { CounterColor } from \"../Counter/CounterConstants\";\nimport styles from \"./Badge.module.scss\";\nimport { VibeComponentProps, withStaticProps } from \"../../types\";\n\nexport interface BadgeBaseProps extends VibeComponentProps {\n  /**\n   * The position of the badge relative to its parent.\n   */\n  anchor?: BadgeAnchor;\n  /**\n   * The alignment style of the badge.\n   */\n  alignment?: BadgeAlignments;\n  /**\n   * The content the badge is attached to.\n   */\n  children: React.ReactNode;\n}\n\ninterface CounterBadgeProps extends CounterProps {\n  /**\n   * The type of badge, set to `\"counter\"` for numeric values.\n   */\n  type: Extract<BadgeType, \"counter\">;\n}\n\ninterface IndicatorBadgeProps extends IndicatorProps {\n  /**\n   * The type of badge, set to `\"indicator\"` for a simple dot.\n   */\n  type?: Extract<BadgeType, \"indicator\">;\n}\n\nexport type BadgeProps = BadgeBaseProps & (CounterBadgeProps | IndicatorBadgeProps);\n\nconst Badge = forwardRef(\n  (\n    {\n      type = \"indicator\",\n      anchor = \"top-end\",\n      alignment = \"rectangular\",\n      className,\n      id,\n      \"data-testid\": dataTestId,\n      children,\n      ...badgeProps\n    }: BadgeProps,\n    ref: React.ForwardedRef<HTMLElement>\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n    const badgeClassNames = cx(\n      styles.badge,\n      getStyle(styles, camelCase(anchor as unknown as string)),\n      getStyle(styles, alignment)\n    );\n\n    const color = badgeProps.color || type === \"indicator\" ? \"notification\" : \"negative\";\n\n    return (\n      <div ref={mergedRef} className={cx(styles.badgeWrapper, className)} id={id}>\n        {children}\n        <div className={badgeClassNames} data-testid={dataTestId || getTestId(ComponentDefaultTestId.BADGE, id)}>\n          {type === \"indicator\" ? (\n            <Indicator color={color as IndicatorColor} {...(badgeProps as IndicatorBadgeProps)} />\n          ) : (\n            type === \"counter\" && <Counter color={color as CounterColor} {...(badgeProps as CounterBadgeProps)} />\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n\ninterface BadgeStaticProps {\n  types: typeof BadgeTypeEnum;\n  alignments: typeof BadgeAlignmentsEnum;\n  anchors: typeof BadgeAnchorEnum;\n}\n\nexport default withStaticProps<BadgeProps, BadgeStaticProps>(Badge, {\n  types: BadgeTypeEnum,\n  alignments: BadgeAlignmentsEnum,\n  anchors: BadgeAnchorEnum\n});\n"],"mappings":";;;;;;;;;;;;;;AAmDA,IA6CeA,CAAA,GAAAC,CAAA,CA7CDC,CAAA,CACZ,UACEA,CAAA,EAUAC,CAAA;EAAA,IAAAC,CAAA,GAHUF,CAAA,CANRG,IAAA;IAAAC,CAAA,QAAO,MAAHF,CAAA,GAAG,cAAWA,CAAA;IAAAH,CAAA,GAMVC,CAAA,CALRK,MAAA;IAAAP,CAAA,QAAS,MAAHC,CAAA,GAAG,YAASA,CAAA;IAAAO,CAAA,GAKVN,CAAA,CAJRO,SAAA;IAAAC,CAAA,QAAY,MAAHF,CAAA,GAAG,gBAAaA,CAAA;IACzBG,CAAA,GAGQT,CAAA,CAHRU,SAAA;IACAC,CAAA,GAEQX,CAAA,CAFRY,EAAA;IACeC,CAAA,GACPb,CAAA,CADR;IACAc,CAAA,GAAQd,CAAA,CAARe,QAAA;IACGC,CAAA,GARLC,CAAA,CAAAjB,CAAA;IAYMkB,CAAA,GAAeC,CAAA,CAAO;IACtBC,CAAA,GAAYC,CAAA,CAAYpB,CAAA,EAAKiB,CAAA;IAC7BI,CAAA,GAAkBC,CAAA,CACtBC,CAAA,CAAOC,KAAA,EACPC,CAAA,CAASF,CAAA,EAAQG,CAAA,CAAU7B,CAAA,IAC3B4B,CAAA,CAASF,CAAA,EAAQhB,CAAA;IAGboB,CAAA,GAAQZ,CAAA,CAAWa,KAAA,IAAkB,gBAATzB,CAAA,GAAuB,iBAAiB;EAE1E,OACE0B,CAAA,CAAKC,aAAA;IAAAC,GAAA,EAAKZ,CAAA;IAAWV,SAAA,EAAWa,CAAA,CAAGC,CAAA,CAAOS,YAAA,EAAcxB,CAAA;IAAYG,EAAA,EAAID;EAAA,GACrEG,CAAA,EACDgB,CAAA,CAAKC,aAAA;IAAArB,SAAA,EAAWY,CAAA;IAA8B,eAAAT,CAAA,IAAcqB,CAAA,CAAUC,CAAA,CAAuBC,KAAA,EAAOzB,CAAA;EAAA,GACxF,gBAATP,CAAA,GACC0B,CAAA,CAACC,aAAA,CAAAM,CAAA,EAAUC,MAAA,CAAAC,MAAA;IAAAV,KAAA,EAAOD;EAAA,GAA8BZ,CAAA,KAEvC,cAATZ,CAAA,IAAsB0B,CAAA,CAAAC,aAAA,CAACS,CAAA,EAAOF,MAAA,CAAAC,MAAA;IAACV,KAAA,EAAOD;EAAA,GAA4BZ,CAAA,IAK5E;AAAA,IASkE;EAClEyB,KAAA,EAAOxC,CAAA;EACPyC,UAAA,EAAYxC,CAAA;EACZyC,OAAA,EAASvC;AAAA;AAAA,SAAAN,CAAA,IAAA8C,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
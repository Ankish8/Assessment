{"ast":null,"code":"import { defineProperty as t } from \"../../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { __rest as r } from \"../../../../_virtual/_tslib.js\";\nimport { getTestId as a, ComponentDefaultTestId as e } from \"../../../tests/testIds.js\";\nimport s from \"classnames\";\nimport i from \"../../Button/Button.js\";\nimport o from \"react\";\nimport n from \"./AlertBannerButton.module.scss.js\";\nvar m = function (m) {\n  var l = m.marginLeft,\n    d = void 0 !== l && l,\n    c = m.isDarkBackground,\n    u = void 0 !== c && c,\n    f = m.id,\n    p = m[\"data-testid\"],\n    B = r(m, [\"marginLeft\", \"isDarkBackground\", \"id\", \"data-testid\"]),\n    g = Object.assign(Object.assign({}, i.defaultProps), B),\n    j = s(t(t({}, n.marginLeft, d), n.darkBackground, u));\n  return o.createElement(\"div\", {\n    className: j,\n    \"data-testid\": p || a(e.ALERT_BANNER_BUTTON, f),\n    id: f\n  }, o.createElement(i, Object.assign({}, g, {\n    size: \"small\",\n    className: s(n.bannerButton),\n    color: \"on-primary-color\"\n  })));\n};\nObject.assign(m, {\n  isAlertBannerItem: !0\n});\nexport { m as default };","map":{"version":3,"names":["m","AlertBannerButton","l","marginLeft","d","c","isDarkBackground","u","f","id","p","B","r","g","Object","assign","i","defaultProps","j","s","t","n","darkBackground","o","createElement","className","a","e","ALERT_BANNER_BUTTON","size","bannerButton","color","isAlertBannerItem","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/AlertBanner/AlertBannerButton/AlertBannerButton.tsx"],"sourcesContent":["import { ComponentDefaultTestId, getTestId } from \"../../../tests/test-ids-utils\";\nimport cx from \"classnames\";\nimport Button, { ButtonProps } from \"../../Button/Button\";\nimport React, { FC } from \"react\";\nimport styles from \"./AlertBannerButton.module.scss\";\n\nexport interface AlertBannerButtonProps extends ButtonProps {\n  /**\n   * If true, the button is displayed on a dark background.\n   */\n  isDarkBackground?: boolean;\n}\n\nconst AlertBannerButton: FC<AlertBannerButtonProps> = ({\n  marginLeft = false,\n  isDarkBackground = false,\n  id,\n  \"data-testid\": dataTestId,\n  ...buttonProps\n}) => {\n  const overrideButtonProps = { ...Button.defaultProps, ...buttonProps };\n\n  const classNames = cx({\n    [styles.marginLeft]: marginLeft,\n    [styles.darkBackground]: isDarkBackground\n  });\n\n  return (\n    <div\n      className={classNames}\n      data-testid={dataTestId || getTestId(ComponentDefaultTestId.ALERT_BANNER_BUTTON, id)}\n      id={id}\n    >\n      <Button {...overrideButtonProps} size=\"small\" className={cx(styles.bannerButton)} color=\"on-primary-color\" />\n    </div>\n  );\n};\n\nObject.assign(AlertBannerButton, {\n  isAlertBannerItem: true\n});\n\nexport default AlertBannerButton;\n"],"mappings":";;;;;;;AAaA,IAAMA,CAAA,GAAgD,SAAAC,CAACD,CAAA;EAAA,IAAAE,CAAA,GAI5BF,CAAA,CAHzBG,UAAA;IAAAC,CAAA,QAAa,MAAHF,CAAA,IAAQA,CAAA;IAAAG,CAAA,GAGOL,CAAA,CAFzBM,gBAAA;IAAAC,CAAA,QAAmB,MAAHF,CAAA,IAAQA,CAAA;IACxBG,CAAA,GACyBR,CAAA,CADzBS,EAAA;IACeC,CAAA,GAAUV,CAAA,CAAzB;IACGW,CAAA,GAAWC,CAAA,CAAAZ,CAAA,EALuC;IAO/Ca,CAAA,GAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAA2BC,CAAA,CAAOC,YAAA,GAAiBN,CAAA;IAEnDO,CAAA,GAAaC,CAAA,CAAEC,CAAA,CAAAA,CAAA,KAClBC,CAAA,CAAOlB,UAAA,EAAaC,CAAA,GACpBiB,CAAA,CAAOC,cAAA,EAAiBf,CAAA;EAG3B,OACEgB,CAAA,CACEC,aAAA;IAAAC,SAAA,EAAWP,CAAA;IAAU,eACRR,CAAA,IAAcgB,CAAA,CAAUC,CAAA,CAAuBC,mBAAA,EAAqBpB,CAAA;IACjFC,EAAA,EAAID;EAAA,GAEJe,CAAA,CAACC,aAAA,CAAAR,CAAA,EAAAF,MAAA,CAAAC,MAAA,KAAWF,CAAA,EAAmB;IAAEgB,IAAA,EAAK;IAAQJ,SAAA,EAAWN,CAAA,CAAGE,CAAA,CAAOS,YAAA;IAAeC,KAAA,EAAM;EAAA,IAG9F;AAAA;AAEAjB,MAAA,CAAOC,MAAA,CAAOf,CAAA,EAAmB;EAC/BgC,iBAAA,GAAmB;AAAA;AAAA,SAAAhC,CAAA,IAAAiC,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
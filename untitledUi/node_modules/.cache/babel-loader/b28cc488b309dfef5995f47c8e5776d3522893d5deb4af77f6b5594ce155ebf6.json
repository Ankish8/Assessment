{"ast":null,"code":"import e, { forwardRef as t, useRef as a, useCallback as o, useEffect as r, useMemo as i } from \"react\";\nimport n from \"classnames\";\nimport { isNil as s, noop as c } from \"lodash-es\";\nimport l from \"../Icon/Icon.js\";\nimport { useSupportFirefoxLabelClick as m } from \"./hooks/useSupportFirefoxLabelClick.js\";\nimport d from \"../../hooks/useMergeRef.js\";\nimport { getTestId as u } from \"../../tests/testIds.js\";\nimport { ComponentDefaultTestId as p, ComponentVibeId as f } from \"../../tests/constants.js\";\nimport C from \"../Text/Text.js\";\nimport b from \"./Checkbox.module.scss.js\";\nimport h from \"../../../icons/dist/react/Remove.js\";\nimport v from \"../../../icons/dist/react/Check.js\";\nvar k = t(function (t, k) {\n  var x = t.className,\n    E = t.checkboxClassName,\n    j = t.labelClassName,\n    N = t.ariaLabel,\n    y = t.label,\n    B = t.ariaLabelledBy,\n    F = t.onChange,\n    g = void 0 === F ? c : F,\n    H = t.checked,\n    w = t.autoFocus,\n    I = t.indeterminate,\n    K = void 0 !== I && I,\n    L = t.disabled,\n    O = void 0 !== L && L,\n    X = t.defaultChecked,\n    A = t.tabIndex,\n    R = t.value,\n    S = void 0 === R ? \"\" : R,\n    T = t.name,\n    q = void 0 === T ? \"\" : T,\n    M = t.id,\n    _ = t[\"data-testid\"],\n    z = a(null),\n    U = d(k, z),\n    D = a(null),\n    G = o(function () {\n      var e = z.current;\n      e && window.requestAnimationFrame(function () {\n        window.requestAnimationFrame(function () {\n          e.blur();\n        });\n      });\n    }, [z]),\n    J = X;\n  s(J) && s(H) && (J = !1), r(function () {\n    z.current && (z.current.indeterminate = K);\n  }, [z, K]);\n  var P = m({\n      inputRef: z\n    }).onClickCapture,\n    Q = i(function () {\n      return N || (\"string\" == typeof y ? y : \"\");\n    }, [N, y]);\n  return e.createElement(\"label\", {\n    className: n(b.wrapper, x),\n    onMouseUp: G,\n    \"data-testid\": _ || u(p.CHECKBOX, M),\n    htmlFor: M,\n    onClickCapture: P\n  }, e.createElement(\"input\", {\n    ref: U,\n    id: M,\n    className: b.input,\n    value: S,\n    name: q,\n    type: \"checkbox\",\n    autoFocus: w,\n    onChange: g,\n    defaultChecked: J,\n    disabled: O,\n    \"aria-label\": Q,\n    \"aria-labelledby\": B,\n    checked: H,\n    tabIndex: A\n  }), e.createElement(\"div\", {\n    className: n(b.checkbox, E),\n    ref: D,\n    \"data-testid\": u(p.CHECKBOX_CHECKBOX, M),\n    \"data-vibe\": f.CHECKBOX\n  }, e.createElement(l, {\n    className: b.icon,\n    iconType: \"svg\",\n    icon: K ? h : v,\n    ignoreFocusStyle: !0,\n    ariaHidden: !0,\n    iconSize: \"16\"\n  })), !1 === y ? null : e.createElement(C, {\n    element: \"span\",\n    type: \"text2\",\n    className: n(b.label, j),\n    \"data-testid\": u(p.CHECKBOX_LABEL, M)\n  }, y));\n});\nexport { k as default };","map":{"version":3,"names":["k","t","x","className","E","checkboxClassName","j","labelClassName","N","ariaLabel","y","label","B","ariaLabelledBy","F","onChange","g","c","H","checked","w","autoFocus","I","indeterminate","K","L","disabled","O","X","defaultChecked","A","tabIndex","R","value","S","T","name","q","M","id","_","z","a","U","d","D","G","o","e","current","window","requestAnimationFrame","blur","J","s","r","P","m","inputRef","onClickCapture","Q","i","createElement","n","b","wrapper","onMouseUp","u","p","CHECKBOX","htmlFor","ref","input","type","checkbox","CHECKBOX_CHECKBOX","f","l","icon","iconType","h","v","ignoreFocusStyle","ariaHidden","iconSize","C","element","CHECKBOX_LABEL","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/Checkbox/Checkbox.tsx"],"sourcesContent":["import React, { forwardRef, useCallback, useEffect, useMemo, useRef } from \"react\";\nimport cx from \"classnames\";\nimport { isNil, noop as NOOP } from \"lodash-es\";\nimport Icon from \"../Icon/Icon\";\nimport { Check, Remove } from \"@vibe/icons\";\nimport { useSupportFirefoxLabelClick } from \"./hooks/useSupportFirefoxLabelClick\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport { VibeComponentProps } from \"../../types\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId, ComponentVibeId } from \"../../tests/constants\";\nimport Text from \"../Text/Text\";\nimport styles from \"./Checkbox.module.scss\";\n\nexport interface CheckBoxProps extends VibeComponentProps {\n  /**\n   * Class name applied to the checkbox element.\n   */\n  checkboxClassName?: string;\n  /**\n   * Class name applied to the label element.\n   */\n  labelClassName?: string;\n  /**\n   * The label of the checkbox for accessibility.\n   */\n  ariaLabel?: string;\n  /**\n   * The content displayed next to the checkbox.\n   */\n  label?: React.ReactNode | Array<React.ReactNode>;\n  /**\n   * The ID of an element describing the checkbox.\n   */\n  ariaLabelledBy?: string;\n  /**\n   * Callback fired when the checkbox value changes.\n   */\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  /**\n   * If true, controls the checked state of the checkbox.\n   */\n  checked?: boolean;\n  /**\n   * If true, displays an indeterminate state.\n   */\n  indeterminate?: boolean;\n  /**\n   * If true, the checkbox automatically receives focus.\n   */\n  autoFocus?: boolean;\n  /**\n   * If true, the checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * The initial checked state of the checkbox.\n   */\n  defaultChecked?: boolean;\n  /**\n   * The value submitted with the form when checked.\n   */\n  value?: string;\n  /**\n   * The name of the checkbox, used for form submission.\n   */\n  name?: string;\n  /**\n   * The tab order of the checkbox.\n   */\n  tabIndex?: number;\n}\n\nconst Checkbox = forwardRef(\n  (\n    {\n      className,\n      checkboxClassName,\n      labelClassName,\n      ariaLabel,\n      label,\n      ariaLabelledBy,\n      onChange = NOOP,\n      checked,\n      autoFocus,\n      indeterminate = false,\n      disabled = false,\n      defaultChecked,\n      tabIndex,\n      value = \"\",\n      name = \"\",\n      id,\n      \"data-testid\": dataTestId\n    }: CheckBoxProps,\n    ref: React.ForwardedRef<HTMLInputElement>\n  ) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const mergedInputRef = useMergeRef(ref, inputRef);\n    const iconContainerRef = useRef<HTMLDivElement>(null);\n\n    const onMouseUpCallback = useCallback(() => {\n      const input = inputRef.current;\n      if (!input) return;\n\n      window.requestAnimationFrame(() => {\n        window.requestAnimationFrame(() => {\n          input.blur();\n        });\n      });\n    }, [inputRef]);\n    let overrideDefaultChecked = defaultChecked;\n\n    // If component did not receive default checked and checked props, choose default checked as\n    // default behavior (handle isChecked logic inside input) and set default value\n    if (isNil(overrideDefaultChecked) && isNil(checked)) {\n      overrideDefaultChecked = false;\n    }\n\n    useEffect(() => {\n      if (inputRef.current) {\n        inputRef.current.indeterminate = indeterminate;\n      }\n    }, [inputRef, indeterminate]);\n\n    const { onClickCapture: onClickCaptureLabel } = useSupportFirefoxLabelClick({ inputRef });\n\n    const finalAriaLabel = useMemo(() => {\n      if (ariaLabel) return ariaLabel;\n      if (typeof label === \"string\") return label;\n      return \"\";\n    }, [ariaLabel, label]);\n\n    return (\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n      <label\n        className={cx(styles.wrapper, className)}\n        onMouseUp={onMouseUpCallback}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.CHECKBOX, id)}\n        htmlFor={id}\n        onClickCapture={onClickCaptureLabel}\n      >\n        <input\n          ref={mergedInputRef}\n          id={id}\n          className={styles.input}\n          value={value}\n          name={name}\n          type=\"checkbox\"\n          autoFocus={autoFocus}\n          onChange={onChange}\n          defaultChecked={overrideDefaultChecked}\n          disabled={disabled}\n          aria-label={finalAriaLabel}\n          aria-labelledby={ariaLabelledBy}\n          checked={checked}\n          tabIndex={tabIndex}\n        />\n        <div\n          className={cx(styles.checkbox, checkboxClassName)}\n          ref={iconContainerRef}\n          data-testid={getTestId(ComponentDefaultTestId.CHECKBOX_CHECKBOX, id)}\n          data-vibe={ComponentVibeId.CHECKBOX}\n        >\n          <Icon\n            className={styles.icon}\n            iconType=\"svg\"\n            icon={indeterminate ? Remove : Check}\n            ignoreFocusStyle\n            ariaHidden={true}\n            iconSize=\"16\"\n          />\n        </div>\n        {label === false ? null : (\n          <Text\n            element=\"span\"\n            type=\"text2\"\n            className={cx(styles.label, labelClassName)}\n            data-testid={getTestId(ComponentDefaultTestId.CHECKBOX_LABEL, id)}\n          >\n            {label}\n          </Text>\n        )}\n      </label>\n    );\n  }\n);\n\nexport default Checkbox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
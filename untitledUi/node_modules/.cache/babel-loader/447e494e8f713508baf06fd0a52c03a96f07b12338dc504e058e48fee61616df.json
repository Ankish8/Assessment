{"ast":null,"code":"import { __rest as s } from \"../../../../../_virtual/_tslib.js\";\nimport e from \"classnames\";\nfunction t(t, a) {\n  if (t) {\n    var o = t.tooltipProps,\n      r = t.className,\n      i = s(t, [\"tooltipProps\", \"className\"]);\n    return Object.assign(Object.assign({}, i), {\n      className: (null == o ? void 0 : o.content) ? r : e(r, a),\n      tooltipProps: (null == o ? void 0 : o.content) ? Object.assign(Object.assign({}, o), {\n        referenceWrapperClassName: e(o.referenceWrapperClassName, a)\n      }) : void 0\n    });\n  }\n}\nexport { t as getPropsForButton };","map":{"version":3,"names":["t","a","o","tooltipProps","r","className","i","s","Object","assign","content","e","referenceWrapperClassName","getPropsForButton"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/Modal/footers/utils/getPropsForButton.ts"],"sourcesContent":["import { ModalFooterActionProps } from \"../ModalFooterBase/ModalFooterBase.types\";\nimport cx from \"classnames\";\n\nexport function getPropsForButton(button?: ModalFooterActionProps, buttonClassName?: string) {\n  if (!button) return undefined;\n  const { tooltipProps, className, ...rest } = button;\n  return {\n    ...rest,\n    className: tooltipProps?.content ? className : cx(className, buttonClassName),\n    tooltipProps: tooltipProps?.content\n      ? { ...tooltipProps, referenceWrapperClassName: cx(tooltipProps.referenceWrapperClassName, buttonClassName) }\n      : undefined\n  };\n}\n"],"mappings":";;AAGgB,SAAAA,EAAkBA,CAAA,EAAiCC,CAAA;EACjE,IAAKD,CAAA,EAAL;IACA,IAAQE,CAAA,GAAqCF,CAAA,CAArCG,YAAA;MAAcC,CAAA,GAAuBJ,CAAA,CAAvBK,SAAA;MAAcC,CAAA,GAASC,CAAA,CAAAP,CAAA,EAAvC;IACN,OAAAQ,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACKH,CAAA,GAAI;MACPD,SAAA,GAAW,QAAAH,CAAA,QAAY,IAAZA,CAAA,CAAcQ,OAAA,IAAUN,CAAA,GAAYO,CAAA,CAAGP,CAAA,EAAWH,CAAA;MAC7DE,YAAA,GAAc,QAAAD,CAAA,YAAAA,CAAA,CAAcQ,OAAA,IAAAF,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACnBP,CAAA,GAAY;QAAEU,yBAAA,EAA2BD,CAAA,CAAGT,CAAA,CAAaU,yBAAA,EAA2BX,CAAA;MAAA,UACzF;IAAA,EAPuB;EAAA;AAS/B;AAAA,SAAAD,CAAA,IAAAa,iBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
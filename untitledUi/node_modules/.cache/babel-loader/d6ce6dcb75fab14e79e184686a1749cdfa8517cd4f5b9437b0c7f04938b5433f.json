{"ast":null,"code":"import { __rest as t } from \"../../../_virtual/_tslib.js\";\nimport { getTestId as e, ComponentDefaultTestId as s } from \"../../tests/testIds.js\";\nimport r, { forwardRef as i } from \"react\";\nimport { withStaticProps as o } from \"../../types/withStaticProps.js\";\nimport \"../../utils/colors-vars-map.js\";\nimport a from \"./EditableText.module.scss.js\";\nimport { getStyle as m } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport { camelCase as p } from \"lodash-es\";\nimport l from \"../EditableTypography/EditableTypography.js\";\nimport { TextType as d, TextWeight as f } from \"../Text/TextConstants.js\";\nimport n from \"../Text/Text.js\";\nimport y from \"classnames\";\nvar c = o(i(function (i, o) {\n  var d = i.type,\n    f = void 0 === d ? \"text2\" : d,\n    c = i.weight,\n    h = void 0 === c ? \"normal\" : c,\n    T = i[\"data-testid\"],\n    j = i.id,\n    u = i.multiline,\n    g = t(i, [\"type\", \"weight\", \"data-testid\", \"id\", \"multiline\"]);\n  return r.createElement(l, Object.assign({\n    className: a.editableText,\n    ref: o,\n    \"data-testid\": T || e(s.EDITABLE_TEXT, j),\n    component: n,\n    typographyClassName: y(m(a, p(f + \"-\" + h)), a.typography),\n    clearable: !0,\n    type: f,\n    weight: h,\n    multiline: u\n  }, g));\n}), {\n  types: d,\n  weights: f\n});\nexport { c as default };","map":{"version":3,"names":["c","o","i","d","type","f","weight","h","T","j","id","u","multiline","g","t","r","createElement","l","Object","assign","className","a","editableText","ref","e","s","EDITABLE_TEXT","component","n","typographyClassName","y","m","p","typography","clearable","types","weights","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/EditableText/EditableText.tsx"],"sourcesContent":["import { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport React, { forwardRef } from \"react\";\nimport { VibeComponentProps, withStaticProps } from \"../../types\";\nimport styles from \"./EditableText.module.scss\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport { camelCase } from \"lodash-es\";\nimport EditableTypography, { EditableTypographyImplementationProps } from \"../EditableTypography/EditableTypography\";\nimport { TextType as TextTypeEnum, TextWeight as TextWeightEnum } from \"../Text/TextConstants\";\nimport { TextType, TextWeight } from \"../Text\";\nimport Text from \"../Text/Text\";\nimport cx from \"classnames\";\n\nexport interface EditableTextProps extends VibeComponentProps, EditableTypographyImplementationProps {\n  /**\n   * The text style variant.\n   */\n  type?: TextType;\n  /**\n   * The font weight of the text.\n   */\n  weight?: TextWeight;\n  /**\n   * If true, enables editing multiple lines of text.\n   */\n  multiline?: boolean;\n}\n\nconst EditableText = forwardRef(\n  (\n    {\n      type = \"text2\",\n      weight = \"normal\",\n      \"data-testid\": dataTestId,\n      id,\n      multiline,\n      ...editableTypographyProps\n    }: EditableTextProps,\n    ref: React.ForwardedRef<HTMLElement>\n  ) => {\n    return (\n      <EditableTypography\n        className={styles.editableText}\n        ref={ref}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.EDITABLE_TEXT, id)}\n        component={Text}\n        typographyClassName={cx(getStyle(styles, camelCase(type + \"-\" + weight)), styles.typography)}\n        clearable\n        type={type}\n        weight={weight}\n        multiline={multiline}\n        {...editableTypographyProps}\n      />\n    );\n  }\n);\n\ninterface EditableTextStaticProps {\n  types: typeof TextTypeEnum;\n  weights: typeof TextWeightEnum;\n}\n\nexport default withStaticProps<EditableTextProps, EditableTextStaticProps>(EditableText, {\n  types: TextTypeEnum,\n  weights: TextWeightEnum\n});\n"],"mappings":";;;;;;;;;;;;AA2BA,IAkCeA,CAAA,GAAAC,CAAA,CAlCMC,CAAA,CACnB,UACEA,CAAA,EAQAD,CAAA;EAAA,IAAAE,CAAA,GAHWD,CAAA,CAJTE,IAAA;IAAAC,CAAA,QAAO,MAAHF,CAAA,GAAG,UAAOA,CAAA;IAAAH,CAAA,GAILE,CAAA,CAHTI,MAAA;IAAAC,CAAA,QAAS,MAAHP,CAAA,GAAG,WAAQA,CAAA;IACFQ,CAAA,GAENN,CAAA,CAFT;IACAO,CAAA,GACSP,CAAA,CADTQ,EAAA;IACAC,CAAA,GAAST,CAAA,CAATU,SAAA;IACGC,CAAA,GAAuBC,CAAA,CAAAZ,CAAA,EAN5B;EAUA,OACEa,CAAA,CAAAC,aAAA,CAACC,CAAA,EAAkBC,MAAA,CAAAC,MAAA;IACjBC,SAAA,EAAWC,CAAA,CAAOC,YAAA;IAClBC,GAAA,EAAKtB,CAAA;IAAA,eACQO,CAAA,IAAcgB,CAAA,CAAUC,CAAA,CAAuBC,aAAA,EAAejB,CAAA;IAC3EkB,SAAA,EAAWC,CAAA;IACXC,mBAAA,EAAqBC,CAAA,CAAGC,CAAA,CAASV,CAAA,EAAQW,CAAA,CAAU3B,CAAA,GAAO,MAAME,CAAA,IAAUc,CAAA,CAAOY,UAAA;IACjFC,SAAA,GAAS;IACT9B,IAAA,EAAMC,CAAA;IACNC,MAAA,EAAQC,CAAA;IACRK,SAAA,EAAWD;EAAA,GACPE,CAAA,EAGV;AAAA,IAQuF;EACvFsB,KAAA,EAAOhC,CAAA;EACPiC,OAAA,EAAS/B;AAAA;AAAA,SAAAL,CAAA,IAAAqC,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
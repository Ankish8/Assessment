{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar $species = GetIntrinsic('%Symbol.species%', true);\nvar $TypeError = require('es-errors/type');\nvar isInteger = require('math-intrinsics/isInteger');\nvar isObject = require('es-object-atoms/isObject');\nvar ArrayCreate = require('./ArrayCreate');\nvar Get = require('./Get');\nvar IsArray = require('./IsArray');\nvar IsConstructor = require('./IsConstructor');\n\n// https://262.ecma-international.org/12.0/#sec-arrayspeciescreate\n\nmodule.exports = function ArraySpeciesCreate(originalArray, length) {\n  if (!isInteger(length) || length < 0) {\n    throw new $TypeError('Assertion failed: length must be an integer >= 0');\n  }\n  var isArray = IsArray(originalArray);\n  if (!isArray) {\n    return ArrayCreate(length);\n  }\n  var C = Get(originalArray, 'constructor');\n  // TODO: figure out how to make a cross-realm normal Array, a same-realm Array\n  // if (IsConstructor(C)) {\n  // \tif C is another realm's Array, C = undefined\n  // \tObject.getPrototypeOf(Object.getPrototypeOf(Object.getPrototypeOf(Array))) === null ?\n  // }\n  if ($species && isObject(C)) {\n    C = Get(C, $species);\n    if (C === null) {\n      C = void 0;\n    }\n  }\n  if (typeof C === 'undefined') {\n    return ArrayCreate(length);\n  }\n  if (!IsConstructor(C)) {\n    throw new $TypeError('C must be a constructor');\n  }\n  return new C(length); // Construct(C, length);\n};","map":{"version":3,"names":["GetIntrinsic","require","$species","$TypeError","isInteger","isObject","ArrayCreate","Get","IsArray","IsConstructor","module","exports","ArraySpeciesCreate","originalArray","length","isArray","C"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/es-abstract/2024/ArraySpeciesCreate.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $species = GetIntrinsic('%Symbol.species%', true);\nvar $TypeError = require('es-errors/type');\nvar isInteger = require('math-intrinsics/isInteger');\nvar isObject = require('es-object-atoms/isObject');\n\nvar ArrayCreate = require('./ArrayCreate');\nvar Get = require('./Get');\nvar IsArray = require('./IsArray');\nvar IsConstructor = require('./IsConstructor');\n\n// https://262.ecma-international.org/12.0/#sec-arrayspeciescreate\n\nmodule.exports = function ArraySpeciesCreate(originalArray, length) {\n\tif (!isInteger(length) || length < 0) {\n\t\tthrow new $TypeError('Assertion failed: length must be an integer >= 0');\n\t}\n\n\tvar isArray = IsArray(originalArray);\n\tif (!isArray) {\n\t\treturn ArrayCreate(length);\n\t}\n\n\tvar C = Get(originalArray, 'constructor');\n\t// TODO: figure out how to make a cross-realm normal Array, a same-realm Array\n\t// if (IsConstructor(C)) {\n\t// \tif C is another realm's Array, C = undefined\n\t// \tObject.getPrototypeOf(Object.getPrototypeOf(Object.getPrototypeOf(Array))) === null ?\n\t// }\n\tif ($species && isObject(C)) {\n\t\tC = Get(C, $species);\n\t\tif (C === null) {\n\t\t\tC = void 0;\n\t\t}\n\t}\n\n\tif (typeof C === 'undefined') {\n\t\treturn ArrayCreate(length);\n\t}\n\tif (!IsConstructor(C)) {\n\t\tthrow new $TypeError('C must be a constructor');\n\t}\n\treturn new C(length); // Construct(C, length);\n};\n\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE3C,IAAIC,QAAQ,GAAGF,YAAY,CAAC,kBAAkB,EAAE,IAAI,CAAC;AACrD,IAAIG,UAAU,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AAC1C,IAAIG,SAAS,GAAGH,OAAO,CAAC,2BAA2B,CAAC;AACpD,IAAII,QAAQ,GAAGJ,OAAO,CAAC,0BAA0B,CAAC;AAElD,IAAIK,WAAW,GAAGL,OAAO,CAAC,eAAe,CAAC;AAC1C,IAAIM,GAAG,GAAGN,OAAO,CAAC,OAAO,CAAC;AAC1B,IAAIO,OAAO,GAAGP,OAAO,CAAC,WAAW,CAAC;AAClC,IAAIQ,aAAa,GAAGR,OAAO,CAAC,iBAAiB,CAAC;;AAE9C;;AAEAS,MAAM,CAACC,OAAO,GAAG,SAASC,kBAAkBA,CAACC,aAAa,EAAEC,MAAM,EAAE;EACnE,IAAI,CAACV,SAAS,CAACU,MAAM,CAAC,IAAIA,MAAM,GAAG,CAAC,EAAE;IACrC,MAAM,IAAIX,UAAU,CAAC,kDAAkD,CAAC;EACzE;EAEA,IAAIY,OAAO,GAAGP,OAAO,CAACK,aAAa,CAAC;EACpC,IAAI,CAACE,OAAO,EAAE;IACb,OAAOT,WAAW,CAACQ,MAAM,CAAC;EAC3B;EAEA,IAAIE,CAAC,GAAGT,GAAG,CAACM,aAAa,EAAE,aAAa,CAAC;EACzC;EACA;EACA;EACA;EACA;EACA,IAAIX,QAAQ,IAAIG,QAAQ,CAACW,CAAC,CAAC,EAAE;IAC5BA,CAAC,GAAGT,GAAG,CAACS,CAAC,EAAEd,QAAQ,CAAC;IACpB,IAAIc,CAAC,KAAK,IAAI,EAAE;MACfA,CAAC,GAAG,KAAK,CAAC;IACX;EACD;EAEA,IAAI,OAAOA,CAAC,KAAK,WAAW,EAAE;IAC7B,OAAOV,WAAW,CAACQ,MAAM,CAAC;EAC3B;EACA,IAAI,CAACL,aAAa,CAACO,CAAC,CAAC,EAAE;IACtB,MAAM,IAAIb,UAAU,CAAC,yBAAyB,CAAC;EAChD;EACA,OAAO,IAAIa,CAAC,CAACF,MAAM,CAAC,CAAC,CAAC;AACvB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
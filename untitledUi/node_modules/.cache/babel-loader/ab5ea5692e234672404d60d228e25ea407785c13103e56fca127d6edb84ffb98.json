{"ast":null,"code":"import { contentColors as e } from \"../utils/colors-vars-map.js\";\nvar o = {\n    positive: \"--positive-color-selected\",\n    negative: \"--negative-color-selected\",\n    primary: \"--primary-selected-color\",\n    warning: \"--warning-color-selected\"\n  },\n  r = {\n    positive: \"--positive-color-selected-hover\",\n    negative: \"--negative-color-selected-hover\",\n    primary: \"--primary-selected-hover-color\"\n  };\nfunction c(c) {\n  var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n    i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n  return e.includes(c) ? \"var(--color-\".concat(c).concat(t ? \"-selected\" : \"\", \")\") : Object.keys(r).includes(c) && i ? \"var(\".concat(r[c], \")\") : Object.keys(o).includes(c) && t ? \"var(\".concat(o[c], \")\") : c;\n}\nexport { c as getElementColor };","map":{"version":3,"names":["o","positive","negative","primary","warning","r","c","t","arguments","length","i","e","includes","concat","Object","keys","getElementColor"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/types/Colors.ts"],"sourcesContent":["import { contentColors } from \"../utils/colors-vars-map\";\n\nconst MapStateSelectedColor = {\n  positive: \"--positive-color-selected\",\n  negative: \"--negative-color-selected\",\n  primary: \"--primary-selected-color\",\n  warning: \"--warning-color-selected\"\n};\n\nconst MapStateSelectedHoverColor = {\n  positive: \"--positive-color-selected-hover\",\n  negative: \"--negative-color-selected-hover\",\n  primary: \"--primary-selected-hover-color\"\n};\n\ntype ContentColor = (typeof contentColors)[number];\ntype StateSelectedColorKeys = keyof typeof MapStateSelectedColor;\ntype StateSelectedHoverColorKeys = keyof typeof MapStateSelectedHoverColor;\n\nexport type ElementAllowedColor = ContentColor | \"positive\" | \"negative\" | \"primary\" | \"warning\";\n\nexport function getElementColor(\n  colorValue: ContentColor | StateSelectedColorKeys | StateSelectedHoverColorKeys,\n  isSelectedPalette = false,\n  isSelectedHoverPalette = false\n): string {\n  if (contentColors.includes(colorValue as ContentColor)) {\n    return `var(--color-${colorValue}${isSelectedPalette ? \"-selected\" : \"\"})`;\n  }\n  if (\n    Object.keys(MapStateSelectedHoverColor).includes(colorValue as StateSelectedHoverColorKeys) &&\n    isSelectedHoverPalette\n  ) {\n    return `var(${MapStateSelectedHoverColor[colorValue as StateSelectedHoverColorKeys]})`;\n  }\n  if (Object.keys(MapStateSelectedColor).includes(colorValue as StateSelectedColorKeys) && isSelectedPalette) {\n    return `var(${MapStateSelectedColor[colorValue as StateSelectedColorKeys]})`;\n  }\n  return colorValue;\n}\n\nexport type ColorStyle = \"regular\" | \"hover\" | \"selected\";\n"],"mappings":";AAEA,IAAMA,CAAA,GAAwB;IAC5BC,QAAA,EAAU;IACVC,QAAA,EAAU;IACVC,OAAA,EAAS;IACTC,OAAA,EAAS;EAAA;EAGLC,CAAA,GAA6B;IACjCJ,QAAA,EAAU;IACVC,QAAA,EAAU;IACVC,OAAA,EAAS;EAAA;AASL,SAAUG,EACdA,CAAA;EAE8B,IAD9BC,CAAA,GAAiBC,SAAA,CAAAC,MAAA,mBAAAD,SAAA,OAAAA,SAAA;IACjBE,CAAA,GAAsBF,SAAA,CAAAC,MAAA,mBAAAD,SAAA,OAAAA,SAAA;EAEtB,OAAIG,CAAA,CAAcC,QAAA,CAASN,CAAA,IACzB,eAAAO,MAAA,CAAsBP,CAAA,EAAUO,MAAA,CAAGN,CAAA,GAAoB,cAAc,IAAE,OAGvEO,MAAA,CAAOC,IAAA,CAAKV,CAAA,EAA4BO,QAAA,CAASN,CAAA,KACjDI,CAAA,GAEA,OAAAG,MAAA,CAAcR,CAAA,CAA2BC,CAAA,GAA0C,OAEjFQ,MAAA,CAAOC,IAAA,CAAKf,CAAA,EAAuBY,QAAA,CAASN,CAAA,KAAyCC,CAAA,GACvF,OAAAM,MAAA,CAAcb,CAAA,CAAsBM,CAAA,GAAqC,OAEpEA,CACT;AAAA;AAAA,SAAAA,CAAA,IAAAU,eAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { slicedToArray as e, defineProperty as o } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport i, { forwardRef as t, useRef as r, useState as n, useCallback as s, useMemo as a } from \"react\";\nimport l from \"classnames\";\nimport { camelCase as d } from \"lodash-es\";\nimport { isForwardRef as m } from \"react-is\";\nimport c from \"../Dialog/Dialog.js\";\nimport g from \"../DialogContentContainer/DialogContentContainer.js\";\nimport u from \"../Tooltip/Tooltip.js\";\nimport p from \"../../hooks/ssr/useIsomorphicLayoutEffect.js\";\nimport f from \"../../hooks/useMergeRef.js\";\nimport { BUTTON_ICON_SIZE as h, SMALL_BUTTON_ICON_SIZE as T } from \"../Button/ButtonConstants.js\";\nimport { withStaticProps as v } from \"../../types/withStaticProps.js\";\nimport \"../../utils/colors-vars-map.js\";\nimport { MenuButtonSize as C, MenuButtonComponentPosition as E } from \"./MenuButtonConstants.js\";\nimport { DialogSize as S, DialogPosition as w, HideShowEvent as j } from \"../Dialog/DialogConstants.js\";\nimport { NOOP as O } from \"../../utils/function-utils.js\";\nimport { getStyle as y } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport { getTestId as b, ComponentDefaultTestId as M } from \"../../tests/testIds.js\";\nimport P from \"./MenuButton.module.scss.js\";\nimport { ComponentVibeId as N } from \"../../tests/constants.js\";\nimport D from \"../../../icons/dist/react/Menu.js\";\nvar _ = {\n    main: 8,\n    secondary: 0\n  },\n  A = [c.hideShowTriggers.ESCAPE_KEY, c.hideShowTriggers.TAB_KEY],\n  B = v(t(function (t, v) {\n    var C = t.id,\n      E = t.className,\n      S = t.openDialogComponentClassName,\n      w = t.children,\n      j = t.component,\n      B = void 0 === j ? D : j,\n      I = t.componentPosition,\n      x = void 0 === I ? \"start\" : I,\n      z = t.size,\n      H = void 0 === z ? \"small\" : z,\n      K = t.open,\n      R = void 0 !== K && K,\n      k = t.onClick,\n      L = void 0 === k ? O : k,\n      U = t.zIndex,\n      Y = void 0 === U ? null : U,\n      W = t.ariaLabel,\n      F = void 0 === W ? \"Menu\" : W,\n      V = t.closeMenuOnItemClick,\n      q = t.dialogOffset,\n      G = void 0 === q ? _ : q,\n      J = t.dialogPosition,\n      Q = void 0 === J ? c.positions.BOTTOM_START : J,\n      X = t.dialogClassName,\n      Z = t.dialogPaddingSize,\n      $ = void 0 === Z ? g.sizes.SMALL : Z,\n      ee = t.dialogShowTriggerIgnoreClass,\n      oe = t.dialogHideTriggerIgnoreClass,\n      ie = t.onMenuHide,\n      te = void 0 === ie ? O : ie,\n      re = t.onMenuShow,\n      ne = void 0 === re ? O : re,\n      se = t.disabled,\n      ae = void 0 !== se && se,\n      le = t.text,\n      de = t.tooltipContent,\n      me = t.tooltipProps,\n      ce = t.tooltipTriggers,\n      ge = void 0 === ce ? [\"mouseleave\"] : ce,\n      ue = t.tooltipPosition,\n      pe = void 0 === ue ? \"right\" : ue,\n      fe = t.startingEdge,\n      he = void 0 === fe ? \"bottom\" : fe,\n      Te = t.removeTabCloseTrigger,\n      ve = void 0 !== Te && Te,\n      Ce = t.tooltipReferenceClassName,\n      Ee = t.hideWhenReferenceHidden,\n      Se = void 0 === Ee || Ee,\n      we = t.dialogContainerSelector,\n      je = t.active,\n      Oe = t.triggerElement,\n      ye = void 0 === Oe ? \"button\" : Oe,\n      be = t.showTooltipOnlyOnTriggerElement,\n      Me = t[\"data-testid\"],\n      Pe = t.closeDialogOnContentClick,\n      Ne = void 0 !== Pe && Pe,\n      De = t.ariaControls,\n      _e = r(null),\n      Ae = f(v, _e),\n      Be = n(R),\n      Ie = e(Be, 2),\n      xe = Ie[0],\n      ze = Ie[1],\n      He = null != je ? je : xe,\n      Ke = s(function (e) {\n        te(), ze(!1);\n        var o = _e.current;\n        o && e && window.requestAnimationFrame(function () {\n          o.focus();\n        });\n      }, [te]),\n      Re = s(function (e) {\n        var o = A.includes(e.key);\n        (o || V) && e.propagate && Ke(o);\n      }, [V, Ke]),\n      ke = s(function (e, o) {\n        Ke(xe && A.includes(o));\n      }, [Ke, xe]),\n      Le = s(function () {\n        ze(!0), ne();\n      }, [ze, ne]),\n      Ue = a(function () {\n        var e = new Set([c.hideShowTriggers.CLICK_OUTSIDE, c.hideShowTriggers.TAB_KEY, c.hideShowTriggers.ESCAPE_KEY]);\n        return Ne && (e.add(c.hideShowTriggers.CONTENT_CLICK), e.add(c.hideShowTriggers.ENTER)), ve && e.delete(c.hideShowTriggers.TAB_KEY), [i.Children.toArray(w).map(function (o) {\n          if (!i.isValidElement(o)) return null;\n          var t = {};\n          return o.type && o.type.supportFocusOnMount && (t.focusOnMount = !0, e.delete(c.hideShowTriggers.ESCAPE_KEY)), o.type && o.type.isMenu && (t.onClose = Re), i.cloneElement(o, t);\n        }), Array.from(e)];\n      }, [w, Re, Ne, ve]),\n      Ye = e(Ue, 2),\n      We = Ye[0],\n      Fe = Ye[1],\n      Ve = a(function () {\n        return 0 === We.length ? null : i.createElement(g, {\n          size: $,\n          type: g.types.POPOVER\n        }, We);\n      }, [We, $]),\n      qe = a(function () {\n        return Object.assign(Object.assign({}, _), G);\n      }, [G]),\n      Ge = B,\n      Je = a(function () {\n        switch (H) {\n          case \"xxs\":\n          case \"xs\":\n            return T;\n          case \"small\":\n          case \"medium\":\n          case \"large\":\n            return h;\n          default:\n            return 24;\n        }\n      }, [H]),\n      Qe = Ge ? i.createElement(Ge, {\n        size: \"\" + Je,\n        role: \"img\",\n        \"aria-hidden\": \"true\"\n      }) : null;\n    p(function () {\n      ze(R);\n    }, [R, ze]);\n    var Xe = \"button\" === ye ? {\n        ref: Ae\n      } : {\n        active: He,\n        disabled: ae,\n        ref: m(ye) ? Ae : void 0\n      },\n      Ze = i.createElement(ye, Object.assign({\n        id: C,\n        \"data-testid\": Me || b(M.MENU_BUTTON, C),\n        \"data-vibe\": N.MENU_BUTTON,\n        type: \"button\",\n        className: l(P.wrapper, E, y(P, d(\"size-\".concat(H))), o(o(o(o({}, P.active, He), y(P, S), xe && S), P.disabled, ae), P.text, le)),\n        \"aria-haspopup\": \"true\",\n        \"aria-expanded\": xe,\n        \"aria-controls\": De,\n        \"aria-label\": !le && F,\n        onMouseUp: function (e) {\n          ae ? e.currentTarget.blur() : L(e);\n        },\n        \"aria-disabled\": ae\n      }, Xe), \"start\" === x && Qe, le && i.createElement(\"span\", {\n        className: P.innerText\n      }, le), \"end\" === x && Qe),\n      $e = function (e) {\n        return i.createElement(c, {\n          wrapperClassName: X,\n          position: Q,\n          containerSelector: we,\n          startingEdge: he,\n          animationType: \"expand\",\n          content: Ve,\n          moveBy: qe,\n          showTrigger: ae ? [] : [\"click\", \"enter\"],\n          hideTrigger: Fe,\n          showTriggerIgnoreClass: ee,\n          hideTriggerIgnoreClass: oe,\n          useDerivedStateFromProps: !0,\n          onDialogDidShow: Le,\n          onDialogDidHide: ke,\n          zIndex: Y,\n          isOpen: xe,\n          hideWhenReferenceHidden: Se\n        }, e);\n      },\n      eo = function (e) {\n        return i.createElement(u, Object.assign({\n          content: de,\n          position: pe,\n          showTrigger: \"mouseenter\",\n          hideTrigger: ge,\n          referenceWrapperClassName: Ce,\n          hideWhenReferenceHidden: Se\n        }, me), e);\n      };\n    return be ? $e(eo(Ze)) : eo($e(Ze));\n  }), {\n    sizes: C,\n    paddingSizes: S,\n    dialogPositions: w,\n    hideTriggers: j,\n    componentPositions: E\n  });\nexport { B as default };","map":{"version":3,"names":["_","main","secondary","A","c","hideShowTriggers","ESCAPE_KEY","TAB_KEY","B","v","t","C","id","E","className","S","openDialogComponentClassName","w","children","j","component","D","I","componentPosition","x","z","size","H","K","open","R","k","onClick","L","O","U","zIndex","Y","W","ariaLabel","F","V","closeMenuOnItemClick","q","dialogOffset","G","J","dialogPosition","Q","positions","BOTTOM_START","X","dialogClassName","Z","dialogPaddingSize","$","g","sizes","SMALL","ee","dialogShowTriggerIgnoreClass","oe","dialogHideTriggerIgnoreClass","ie","onMenuHide","te","re","onMenuShow","ne","se","disabled","ae","le","text","de","tooltipContent","me","tooltipProps","ce","tooltipTriggers","ge","ue","tooltipPosition","pe","fe","startingEdge","he","Te","removeTabCloseTrigger","ve","Ce","tooltipReferenceClassName","Ee","hideWhenReferenceHidden","Se","we","dialogContainerSelector","je","active","Oe","triggerElement","ye","be","showTooltipOnlyOnTriggerElement","Me","Pe","closeDialogOnContentClick","Ne","De","ariaControls","_e","r","Ae","f","Be","n","Ie","e","xe","ze","He","Ke","s","o","current","window","requestAnimationFrame","focus","Re","includes","key","propagate","ke","Le","Ue","a","Set","CLICK_OUTSIDE","add","CONTENT_CLICK","ENTER","delete","i","Children","toArray","map","isValidElement","type","supportFocusOnMount","focusOnMount","isMenu","onClose","cloneElement","Array","from","Ye","We","Fe","Ve","length","createElement","types","POPOVER","qe","Object","assign","Ge","Je","T","h","Qe","role","p","Xe","ref","m","Ze","b","M","MENU_BUTTON","N","l","P","wrapper","y","d","concat","onMouseUp","currentTarget","blur","innerText","$e","dialogNode","wrapperClassName","position","containerSelector","animationType","content","moveBy","showTrigger","hideTrigger","showTriggerIgnoreClass","hideTriggerIgnoreClass","useDerivedStateFromProps","onDialogDidShow","onDialogDidHide","isOpen","eo","tooltipNode","u","referenceWrapperClassName","paddingSizes","dialogPositions","hideTriggers","componentPositions","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/MenuButton/MenuButton.tsx"],"sourcesContent":["import React, { forwardRef, useCallback, useMemo, useRef, useState } from \"react\";\nimport cx from \"classnames\";\nimport { camelCase } from \"lodash-es\";\nimport { isForwardRef } from \"react-is\";\nimport Dialog, { DialogEvent } from \"../Dialog/Dialog\";\nimport DialogContentContainer from \"../DialogContentContainer/DialogContentContainer\";\nimport Tooltip, { TooltipProps } from \"../Tooltip/Tooltip\";\nimport useIsomorphicLayoutEffect from \"../../hooks/ssr/useIsomorphicLayoutEffect\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport { BUTTON_ICON_SIZE, SMALL_BUTTON_ICON_SIZE } from \"../Button/ButtonConstants\";\nimport { ElementContent, VibeComponentProps, withStaticProps } from \"../../types\";\nimport {\n  MenuButtonComponentPosition as MenuButtonComponentPositionEnum,\n  MenuButtonSize as MenuButtonSizeEnum\n} from \"./MenuButtonConstants\";\nimport {\n  DialogPosition as DialogPositionEnum,\n  HideShowEvent as DialogTriggerEventEnum,\n  DialogSize as DialogSizeEnum\n} from \"../Dialog/DialogConstants\";\nimport { MenuButtonComponentPosition, MenuButtonSize } from \"./MenuButton.types\";\nimport { DialogOffset, DialogPosition, DialogSize, DialogTriggerEvent } from \"../Dialog/Dialog.types\";\nimport { NOOP } from \"../../utils/function-utils\";\nimport { Menu } from \"@vibe/icons\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport { MenuChild } from \"../Menu/Menu/MenuConstants\";\nimport styles from \"./MenuButton.module.scss\";\nimport { TooltipPositions } from \"../Tooltip\";\nimport { ComponentVibeId } from \"../../tests/constants\";\n\nconst MOVE_BY = { main: 8, secondary: 0 };\nconst CLOSE_KEYS: DialogTriggerEventEnum[] = [Dialog.hideShowTriggers.ESCAPE_KEY, Dialog.hideShowTriggers.TAB_KEY];\n\nexport interface MenuButtonProps extends VibeComponentProps {\n  /**\n   * If true, the button is in an active state.\n   */\n  active?: boolean;\n  /**\n   * Class name applied to the button when the dialog is open.\n   */\n  openDialogComponentClassName?: string;\n  /**\n   * The component used as the button icon.\n   */\n  component?: (() => JSX.Element) | React.ElementType;\n  /**\n   * The size of the button.\n   */\n  size?: MenuButtonSize;\n  /**\n   * If true, the menu is open.\n   */\n  open?: boolean;\n  /**\n   * Callback fired when the button is clicked.\n   */\n  onClick?: (event: React.MouseEvent) => void;\n  /**\n   * The z-index of the menu.\n   */\n  zIndex?: number;\n  /**\n   * The label of the button for accessibility.\n   */\n  ariaLabel?: string;\n  /**\n   * Class name applied to the menu dialog wrapper.\n   */\n  dialogClassName?: string;\n  /**\n   * The offset of the menu relative to the button.\n   */\n  dialogOffset?: DialogOffset;\n  /**\n   * The padding size inside the menu dialog.\n   */\n  dialogPaddingSize?: DialogSize;\n  /**\n   * The position of the menu dialog relative to the button.\n   */\n  dialogPosition?: DialogPosition;\n  /**\n   * Classes that prevent showing the dialog when present.\n   */\n  dialogShowTriggerIgnoreClass?: string | Array<string>;\n  /**\n   * Classes that prevent hiding the dialog when present.\n   */\n  dialogHideTriggerIgnoreClass?: string | Array<string>;\n  /**\n   * The container selector in which to append the dialog.\n   */\n  dialogContainerSelector?: string;\n  /**\n   * The starting edge alignment of the menu.\n   */\n  startingEdge?: string;\n  /**\n   * Callback fired when the menu is shown.\n   */\n  onMenuShow?: () => void;\n  /**\n   * Callback fired when the menu is hidden.\n   */\n  onMenuHide?: () => void;\n  /**\n   * The text displayed inside the button.\n   */\n  text?: string;\n  /**\n   * If true, the button is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * The tooltip content displayed when hovering over the button.\n   */\n  tooltipContent?: string;\n  /**\n   * If true, removes the tab key from the hide trigger.\n   */\n  removeTabCloseTrigger?: boolean;\n  /**\n   * The triggers that cause the tooltip to show or hide.\n   */\n  tooltipTriggers?: DialogTriggerEvent | DialogTriggerEvent[];\n  /**\n   * The position of the tooltip.\n   */\n  tooltipPosition?: TooltipPositions;\n  /**\n   * Class name applied to the tooltip reference wrapper.\n   */\n  tooltipReferenceClassName?: string;\n  /**\n   * Additional props for customizing the tooltip.\n   */\n  tooltipProps?: Partial<TooltipProps>;\n  /**\n   * If true, hides the menu and tooltip when the button is not visible.\n   */\n  hideWhenReferenceHidden?: boolean;\n  /**\n   * The content inside the menu button.\n   */\n  children?: ElementContent;\n  /**\n   * The position of the component relative to the text.\n   */\n  componentPosition?: MenuButtonComponentPosition;\n  /**\n   * The element used as the trigger for the menu.\n   */\n  triggerElement?: React.ElementType;\n  /**\n   * If true, closes the menu when a menu item is clicked.\n   */\n  closeMenuOnItemClick?: boolean;\n  /**\n   * If true, the tooltip appears only when hovering over the trigger element, not the menu dialog.\n   */\n  showTooltipOnlyOnTriggerElement?: boolean;\n  /**\n   * If true, closes the menu when clicking inside the dialog.\n   */\n  closeDialogOnContentClick?: boolean;\n  /**\n   * The ARIA control of the menu button for accessibility.\n   */\n  ariaControls?: string;\n}\n\nconst MenuButton = forwardRef(\n  (\n    {\n      id,\n      className,\n      openDialogComponentClassName,\n      children,\n      component = Menu,\n      componentPosition = \"start\",\n      size = \"small\",\n      open = false,\n      onClick = NOOP,\n      zIndex = null,\n      ariaLabel = \"Menu\",\n      closeMenuOnItemClick,\n      dialogOffset = MOVE_BY,\n      dialogPosition = Dialog.positions.BOTTOM_START,\n      dialogClassName,\n      dialogPaddingSize = DialogContentContainer.sizes.SMALL,\n      dialogShowTriggerIgnoreClass,\n      dialogHideTriggerIgnoreClass,\n      onMenuHide = NOOP,\n      onMenuShow = NOOP,\n      disabled = false,\n      text,\n      tooltipContent,\n      tooltipProps,\n      tooltipTriggers = [\"mouseleave\"],\n      tooltipPosition = \"right\",\n      startingEdge = \"bottom\",\n      removeTabCloseTrigger = false,\n      tooltipReferenceClassName,\n      hideWhenReferenceHidden = true,\n      dialogContainerSelector,\n      active,\n      triggerElement: TriggerElement = \"button\",\n      showTooltipOnlyOnTriggerElement,\n      \"data-testid\": dataTestId,\n      closeDialogOnContentClick = false,\n      ariaControls\n    }: MenuButtonProps,\n    ref: React.ForwardedRef<HTMLElement>\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n\n    const [isOpen, setIsOpen] = useState(open);\n    const isActive = active ?? isOpen;\n\n    const handleMenuClose = useCallback(\n      (focusOnMenuButtonAfterClose: boolean) => {\n        onMenuHide();\n        setIsOpen(false);\n        const button = componentRef.current;\n        if (!button || !focusOnMenuButtonAfterClose) {\n          return;\n        }\n        window.requestAnimationFrame(() => {\n          button.focus();\n        });\n      },\n      [onMenuHide]\n    );\n\n    const onMenuDidClose = useCallback(\n      (event: React.KeyboardEvent) => {\n        // TODO: check the functionality of the isEscapeKey since the event is not an actual KeyboardEVent but an object with propagate property only\n        const isCloseKey = CLOSE_KEYS.includes(event.key as DialogTriggerEventEnum);\n        if (isCloseKey || closeMenuOnItemClick) {\n          // @ts-ignore\n          if (event.propagate) {\n            handleMenuClose(isCloseKey);\n          }\n        }\n      },\n      [closeMenuOnItemClick, handleMenuClose]\n    );\n\n    const onDialogDidHide = useCallback(\n      (event: DialogEvent, hideEvent: string) => {\n        handleMenuClose(isOpen && CLOSE_KEYS.includes(hideEvent as DialogTriggerEventEnum));\n      },\n      [handleMenuClose, isOpen]\n    );\n\n    const onDialogDidShow = useCallback(() => {\n      setIsOpen(true);\n      onMenuShow();\n    }, [setIsOpen, onMenuShow]);\n\n    const [clonedChildren, hideTrigger] = useMemo(() => {\n      const triggers = new Set([\n        Dialog.hideShowTriggers.CLICK_OUTSIDE,\n        Dialog.hideShowTriggers.TAB_KEY,\n        Dialog.hideShowTriggers.ESCAPE_KEY\n      ]);\n\n      if (closeDialogOnContentClick) {\n        triggers.add(Dialog.hideShowTriggers.CONTENT_CLICK);\n        triggers.add(Dialog.hideShowTriggers.ENTER);\n      }\n\n      if (removeTabCloseTrigger) {\n        triggers.delete(Dialog.hideShowTriggers.TAB_KEY);\n      }\n      const childrenArr = React.Children.toArray(children) as MenuChild[];\n      const cloned = childrenArr.map(child => {\n        if (!React.isValidElement(child)) return null;\n\n        const newProps: { focusOnMount?: boolean; onClose?: (event: React.KeyboardEvent) => void } = {};\n        if (child.type && child.type.supportFocusOnMount) {\n          newProps.focusOnMount = true;\n          triggers.delete(Dialog.hideShowTriggers.ESCAPE_KEY);\n        }\n\n        if (child.type && child.type.isMenu) {\n          newProps.onClose = onMenuDidClose;\n        }\n\n        return React.cloneElement(child, newProps);\n      });\n      return [cloned, Array.from(triggers)];\n    }, [children, onMenuDidClose, closeDialogOnContentClick, removeTabCloseTrigger]);\n\n    const content = useMemo(() => {\n      if (clonedChildren.length === 0) return null;\n      return (\n        <DialogContentContainer size={dialogPaddingSize} type={DialogContentContainer.types.POPOVER}>\n          {clonedChildren}\n        </DialogContentContainer>\n      );\n    }, [clonedChildren, dialogPaddingSize]);\n\n    const computedDialogOffset = useMemo(\n      () => ({\n        ...MOVE_BY,\n        ...dialogOffset\n      }),\n      [dialogOffset]\n    );\n\n    const onMouseUp = (event: React.MouseEvent<HTMLElement>) => {\n      if (disabled) {\n        event.currentTarget.blur();\n        return;\n      }\n      onClick(event);\n    };\n\n    const Icon = component;\n    const iconSize = useMemo(() => {\n      switch (size) {\n        case \"xxs\":\n        case \"xs\":\n          return SMALL_BUTTON_ICON_SIZE;\n        case \"small\":\n        case \"medium\":\n        case \"large\":\n          return BUTTON_ICON_SIZE;\n        default:\n          return 24;\n      }\n    }, [size]);\n    const icon = Icon ? <Icon size={iconSize.toString()} role=\"img\" aria-hidden=\"true\" /> : null;\n\n    useIsomorphicLayoutEffect(() => {\n      setIsOpen(open);\n    }, [open, setIsOpen]);\n\n    // Trigger element props, which are only relevant for \"button\" element, but might be needed for other elements e.g. Button\n    const triggerElementProps =\n      TriggerElement === \"button\"\n        ? {\n            ref: mergedRef\n          }\n        : {\n            active: isActive,\n            disabled: disabled,\n            ref: isForwardRef(TriggerElement) ? mergedRef : undefined\n          };\n\n    const triggerElementNode = (\n      <TriggerElement\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.MENU_BUTTON, id)}\n        data-vibe={ComponentVibeId.MENU_BUTTON}\n        type=\"button\"\n        className={cx(styles.wrapper, className, getStyle(styles, camelCase(`size-${size}`)), {\n          [styles.active]: isActive,\n          [getStyle(styles, openDialogComponentClassName)]: isOpen && openDialogComponentClassName,\n          [styles.disabled]: disabled,\n          [styles.text]: text\n        })}\n        aria-haspopup=\"true\"\n        aria-expanded={isOpen}\n        aria-controls={ariaControls}\n        aria-label={!text && ariaLabel}\n        onMouseUp={onMouseUp}\n        aria-disabled={disabled}\n        {...triggerElementProps}\n      >\n        {componentPosition === \"start\" && icon}\n        {text && <span className={styles.innerText}>{text}</span>}\n        {componentPosition === \"end\" && icon}\n      </TriggerElement>\n    );\n\n    const dialogNode = (dialogChildren: React.ReactElement) => (\n      <Dialog\n        wrapperClassName={dialogClassName}\n        position={dialogPosition}\n        containerSelector={dialogContainerSelector}\n        startingEdge={startingEdge}\n        animationType=\"expand\"\n        content={content}\n        moveBy={computedDialogOffset}\n        showTrigger={disabled ? [] : [\"click\", \"enter\"]}\n        hideTrigger={hideTrigger}\n        showTriggerIgnoreClass={dialogShowTriggerIgnoreClass}\n        hideTriggerIgnoreClass={dialogHideTriggerIgnoreClass}\n        useDerivedStateFromProps={true}\n        onDialogDidShow={onDialogDidShow}\n        onDialogDidHide={onDialogDidHide}\n        zIndex={zIndex}\n        isOpen={isOpen}\n        hideWhenReferenceHidden={hideWhenReferenceHidden}\n      >\n        {dialogChildren}\n      </Dialog>\n    );\n\n    const tooltipNode = (tooltipChildren: React.ReactElement) => (\n      <Tooltip\n        content={tooltipContent}\n        position={tooltipPosition}\n        showTrigger=\"mouseenter\"\n        hideTrigger={tooltipTriggers}\n        referenceWrapperClassName={tooltipReferenceClassName}\n        hideWhenReferenceHidden={hideWhenReferenceHidden}\n        {...tooltipProps}\n      >\n        {tooltipChildren}\n      </Tooltip>\n    );\n\n    if (showTooltipOnlyOnTriggerElement) {\n      return dialogNode(tooltipNode(triggerElementNode));\n    }\n    return tooltipNode(dialogNode(triggerElementNode));\n  }\n);\n\ninterface MenuButtonStaticProps {\n  sizes: typeof MenuButtonSizeEnum;\n  paddingSizes: typeof DialogContentContainer.sizes;\n  dialogPositions: typeof DialogPositionEnum;\n  hideTriggers: typeof Dialog.hideShowTriggers;\n  componentPositions: typeof MenuButtonComponentPositionEnum;\n}\n\nexport default withStaticProps<MenuButtonProps, MenuButtonStaticProps>(MenuButton, {\n  sizes: MenuButtonSizeEnum,\n  paddingSizes: DialogSizeEnum,\n  dialogPositions: DialogPositionEnum,\n  hideTriggers: DialogTriggerEventEnum,\n  componentPositions: MenuButtonComponentPositionEnum\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
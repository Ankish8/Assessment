{"ast":null,"code":"import e from \"react\";\nimport l from \"./PercentageLabel.module.scss.js\";\nvar a = function (a) {\n  var r = a.forElement,\n    t = a.value,\n    o = void 0 === t ? 0 : t;\n  return null == o ? null : e.createElement(\"label\", {\n    htmlFor: void 0 === r ? \"\" : r,\n    className: l.label\n  }, \"\".concat(o.toFixed(), \"%\"));\n};\nexport { a as default };","map":{"version":3,"names":["a","PercentageLabel","r","forElement","t","value","o","e","createElement","htmlFor","className","l","label","concat","toFixed","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/ProgressBars/PercentageLabel/PercentageLabel.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport styles from \"./PercentageLabel.module.scss\";\n\nexport interface PercentageLabelProps {\n  /**\n   * The ID of the element this label is associated with.\n   */\n  forElement: string;\n  /**\n   * The percentage value to display.\n   */\n  value: number;\n}\n\nconst PercentageLabel: FC<PercentageLabelProps> = ({ forElement = \"\", value = 0 }) => {\n  if (value === null || value === undefined) return null;\n  return (\n    <label htmlFor={forElement} className={styles.label}>\n      {`${value.toFixed()}%`}\n    </label>\n  );\n};\n\nexport default PercentageLabel;\n"],"mappings":";;AAcA,IAAMA,CAAA,GAA4C,SAAAC,CAA7BD,CAAA;EAAgE,IAAAE,CAAA,GAAAF,CAAA,CAAhCG,UAAA;IAAeC,CAAA,GAAAJ,CAAA,CAAEK,KAAA;IAAAC,CAAA,QAAQ,MAAHF,CAAA,GAAG,IAACA,CAAA;EAC7E,OAAI,QAAAE,CAAA,GAA8C,OAEhDC,CAAA,CAAAC,aAAA;IAAOC,OAAA,OAHuD,MAAHP,CAAA,GAAG,KAAEA,CAAA;IAGpCQ,SAAA,EAAWC,CAAA,CAAOC;EAAA,GAC3C,GAAAC,MAAA,CAAGP,CAAA,CAAMQ,OAAA,IAAS,KAGzB;AAAA;AAAA,SAAAd,CAAA,IAAAe,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
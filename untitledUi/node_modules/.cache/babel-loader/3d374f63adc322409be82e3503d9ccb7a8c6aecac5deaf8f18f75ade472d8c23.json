{"ast":null,"code":"import { slicedToArray as e, defineProperty as t } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport o, { forwardRef as n, useRef as l, useState as r, useEffect as a } from \"react\";\nimport i from \"classnames\";\nimport u from \"../../hooks/useMergeRef.js\";\nimport s from \"./EditableTypography.module.scss.js\";\nimport { keyCodes as c } from \"../../constants/keyCodes.js\";\nimport \"../../constants/sizes.js\";\nimport { useKeyboardButtonPressedFunc as p } from \"../../hooks/useKeyboardButtonPressedFunc.js\";\nimport d from \"../../hooks/usePrevious/index.js\";\nimport f from \"../../hooks/ssr/useIsomorphicLayoutEffect.js\";\nvar m = n(function (n, m) {\n  var v = n.id,\n    h = n.className,\n    y = n[\"data-testid\"],\n    g = n.value,\n    b = n.onChange,\n    E = n.onClick,\n    P = n.readOnly,\n    x = void 0 !== P && P,\n    C = n.ariaLabel,\n    k = void 0 === C ? \"\" : C,\n    j = n.placeholder,\n    w = n.clearable,\n    N = n.typographyClassName,\n    D = n.component,\n    B = n.isEditMode,\n    K = n.autoSelectTextOnEditMode,\n    T = n.onEditModeChange,\n    M = n.tooltipProps,\n    R = n.type,\n    S = n.weight,\n    A = n.multiline,\n    H = void 0 !== A && A,\n    I = l(null),\n    L = u(m, I),\n    O = r(B || !1),\n    _ = e(O, 2),\n    z = _[0],\n    F = _[1],\n    q = r(g),\n    G = e(q, 2),\n    J = G[0],\n    Q = G[1],\n    U = d(g),\n    V = l(null),\n    W = l(null);\n  function X(e) {\n    x || z || (e.preventDefault(), Y(!0));\n  }\n  function Y(e) {\n    null == T || T(e), F(e);\n  }\n  function Z() {\n    (Y(!1), g !== J) && (J || w && j ? (Q(J), null == b || b(J)) : Q(g));\n  }\n  function $() {\n    Z();\n  }\n  function ee(e) {\n    if (e.key === c.ENTER) {\n      if (H && e.shiftKey) return;\n      e.preventDefault(), e.stopPropagation(), Z();\n    }\n    e.key === c.ESCAPE && (e.preventDefault(), e.stopPropagation(), Y(!1), Q(g));\n  }\n  function te(e) {\n    Q(e.target.value);\n  }\n  a(function () {\n    z || g === U || g === J || Q(g);\n  }, [U, z, g, J]), a(function () {\n    F(B);\n  }, [B]);\n  var oe = p(X);\n  return a(function () {\n    var e, t;\n    z && (!function () {\n      var e, t;\n      if (null === (t = null === (e = V.current) || void 0 === e ? void 0 : e.focus) || void 0 === t || t.call(e), V.current) {\n        var o = V.current,\n          n = o.value.length;\n        o.setSelectionRange(n, n);\n      }\n    }(), K && (null === (t = null === (e = V.current) || void 0 === e ? void 0 : e.select) || void 0 === t || t.call(e)));\n  }, [K, z]), f(function () {\n    var e;\n    if (W.current) {\n      var t = W.current.getBoundingClientRect();\n      if (null === (e = null == V ? void 0 : V.current) || void 0 === e || e.style.setProperty(\"--input-width\", \"\".concat(t.width, \"px\")), H) {\n        var o = null == V ? void 0 : V.current;\n        null == o || o.style.setProperty(\"--input-height\", \"auto\"), null == o || o.style.setProperty(\"--input-height\", \"\".concat(o.scrollHeight + 2, \"px\"));\n      }\n    }\n  }, [J, z]), o.createElement(\"div\", {\n    ref: L,\n    id: v,\n    \"aria-label\": k,\n    \"data-testid\": y,\n    className: i(s.editableTypography, h),\n    role: z ? null : \"button\",\n    onClick: function (e) {\n      null == E || E(e), X(e);\n    },\n    onKeyDown: oe\n  }, z && (H ? o.createElement(\"textarea\", {\n    ref: V,\n    className: i(s.textarea, N),\n    value: J,\n    onChange: te,\n    onKeyDown: ee,\n    onBlur: $,\n    \"aria-label\": k,\n    placeholder: j,\n    role: \"textbox\",\n    rows: 1\n  }) : o.createElement(\"input\", {\n    ref: V,\n    className: i(s.input, N),\n    value: J,\n    onChange: te,\n    onKeyDown: ee,\n    onBlur: $,\n    \"aria-label\": k,\n    placeholder: j,\n    role: \"input\"\n  })), o.createElement(D, {\n    ref: W,\n    \"aria-hidden\": z,\n    className: i(s.typography, N, t(t(t(t({}, s.hidden, z), s.disabled, x), s.placeholder, !J && j), s.multiline, !z && H)),\n    tabIndex: 0,\n    tooltipProps: M,\n    weight: S,\n    type: R,\n    ellipsis: !H\n  }, J || j));\n});\nexport { m as default };","map":{"version":3,"names":["m","n","v","id","h","className","y","g","value","b","onChange","E","onClick","P","readOnly","x","C","ariaLabel","k","j","placeholder","w","clearable","N","typographyClassName","D","component","B","isEditMode","K","autoSelectTextOnEditMode","T","onEditModeChange","M","tooltipProps","R","type","S","weight","A","multiline","H","I","l","L","u","O","r","_","e","z","F","q","G","J","Q","U","d","V","W","X","preventDefault","Y","Z","$","ee","key","c","ENTER","shiftKey","stopPropagation","ESCAPE","te","target","a","oe","p","t","current","focus","call","o","length","setSelectionRange","select","f","getBoundingClientRect","style","setProperty","concat","width","scrollHeight","createElement","ref","i","s","editableTypography","role","onKeyDown","textarea","onBlur","rows","input","typography","hidden","disabled","tabIndex","ellipsis","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/EditableTypography/EditableTypography.tsx"],"sourcesContent":["import React, { ElementType, forwardRef, useEffect, useRef, useState } from \"react\";\nimport cx from \"classnames\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport { VibeComponentProps } from \"../../types\";\nimport styles from \"./EditableTypography.module.scss\";\nimport { keyCodes } from \"../../constants\";\nimport { useKeyboardButtonPressedFunc } from \"../../hooks/useKeyboardButtonPressedFunc\";\nimport { TooltipProps } from \"../Tooltip\";\nimport usePrevious from \"../../hooks/usePrevious\";\nimport { TextType, TextWeight } from \"../Text\";\nimport { HeadingType, HeadingWeight } from \"../Heading\";\nimport useIsomorphicLayoutEffect from \"../../hooks/ssr/useIsomorphicLayoutEffect\";\n\nexport interface EditableTypographyImplementationProps {\n  /**\n   * The current value of the text.\n   */\n  value: string;\n  /**\n   * Callback fired when the value changes.\n   */\n  onChange?: (value: string) => void;\n  /**\n   * Callback fired when the component is clicked.\n   */\n  onClick?: (event: React.KeyboardEvent | React.MouseEvent) => void;\n  /**\n   * If true, the text is read-only and cannot be edited.\n   */\n  readOnly?: boolean;\n  /**\n   * Placeholder text displayed when the value is empty.\n   */\n  placeholder?: string;\n  /**\n   * The label of the component for accessibility.\n   */\n  ariaLabel?: string;\n  /**\n   * Controls whether the component is in edit mode.\n   */\n  isEditMode?: boolean;\n  /**\n   * If true, automatically selects all text when entering edit mode.\n   */\n  autoSelectTextOnEditMode?: boolean;\n  /**\n   * Callback fired when the edit mode changes.\n   */\n  onEditModeChange?: (isEditMode: boolean) => void;\n  /**\n   * Props to customize the tooltip.\n   */\n  tooltipProps?: Partial<TooltipProps>;\n}\n\nexport interface EditableTypographyProps extends VibeComponentProps, EditableTypographyImplementationProps {\n  /**\n   * The typography component used in view mode.\n   */\n  component: ElementType;\n  /**\n   * Class name applied to the typography component.\n   */\n  typographyClassName: string;\n  /**\n   * If true, shows the placeholder when empty.\n   */\n  clearable?: boolean;\n  /**\n   * The text or heading type.\n   */\n  type?: TextType | HeadingType;\n  /**\n   * The text or heading weight.\n   */\n  weight?: TextWeight | HeadingWeight;\n  /**\n   * If true, enables multi-line editing.\n   */\n  multiline?: boolean;\n}\n\nconst PADDING_OFFSET = 2;\n\nconst EditableTypography = forwardRef(\n  (\n    {\n      id,\n      className,\n      \"data-testid\": dataTestId,\n      value,\n      onChange,\n      onClick,\n      readOnly = false,\n      ariaLabel = \"\",\n      placeholder,\n      clearable,\n      typographyClassName,\n      component: TypographyComponent,\n      isEditMode,\n      autoSelectTextOnEditMode,\n      onEditModeChange,\n      tooltipProps,\n      type,\n      weight,\n      multiline = false\n    }: EditableTypographyProps,\n    ref: React.ForwardedRef<HTMLElement>\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n\n    const [isEditing, setIsEditing] = useState(isEditMode || false);\n    const [inputValue, setInputValue] = useState(value);\n\n    const prevValue = usePrevious(value);\n\n    const inputRef = useRef(null);\n    const typographyRef = useRef(null);\n\n    useEffect(() => {\n      if (!isEditing && value !== prevValue && value !== inputValue) {\n        setInputValue(value);\n      }\n    }, [prevValue, isEditing, value, inputValue]);\n\n    useEffect(() => {\n      setIsEditing(isEditMode);\n    }, [isEditMode]);\n\n    function onTypographyClick(event: React.KeyboardEvent | React.MouseEvent) {\n      onClick?.(event);\n      toggleEditMode(event);\n    }\n\n    function toggleEditMode(event: React.KeyboardEvent | React.MouseEvent) {\n      if (readOnly || isEditing) {\n        return;\n      }\n      event.preventDefault();\n      handleEditModeChange(true);\n    }\n\n    function handleEditModeChange(value: boolean) {\n      onEditModeChange?.(value);\n      setIsEditing(value);\n    }\n\n    function handleInputValueChange() {\n      handleEditModeChange(false);\n\n      if (value === inputValue) {\n        return;\n      }\n\n      const shouldShowPlaceholderWhenEmpty = clearable && placeholder;\n      if (!inputValue && !shouldShowPlaceholderWhenEmpty) {\n        setInputValue(value);\n        return;\n      }\n      setInputValue(inputValue);\n      onChange?.(inputValue);\n    }\n\n    function handleBlur() {\n      handleInputValueChange();\n    }\n\n    function handleKeyDown(event: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>) {\n      if (event.key === keyCodes.ENTER) {\n        if (multiline && event.shiftKey) {\n          return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n        handleInputValueChange();\n      }\n      if (event.key === keyCodes.ESCAPE) {\n        event.preventDefault();\n        event.stopPropagation();\n        handleEditModeChange(false);\n        setInputValue(value);\n      }\n    }\n\n    function handleChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n      setInputValue(event.target.value);\n    }\n\n    const toggleKeyboardEditMode = useKeyboardButtonPressedFunc(toggleEditMode);\n\n    function focus() {\n      inputRef.current?.focus?.();\n\n      if (inputRef.current) {\n        const inputElement = inputRef.current as HTMLInputElement | HTMLTextAreaElement;\n        const textLength = inputElement.value.length;\n        inputElement.setSelectionRange(textLength, textLength);\n      }\n    }\n\n    function selectAllInputText() {\n      inputRef.current?.select?.();\n    }\n\n    useEffect(() => {\n      if (!isEditing) return;\n      focus();\n      if (autoSelectTextOnEditMode) {\n        selectAllInputText();\n      }\n    }, [autoSelectTextOnEditMode, isEditing]);\n\n    useIsomorphicLayoutEffect(() => {\n      if (!typographyRef.current) {\n        return;\n      }\n\n      const { width } = typographyRef.current.getBoundingClientRect();\n      inputRef?.current?.style.setProperty(\"--input-width\", `${width}px`);\n\n      if (multiline) {\n        const textareaElement = inputRef?.current as HTMLTextAreaElement;\n        textareaElement?.style.setProperty(\"--input-height\", \"auto\");\n        textareaElement?.style.setProperty(\"--input-height\", `${textareaElement.scrollHeight + PADDING_OFFSET}px`);\n      }\n    }, [inputValue, isEditing]);\n\n    return (\n      <div\n        ref={mergedRef}\n        id={id}\n        aria-label={ariaLabel}\n        data-testid={dataTestId}\n        className={cx(styles.editableTypography, className)}\n        role={isEditing ? null : \"button\"}\n        onClick={onTypographyClick}\n        onKeyDown={toggleKeyboardEditMode}\n      >\n        {isEditing &&\n          (multiline ? (\n            <textarea\n              ref={inputRef}\n              className={cx(styles.textarea, typographyClassName)}\n              value={inputValue}\n              onChange={handleChange}\n              onKeyDown={handleKeyDown}\n              onBlur={handleBlur}\n              aria-label={ariaLabel}\n              placeholder={placeholder}\n              role=\"textbox\"\n              rows={1}\n            />\n          ) : (\n            <input\n              ref={inputRef}\n              className={cx(styles.input, typographyClassName)}\n              value={inputValue}\n              onChange={handleChange}\n              onKeyDown={handleKeyDown}\n              onBlur={handleBlur}\n              aria-label={ariaLabel}\n              placeholder={placeholder}\n              role=\"input\"\n            />\n          ))}\n        <TypographyComponent\n          ref={typographyRef}\n          aria-hidden={isEditing}\n          className={cx(styles.typography, typographyClassName, {\n            [styles.hidden]: isEditing,\n            [styles.disabled]: readOnly,\n            [styles.placeholder]: !inputValue && placeholder,\n            [styles.multiline]: !isEditing && multiline\n          })}\n          tabIndex={0}\n          tooltipProps={tooltipProps}\n          weight={weight}\n          type={type}\n          ellipsis={!multiline}\n        >\n          {inputValue || placeholder}\n        </TypographyComponent>\n      </div>\n    );\n  }\n);\n\nexport default EditableTypography;\n"],"mappings":";;;;;;;;;;AAmFA,IAEMA,CAAA,GAAqBC,CAAA,CACzB,UAAAA,CAAA,EAsBED,CAAA;EACE,IArBAE,CAAA,GAAED,CAAA,CAAFE,EAAA;IACAC,CAAA,GAASH,CAAA,CAATI,SAAA;IACeC,CAAA,GAAUL,CAAA,CAAzB;IACAM,CAAA,GAAKN,CAAA,CAALO,KAAA;IACAC,CAAA,GAAQR,CAAA,CAARS,QAAA;IACAC,CAAA,GAAOV,CAAA,CAAPW,OAAA;IAAOC,CAAA,GAAAZ,CAAA,CACPa,QAAA;IAAAC,CAAA,QAAW,MAAHF,CAAA,IAAQA,CAAA;IAAAG,CAAA,GAAAf,CAAA,CAChBgB,SAAA;IAAAC,CAAA,QAAY,MAAHF,CAAA,GAAG,KAAEA,CAAA;IACdG,CAAA,GAAWlB,CAAA,CAAXmB,WAAA;IACAC,CAAA,GAASpB,CAAA,CAATqB,SAAA;IACAC,CAAA,GAAmBtB,CAAA,CAAnBuB,mBAAA;IACWC,CAAA,GAAmBxB,CAAA,CAA9ByB,SAAA;IACAC,CAAA,GAAU1B,CAAA,CAAV2B,UAAA;IACAC,CAAA,GAAwB5B,CAAA,CAAxB6B,wBAAA;IACAC,CAAA,GAAgB9B,CAAA,CAAhB+B,gBAAA;IACAC,CAAA,GAAYhC,CAAA,CAAZiC,YAAA;IACAC,CAAA,GAAIlC,CAAA,CAAJmC,IAAA;IACAC,CAAA,GAAMpC,CAAA,CAANqC,MAAA;IAAMC,CAAA,GAAAtC,CAAA,CACNuC,SAAA;IAAAC,CAAA,QAAY,MAAHF,CAAA,IAAQA,CAAA;IAIbG,CAAA,GAAeC,CAAA,CAAO;IACtBC,CAAA,GAAYC,CAAA,CAAY7C,CAAA,EAAK0C,CAAA;IAEnCI,CAAA,GAAkCC,CAAA,CAASpB,CAAA,KAAc;IAAMqB,CAAA,GAAAC,CAAA,CAAAH,CAAA;IAAxDI,CAAA,GAASF,CAAA;IAAEG,CAAA,GAAYH,CAAA;IAC9BI,CAAA,GAAoCL,CAAA,CAASxC,CAAA;IAAM8C,CAAA,GAAAJ,CAAA,CAAAG,CAAA;IAA5CE,CAAA,GAAUD,CAAA;IAAEE,CAAA,GAAaF,CAAA;IAE1BG,CAAA,GAAYC,CAAA,CAAYlD,CAAA;IAExBmD,CAAA,GAAWf,CAAA,CAAO;IAClBgB,CAAA,GAAgBhB,CAAA,CAAO;EAiB7B,SAASiB,EAAeX,CAAA;IAClBlC,CAAA,IAAYmC,CAAA,KAGhBD,CAAA,CAAMY,cAAA,IACNC,CAAA,EAAqB,GACvB;EAAA;EAEA,SAASA,EAAqBb,CAAA;IAC5B,QAAAlB,CAAA,IAAAA,CAAA,CAAmBkB,CAAA,GACnBE,CAAA,CAAaF,CAAA,CACf;EAAA;EAEA,SAASc,EAAA;IAAA,CACPD,CAAA,EAAqB,IAEjBvD,CAAA,KAAU+C,CAAA,MAKTA,CAAA,IADkCjC,CAAA,IAAaF,CAAA,IAKpDoC,CAAA,CAAcD,CAAA,GACd,QAAA7C,CAAA,IAAAA,CAAA,CAAW6C,CAAA,KAJTC,CAAA,CAAchD,CAAA,EAKlB;EAAA;EAEA,SAASyD,EAAA;IACPD,CAAA,EACF;EAAA;EAEA,SAASE,GAAchB,CAAA;IACrB,IAAIA,CAAA,CAAMiB,GAAA,KAAQC,CAAA,CAASC,KAAA,EAAO;MAChC,IAAI3B,CAAA,IAAaQ,CAAA,CAAMoB,QAAA,EACrB;MAGFpB,CAAA,CAAMY,cAAA,IACNZ,CAAA,CAAMqB,eAAA,IACNP,CAAA,EACD;IAAA;IACGd,CAAA,CAAMiB,GAAA,KAAQC,CAAA,CAASI,MAAA,KACzBtB,CAAA,CAAMY,cAAA,IACNZ,CAAA,CAAMqB,eAAA,IACNR,CAAA,EAAqB,IACrBP,CAAA,CAAchD,CAAA,EAElB;EAAA;EAEA,SAASiE,GAAavB,CAAA;IACpBM,CAAA,CAAcN,CAAA,CAAMwB,MAAA,CAAOjE,KAAA,CAC7B;EAAA;EApEAkE,CAAA,CAAU;IACHxB,CAAA,IAAa3C,CAAA,KAAUiD,CAAA,IAAajD,CAAA,KAAU+C,CAAA,IACjDC,CAAA,CAAchD,CAAA,CAEjB;EAAA,GAAE,CAACiD,CAAA,EAAWN,CAAA,EAAW3C,CAAA,EAAO+C,CAAA,IAEjCoB,CAAA,CAAU;IACRvB,CAAA,CAAaxB,CAAA,CACf;EAAA,GAAG,CAACA,CAAA;EA8DJ,IAAMgD,EAAA,GAAyBC,CAAA,CAA6BhB,CAAA;EAuC5D,OAvBAc,CAAA,CAAU;IAJV,IAAAzB,CAAA,EAAA4B,CAAA;IAKO3B,CAAA,MAfP;MAAA,IAAAD,CAAA,EAAA4B,CAAA;MAGE,cAFAA,CAAA,GAAkB,UAAA5B,CAAA,GAAlBS,CAAA,CAASoB,OAAA,UAAS,MAAA7B,CAAA,YAAAA,CAAA,CAAA8B,KAAA,gBAAAF,CAAA,IAAAA,CAAA,CAAAG,IAAA,CAAA/B,CAAA,GAEdS,CAAA,CAASoB,OAAA,EAAS;QACpB,IAAMG,CAAA,GAAevB,CAAA,CAASoB,OAAA;UACxB7E,CAAA,GAAagF,CAAA,CAAazE,KAAA,CAAM0E,MAAA;QACtCD,CAAA,CAAaE,iBAAA,CAAkBlF,CAAA,EAAYA,CAAA,CAC5C;MAAA;IACH,CAQE,IACI4B,CAAA,eANJgD,CAAA,GAAkB,UAAA5B,CAAA,GAAlBS,CAAA,CAASoB,OAAA,UAAS,MAAA7B,CAAA,YAAAA,CAAA,CAAAmC,MAAA,gBAAAP,CAAA,IAAAA,CAAA,CAAAG,IAAA,CAAA/B,CAAA,GASpB;EAAA,GAAG,CAACpB,CAAA,EAA0BqB,CAAA,IAE9BmC,CAAA,CAA0B;IAAA,IAAApC,CAAA;IACxB,IAAKU,CAAA,CAAcmB,OAAA,EAAnB;MAIA,IAAAD,CAAA,GAAkBlB,CAAA,CAAcmB,OAAA,CAAQQ,qBAAA;MAGxC,IAFmB,UAAnBrC,CAAA,WAAAS,CAAA,YAAAA,CAAA,CAAUoB,OAAA,UAAS,MAAA7B,CAAA,IAAAA,CAAA,CAAAsC,KAAA,CAAMC,WAAA,CAAY,iBAAe,GAAAC,MAAA,CADvCZ,CAAA,CAALa,KAAA,UAGJjD,CAAA,EAAW;QACb,IAAMwC,CAAA,GAAkB,QAAAvB,CAAA,YAAAA,CAAA,CAAUoB,OAAA;QAClC,QAAAG,CAAA,IAAAA,CAAA,CAAiBM,KAAA,CAAMC,WAAA,CAAY,kBAAkB,SACrD,QAAAP,CAAA,IAAAA,CAAA,CAAiBM,KAAA,CAAMC,WAAA,CAAY,kBAAgB,GAAAC,MAAA,CAAKR,CAAA,CAAgBU,YAAA,GA/IzD,GA+IsF,MACtG;MAAA;IATA;EAUH,GAAG,CAACrC,CAAA,EAAYJ,CAAA,IAGd+B,CAAA,CACEW,aAAA;IAAAC,GAAA,EAAKjD,CAAA;IACLzC,EAAA,EAAID,CAAA;IAAA,cACQgB,CAAA;IAAS,eACRZ,CAAA;IACbD,SAAA,EAAWyF,CAAA,CAAGC,CAAA,CAAOC,kBAAA,EAAoB5F,CAAA;IACzC6F,IAAA,EAAM/C,CAAA,GAAY,OAAO;IACzBtC,OAAA,EA3GJ,SAAAA,CAA2BqC,CAAA;MACzB,QAAAtC,CAAA,IAAAA,CAAA,CAAUsC,CAAA,GACVW,CAAA,CAAeX,CAAA,CACjB;IAAA;IAyGIiD,SAAA,EAAWvB;EAAA,GAEVzB,CAAA,KACET,CAAA,GACCwC,CAAA,CACEW,aAAA;IAAAC,GAAA,EAAKnC,CAAA;IACLrD,SAAA,EAAWyF,CAAA,CAAGC,CAAA,CAAOI,QAAA,EAAU5E,CAAA;IAC/Bf,KAAA,EAAO8C,CAAA;IACP5C,QAAA,EAAU8D,EAAA;IACV0B,SAAA,EAAWjC,EAAA;IACXmC,MAAA,EAAQpC,CAAA;IAAA,cACI9C,CAAA;IACZE,WAAA,EAAaD,CAAA;IACb8E,IAAA,EAAK;IACLI,IAAA,EAAM;EAAA,KAGRpB,CAAA,CACEW,aAAA;IAAAC,GAAA,EAAKnC,CAAA;IACLrD,SAAA,EAAWyF,CAAA,CAAGC,CAAA,CAAOO,KAAA,EAAO/E,CAAA;IAC5Bf,KAAA,EAAO8C,CAAA;IACP5C,QAAA,EAAU8D,EAAA;IACV0B,SAAA,EAAWjC,EAAA;IACXmC,MAAA,EAAQpC,CAAA;IAAU,cACN9C,CAAA;IACZE,WAAA,EAAaD,CAAA;IACb8E,IAAA,EAAK;EAAA,KAGXhB,CAAA,CAAAW,aAAA,CAACnE,CAAA,EACC;IAAAoE,GAAA,EAAKlC,CAAA;IAAA,eACQT,CAAA;IACb7C,SAAA,EAAWyF,CAAA,CAAGC,CAAA,CAAOQ,UAAA,EAAYhF,CAAA,EAAmBsD,CAAA,CAAAA,CAAA,CAAAA,CAAA,CAAAA,CAAA,KACjDkB,CAAA,CAAOS,MAAA,EAAStD,CAAA,GAChB6C,CAAA,CAAOU,QAAA,EAAW1F,CAAA,GAClBgF,CAAA,CAAO3E,WAAA,GAAekC,CAAA,IAAcnC,CAAA,GACpC4E,CAAA,CAAOvD,SAAA,GAAaU,CAAA,IAAaT,CAAA;IAEpCiE,QAAA,EAAU;IACVxE,YAAA,EAAcD,CAAA;IACdK,MAAA,EAAQD,CAAA;IACRD,IAAA,EAAMD,CAAA;IACNwE,QAAA,GAAWlE;EAAA,GAEVa,CAAA,IAAcnC,CAAA,EAIvB;AAAA;AAAA,SAAAnB,CAAA,IAAA4G,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
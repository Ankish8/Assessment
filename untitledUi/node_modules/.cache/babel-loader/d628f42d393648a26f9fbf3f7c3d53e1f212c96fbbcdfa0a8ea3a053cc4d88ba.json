{"ast":null,"code":"import { slicedToArray as t } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport e from \"classnames\";\nimport i, { forwardRef as r, useState as o, useMemo as n, useRef as l, useCallback as a, useEffect as s } from \"react\";\nimport { noop as c } from \"lodash-es\";\nimport { VariableSizeList as u } from \"react-window\";\nimport f from \"react-virtualized-auto-sizer\";\nimport d from \"../../hooks/usePrevious/index.js\";\nimport m from \"../../hooks/useThrottledCallback.js\";\nimport v from \"../../hooks/useMergeRef.js\";\nimport { getNormalizedItems as h, getMaxOffset as p, easeInOutQuint as I, getOnItemsRenderedData as S, isLayoutDirectionScrollbarVisible as g } from \"../../services/virtualized-service.js\";\nimport { getTestId as T } from \"../../tests/testIds.js\";\nimport { ComponentDefaultTestId as O } from \"../../tests/constants.js\";\nimport z from \"./VirtualizedList.module.scss.js\";\nvar b = r(function (r, b) {\n  var y = r.className,\n    C = r.id,\n    j = r.items,\n    R = void 0 === j ? [] : j,\n    w = r.itemRenderer,\n    F = void 0 === w ? function (t, e, i) {\n      return t;\n    } : w,\n    L = r.getItemHeight,\n    x = void 0 === L ? function (t, e) {\n      return t.height;\n    } : L,\n    V = r.getItemSize,\n    k = void 0 === V ? null : V,\n    A = r.layout,\n    D = void 0 === A ? \"vertical\" : A,\n    E = r.onScroll,\n    M = r.overscanCount,\n    N = void 0 === M ? 0 : M,\n    U = r.getItemId,\n    _ = void 0 === U ? function (t, e) {\n      return t.id;\n    } : U,\n    q = r.scrollToId,\n    H = r.scrollDuration,\n    P = void 0 === H ? 200 : H,\n    W = r.onScrollToFinished,\n    B = void 0 === W ? c : W,\n    Z = r.onItemsRendered,\n    G = r.onItemsRenderedThrottleMs,\n    J = void 0 === G ? 200 : G,\n    K = r.onSizeUpdate,\n    Q = void 0 === K ? c : K,\n    X = r.onVerticalScrollbarVisiblityChange,\n    Y = void 0 === X ? null : X,\n    $ = r.onLayoutDirectionScrollbarVisibilityChange,\n    tt = void 0 === $ ? null : $,\n    et = r.virtualListRef,\n    it = r.scrollableClassName,\n    rt = r.role,\n    ot = r.ariaLabel,\n    nt = r.style,\n    lt = r[\"data-testid\"],\n    at = o(0),\n    st = t(at, 2),\n    ct = st[0],\n    ut = st[1],\n    ft = o(0),\n    dt = t(ft, 2),\n    mt = dt[0],\n    vt = dt[1],\n    ht = \"horizontal\" !== D,\n    pt = n(function () {\n      return ht ? ct : mt;\n    }, [ht, ct, mt]),\n    It = d(q),\n    St = l(null),\n    gt = l(null),\n    Tt = l(null),\n    Ot = l(0),\n    zt = l({\n      initialized: !1,\n      scrollOffsetInitial: 0,\n      scrollOffsetFinal: 0,\n      animationStartTime: 0\n    }),\n    bt = v(b, St),\n    yt = v(et, Tt),\n    Ct = zt.current;\n  Ct.initialized || (Ct.initialized = !0, Ct.scrollOffsetInitial = 0, Ct.scrollOffsetFinal = 0, Ct.animationStartTime = 0);\n  var jt = a(function (t, e) {\n      var i = (k || x)(t, e);\n      return void 0 === i && console.error(\"Couldn't get height for item: \", t), i;\n    }, [x, k]),\n    Rt = a(function (t, e) {\n      var i = _(t, e);\n      return void 0 === i && console.error(\"Couldn't get id for item: \", t), i;\n    }, [_]),\n    wt = n(function () {\n      return h(R, Rt, jt);\n    }, [R, Rt, jt]),\n    Ft = n(function () {\n      return p(pt, wt);\n    }, [pt, wt]),\n    Lt = a(function (t) {\n      var e = t.scrollDirection,\n        i = t.scrollOffset,\n        r = t.scrollUpdateWasRequested;\n      Ot.current = i, r || (Ct.scrollOffsetInitial = i), E && E(e, i, r);\n    }, [E, Ot, Ct]),\n    xt = a(function () {\n      requestAnimationFrame(function () {\n        var t,\n          e = performance.now() - Ct.animationStartTime,\n          i = Ct.scrollOffsetFinal - Ct.scrollOffsetInitial,\n          r = I(Math.min(1, e / P)),\n          o = Math.min(Ft, Ct.scrollOffsetInitial + i * r);\n        Ot.current = o, null === (t = Tt.current) || void 0 === t || t.scrollTo(o), P > e ? xt() : (Ct.animationStartTime = void 0, B && B());\n      });\n    }, [P, Ct, Tt, Ft, B]),\n    Vt = a(function (t) {\n      var e,\n        i,\n        r,\n        o,\n        n = t.offsetTop;\n      Ct.animationStartTime ? Ct.scrollOffsetFinal = n : (null !== (null === (i = null === (e = Tt.current) || void 0 === e ? void 0 : e.state) || void 0 === i ? void 0 : i.scrollOffset) && (Ct.scrollOffsetInitial = null === (o = null === (r = Tt.current) || void 0 === r ? void 0 : r.state) || void 0 === o ? void 0 : o.scrollOffset), Ct.scrollOffsetInitial !== n ? (Ct.scrollOffsetFinal = n, Ct.animationStartTime = performance.now(), xt()) : B && B());\n    }, [Ct, xt, B]),\n    kt = a(function (t) {\n      var e = t.index;\n      return F(R[e], e, t.style);\n    }, [R, F]),\n    At = a(function (t) {\n      return jt(R[t], t);\n    }, [R, jt]),\n    Dt = a(function (t, e) {\n      e === ct && t === mt || setTimeout(function () {\n        ut(e), vt(t), Q(t, e);\n      }, 0);\n    }, [ct, mt, Q]),\n    Et = m(function (t) {\n      if (Z) {\n        var e = S(R, wt, Rt, t.visibleStartIndex, t.visibleStopIndex, pt, Ot.current);\n        Z(e);\n      }\n    }, {\n      wait: J,\n      trailing: !0\n    }, [Z, R, wt, Rt, pt]);\n  return s(function () {\n    if (q && It !== q) {\n      var t = g(R, wt, Rt, pt),\n        e = wt[q];\n      t && e && Vt(e);\n    }\n  }, [It, q, Vt, wt, R, Rt, pt]), s(function () {\n    Tt.current && Tt.current.resetAfterIndex(0);\n  }, [wt]), s(function () {\n    var t = tt || Y;\n    if (t) {\n      var e = g(R, wt, Rt, pt);\n      gt.current !== e && (gt.current = e, t(e));\n    }\n  }, [tt, Y, R, wt, pt, Rt]), i.createElement(\"div\", {\n    ref: bt,\n    className: e(z.virtualizedListWrapper, y),\n    id: C,\n    role: rt,\n    \"aria-label\": ot,\n    \"data-testid\": lt || T(O.VIRTUALIZED_LIST, C),\n    style: nt\n  }, i.createElement(f, null, function (t) {\n    var e = t.height,\n      r = t.width;\n    return Dt(r, e), i.createElement(u, {\n      ref: yt,\n      height: e,\n      width: r,\n      itemCount: R.length,\n      itemSize: At,\n      onScroll: Lt,\n      layout: D,\n      overscanCount: N,\n      onItemsRendered: Et,\n      className: it\n    }, kt);\n  }));\n});\nexport { b as default };","map":{"version":3,"names":["b","r","y","className","C","id","j","items","R","w","itemRenderer","F","t","e","i","L","getItemHeight","x","height","V","getItemSize","k","A","layout","D","E","onScroll","M","overscanCount","N","U","getItemId","_","q","scrollToId","H","scrollDuration","P","W","onScrollToFinished","B","c","Z","onItemsRendered","G","onItemsRenderedThrottleMs","J","K","onSizeUpdate","Q","X","onVerticalScrollbarVisiblityChange","Y","$","onLayoutDirectionScrollbarVisibilityChange","tt","et","virtualListRef","it","scrollableClassName","rt","role","ot","ariaLabel","nt","style","lt","at","o","st","ct","ut","ft","dt","mt","vt","ht","pt","n","It","d","St","l","gt","Tt","Ot","zt","initialized","scrollOffsetInitial","scrollOffsetFinal","animationStartTime","bt","v","yt","Ct","current","jt","a","console","error","Rt","wt","h","Ft","p","Lt","scrollDirection","scrollOffset","scrollUpdateWasRequested","xt","requestAnimationFrame","performance","now","I","Math","min","scrollTo","Vt","offsetTop","state","kt","index","At","Dt","setTimeout","Et","m","S","visibleStartIndex","visibleStopIndex","wait","trailing","s","g","resetAfterIndex","createElement","ref","z","virtualizedListWrapper","T","O","VIRTUALIZED_LIST","f","width","u","itemCount","length","itemSize","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/VirtualizedList/VirtualizedList.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, {\n  CSSProperties,\n  ForwardedRef,\n  forwardRef,\n  LegacyRef,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from \"react\";\nimport { noop as NOOP } from \"lodash-es\";\nimport {\n  ScrollDirection,\n  VariableSizeList as List,\n  ListOnItemsRenderedProps,\n  ListChildComponentProps,\n  VariableSizeList\n} from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport usePrevious from \"../../hooks/usePrevious\";\nimport useThrottledCallback from \"../../hooks/useThrottledCallback\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport {\n  easeInOutQuint,\n  getMaxOffset,\n  getNormalizedItems,\n  getOnItemsRenderedData,\n  isLayoutDirectionScrollbarVisible\n} from \"../../services/virtualized-service\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../tests/constants\";\nimport { VibeComponent, VibeComponentProps } from \"../../types\";\nimport styles from \"./VirtualizedList.module.scss\";\nimport { VirtualizedListItem, VirtualizedListLayout, VirtualizedListScrollDirection } from \"./VirtualizedList.types\";\n\nexport interface VirtualizedListProps extends VibeComponentProps {\n  /**\n   * Class name applied to the scrollable container.\n   */\n  scrollableClassName?: string;\n  /**\n   * The orientation of the list.\n   */\n  layout?: VirtualizedListLayout;\n  /**\n   * The list of items to be rendered.\n   */\n  items: VirtualizedListItem[];\n  /**\n   * Function to render each item in the list.\n   */\n  itemRenderer: (item: VirtualizedListItem, index: number, style: CSSProperties) => ReactElement | JSX.Element;\n  /**\n   * @deprecated - use `getItemSize`.\n   */\n  getItemHeight?: (item: VirtualizedListItem, index: number) => number;\n  /**\n   * Function to get the size (height/width) of each item, based on layout.\n   */\n  getItemSize?: (item: VirtualizedListItem, index: number) => number;\n  /**\n   * Function to get the unique ID of an item.\n   */\n  getItemId?: (item: VirtualizedListItem, index: number) => string;\n  /**\n   * Callback fired when the scroll animation is finished.\n   */\n  onScrollToFinished?: () => void;\n  /**\n   * Number of items to render above and below the visible portion.\n   */\n  overscanCount?: number;\n  /**\n   * The duration of the scroll animation in milliseconds.\n   */\n  scrollDuration?: number;\n  /**\n   * Callback fired when items are rendered.\n   */\n  onItemsRendered?: ({\n    firstItemId,\n    secondItemId,\n    lastItemId,\n    centerItemId,\n    firstItemOffsetEnd,\n    currentOffsetTop\n  }: {\n    firstItemId: string;\n    secondItemId: string;\n    lastItemId: string;\n    centerItemId: string;\n    firstItemOffsetEnd: number;\n    currentOffsetTop: number;\n  }) => void;\n  /**\n   * The delay (in ms) for throttling the `onItemsRendered` callback.\n   */\n  onItemsRenderedThrottleMs?: number;\n  /**\n   * Callback fired when the list size changes.\n   */\n  onSizeUpdate?: (width: number, height: number) => void;\n  /**\n   * @deprecated - use `onLayoutDirectionScrollbarVisibilityChange`.\n   */\n  onVerticalScrollbarVisiblityChange?: (value: boolean) => void;\n  /**\n   * Callback fired when the vertical or horizontal scrollbar visibility changes.\n   */\n  onLayoutDirectionScrollbarVisibilityChange?: (value: boolean) => void;\n  /**\n   * The ARIA role attribute applied to the list.\n   */\n  role?: string;\n  /**\n   * The ARIA label for the list.\n   */\n  ariaLabel?: string;\n  /**\n   * Custom inline styles applied to the list.\n   */\n  style?: CSSProperties;\n  /**\n   * The ID of the item to scroll to.\n   */\n  scrollToId?: string;\n  /**\n   * Reference to the virtualized list component.\n   */\n  virtualListRef?: ForwardedRef<HTMLElement>;\n  /**\n   * Callback fired when the list is scrolled.\n   */\n  onScroll?: (\n    horizontalScrollDirection: VirtualizedListScrollDirection,\n    scrollTop: number,\n    scrollUpdateWasRequested: boolean\n  ) => void;\n}\n\nconst VirtualizedList = forwardRef(\n  (\n    {\n      className,\n      id,\n      items = [],\n      itemRenderer = (item: VirtualizedListItem, _index: number, _style: CSSProperties) => item as ReactElement,\n      getItemHeight = (item: VirtualizedListItem, _index: number) => item.height,\n      getItemSize = null, // must be null for backward compatibility\n      layout = \"vertical\",\n      onScroll,\n      overscanCount = 0,\n      getItemId = (item: VirtualizedListItem, _index: number) => item.id,\n      scrollToId,\n      scrollDuration = 200,\n      onScrollToFinished = NOOP,\n      onItemsRendered,\n      onItemsRenderedThrottleMs = 200,\n      onSizeUpdate = NOOP,\n      onVerticalScrollbarVisiblityChange = null,\n      onLayoutDirectionScrollbarVisibilityChange = null,\n      virtualListRef,\n      scrollableClassName,\n      role,\n      ariaLabel,\n      style,\n      \"data-testid\": dataTestId\n    }: VirtualizedListProps,\n    ref: React.ForwardedRef<HTMLElement>\n  ) => {\n    // states\n    const [listHeight, setListHeight] = useState(0);\n    const [listWidth, setListWidth] = useState(0);\n\n    const isVerticalList = layout !== \"horizontal\";\n    const listSizeByLayout = useMemo(() => {\n      return isVerticalList ? listHeight : listWidth;\n    }, [isVerticalList, listHeight, listWidth]);\n\n    // prevs\n    const prevScrollToId = usePrevious(scrollToId);\n\n    // Refs\n    const componentRef = useRef(null);\n    const isVerticalScrollbarVisibleRef = useRef(null);\n    const listRef = useRef(null);\n    const scrollTopRef = useRef(0);\n    const animationDataRef = useRef({\n      initialized: false,\n      scrollOffsetInitial: 0,\n      scrollOffsetFinal: 0,\n      animationStartTime: 0\n    });\n    const mergedRef = useMergeRef(ref, componentRef);\n    const mergedListRef = useMergeRef(virtualListRef, listRef);\n\n    const animationData = animationDataRef.current;\n    if (!animationData.initialized) {\n      animationData.initialized = true;\n      animationData.scrollOffsetInitial = 0;\n      animationData.scrollOffsetFinal = 0;\n      animationData.animationStartTime = 0;\n    }\n\n    // Callbacks\n    const sizeGetter = useCallback(\n      (item: VirtualizedListItem, index: number) => {\n        const getSize = getItemSize || getItemHeight;\n        const height = getSize(item, index);\n        if (height === undefined) {\n          console.error(\"Couldn't get height for item: \", item);\n        }\n        return height;\n      },\n      [getItemHeight, getItemSize]\n    );\n\n    const idGetter = useCallback(\n      (item: VirtualizedListItem, index: number) => {\n        const itemId = getItemId(item, index);\n        if (itemId === undefined) {\n          console.error(\"Couldn't get id for item: \", item);\n        }\n        return itemId;\n      },\n      [getItemId]\n    );\n\n    // Memos\n    // Creates object of itemId => { item, index, size, offsetTop}\n    const normalizedItems = useMemo(() => {\n      return getNormalizedItems(items, idGetter, sizeGetter);\n    }, [items, idGetter, sizeGetter]);\n\n    const maxListOffset = useMemo(() => {\n      return getMaxOffset(listSizeByLayout, normalizedItems);\n    }, [listSizeByLayout, normalizedItems]);\n\n    // Callbacks\n    const onScrollCB = useCallback(\n      ({\n        scrollDirection,\n        scrollOffset,\n        scrollUpdateWasRequested\n      }: {\n        scrollDirection: ScrollDirection;\n        scrollOffset: number;\n        scrollUpdateWasRequested: boolean;\n      }) => {\n        scrollTopRef.current = scrollOffset;\n        if (!scrollUpdateWasRequested) {\n          animationData.scrollOffsetInitial = scrollOffset;\n        }\n        onScroll && onScroll(scrollDirection, scrollOffset, scrollUpdateWasRequested);\n      },\n      [onScroll, scrollTopRef, animationData]\n    );\n\n    const animateScroll = useCallback(() => {\n      requestAnimationFrame(() => {\n        const now = performance.now();\n        const ellapsed = now - animationData.animationStartTime;\n        const scrollDelta = animationData.scrollOffsetFinal - animationData.scrollOffsetInitial;\n        const easedTime = easeInOutQuint(Math.min(1, ellapsed / scrollDuration));\n        const scrollOffset = animationData.scrollOffsetInitial + scrollDelta * easedTime;\n        const finalOffsetValue = Math.min(maxListOffset, scrollOffset);\n        scrollTopRef.current = finalOffsetValue;\n        listRef.current?.scrollTo(finalOffsetValue);\n\n        if (ellapsed < scrollDuration) {\n          animateScroll();\n        } else {\n          animationData.animationStartTime = undefined;\n          onScrollToFinished && onScrollToFinished();\n        }\n      });\n    }, [scrollDuration, animationData, listRef, maxListOffset, onScrollToFinished]);\n\n    const startScrollAnimation = useCallback(\n      (item: VirtualizedListItem) => {\n        const { offsetTop } = item;\n\n        if (animationData.animationStartTime) {\n          // animation already in progress\n          animationData.scrollOffsetFinal = offsetTop;\n          return;\n        }\n\n        // Update the initial scroll offset with the current scroll position for react 18 batching behavior\n        if (listRef.current?.state?.scrollOffset !== null) {\n          animationData.scrollOffsetInitial = listRef.current?.state?.scrollOffset;\n        }\n\n        if (animationData.scrollOffsetInitial === offsetTop) {\n          // offset already equals to item offset\n          onScrollToFinished && onScrollToFinished();\n          return;\n        }\n\n        animationData.scrollOffsetFinal = offsetTop;\n        animationData.animationStartTime = performance.now();\n        animateScroll();\n      },\n      [animationData, animateScroll, onScrollToFinished]\n    );\n\n    const rowRenderer = useCallback(\n      ({ index, style }: { index: number; style: CSSProperties }) => {\n        const item = items[index];\n        return itemRenderer(item, index, style);\n      },\n      [items, itemRenderer]\n    );\n\n    const calcItemSize = useCallback(\n      (index: number) => {\n        const item = items[index];\n        return sizeGetter(item, index);\n      },\n      [items, sizeGetter]\n    );\n\n    const updateListSize = useCallback(\n      (width: number, height: number) => {\n        if (height !== listHeight || width !== listWidth) {\n          setTimeout(() => {\n            setListHeight(height);\n            setListWidth(width);\n            onSizeUpdate(width, height);\n          }, 0);\n        }\n      },\n      [listHeight, listWidth, onSizeUpdate]\n    );\n\n    const onItemsRenderedCB = useThrottledCallback(\n      ({ visibleStartIndex, visibleStopIndex }: ListOnItemsRenderedProps) => {\n        if (!onItemsRendered) return;\n        const data = getOnItemsRenderedData(\n          items,\n          normalizedItems,\n          idGetter,\n          visibleStartIndex,\n          visibleStopIndex,\n          listSizeByLayout,\n          scrollTopRef.current\n        );\n        onItemsRendered(data);\n      },\n      { wait: onItemsRenderedThrottleMs, trailing: true },\n      [onItemsRendered, items, normalizedItems, idGetter, listSizeByLayout]\n    );\n\n    // Effects\n    useEffect(() => {\n      // scroll to specific item\n      if (scrollToId && prevScrollToId !== scrollToId) {\n        const hasScrollbar = isLayoutDirectionScrollbarVisible(items, normalizedItems, idGetter, listSizeByLayout);\n        const item = normalizedItems[scrollToId as keyof typeof normalizedItems];\n        hasScrollbar && item && startScrollAnimation(item);\n      }\n    }, [prevScrollToId, scrollToId, startScrollAnimation, normalizedItems, items, idGetter, listSizeByLayout]);\n\n    useEffect(() => {\n      // recalculate row heights\n      if (listRef.current) {\n        listRef.current.resetAfterIndex(0);\n      }\n    }, [normalizedItems]);\n\n    useEffect(() => {\n      // update vertical scrollbar visibility\n      const callback = onLayoutDirectionScrollbarVisibilityChange || onVerticalScrollbarVisiblityChange;\n      if (callback) {\n        const isVisible = isLayoutDirectionScrollbarVisible(items, normalizedItems, idGetter, listSizeByLayout);\n        if (isVerticalScrollbarVisibleRef.current !== isVisible) {\n          isVerticalScrollbarVisibleRef.current = isVisible;\n          callback(isVisible);\n        }\n      }\n    }, [\n      onLayoutDirectionScrollbarVisibilityChange,\n      onVerticalScrollbarVisiblityChange,\n      items,\n      normalizedItems,\n      listSizeByLayout,\n      idGetter\n    ]);\n\n    return (\n      <div\n        ref={mergedRef}\n        className={cx(styles.virtualizedListWrapper, className)}\n        id={id}\n        role={role}\n        aria-label={ariaLabel}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.VIRTUALIZED_LIST, id)}\n        style={style}\n      >\n        <AutoSizer>\n          {({ height, width }: { height: number; width: number }) => {\n            updateListSize(width, height);\n            return (\n              <List\n                ref={mergedListRef as unknown as LegacyRef<VariableSizeList<unknown>>}\n                height={height}\n                width={width}\n                itemCount={items.length}\n                itemSize={calcItemSize}\n                onScroll={onScrollCB}\n                layout={layout}\n                overscanCount={overscanCount}\n                onItemsRendered={onItemsRenderedCB}\n                className={scrollableClassName}\n              >\n                {rowRenderer as VibeComponent<ListChildComponentProps>}\n              </List>\n            );\n          }}\n        </AutoSizer>\n      </div>\n    );\n  }\n);\n\nexport default VirtualizedList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
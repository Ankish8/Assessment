{"ast":null,"code":"import t from \"react\";\nimport e from \"classnames\";\nimport s from \"./TipseenTitle.js\";\nimport { ComponentDefaultTestId as a } from \"../../tests/constants.js\";\nimport { getTestId as i } from \"../../tests/testIds.js\";\nimport r from \"./TipseenBasicContent.module.scss.js\";\nvar m = function (m) {\n  var o = m.title,\n    n = m.children,\n    l = void 0 === n ? null : n,\n    c = m.titleClassName,\n    d = m.id,\n    p = m[\"data-testid\"];\n  return t.createElement(\"div\", {\n    className: e(r.tipseenBasicContent, m.className),\n    id: d,\n    \"data-testid\": p || i(a.TIPSEEN_CONTENT, d)\n  }, t.createElement(s, {\n    text: o,\n    className: c\n  }), l);\n};\nexport { m as default };","map":{"version":3,"names":["m","TipseenBasicContent","o","title","n","children","l","c","titleClassName","d","id","p","t","createElement","className","e","r","tipseenBasicContent","i","a","TIPSEEN_CONTENT","s","text","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/Tipseen/TipseenBasicContent.tsx"],"sourcesContent":["import React from \"react\";\nimport cx from \"classnames\";\nimport TipseenTitle from \"./TipseenTitle\";\nimport { VibeComponentProps } from \"../../types\";\nimport { ElementContent } from \"../../types/ElementContent\";\nimport { ComponentDefaultTestId } from \"../../tests/constants\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport styles from \"./TipseenBasicContent.module.scss\";\n\nexport interface TipseenBasicContentProps extends VibeComponentProps {\n  /**\n   * The title text displayed in the Tipseen content.\n   */\n  title?: string;\n  /**\n   * Class name applied to the title.\n   */\n  titleClassName?: string;\n  /**\n   * The content inside the Tipseen.\n   */\n  children?: ElementContent | ElementContent[];\n}\n\nconst TipseenBasicContent: React.FC<TipseenBasicContentProps> = ({\n  title,\n  children = null,\n  titleClassName,\n  className,\n  id,\n  \"data-testid\": dataTestId\n}) => {\n  return (\n    <div\n      className={cx(styles.tipseenBasicContent, className)}\n      id={id}\n      data-testid={dataTestId || getTestId(ComponentDefaultTestId.TIPSEEN_CONTENT, id)}\n    >\n      <TipseenTitle text={title} className={titleClassName} />\n      {children}\n    </div>\n  );\n};\n\nexport default TipseenBasicContent;\n"],"mappings":";;;;;;AAwBA,IAAMA,CAAA,GAA0D,SAAAC,CAAvCD,CAAA;EAOpB,IANHE,CAAA,GAAKF,CAAA,CAALG,KAAA;IAAKC,CAAA,GAAAJ,CAAA,CACLK,QAAA;IAAAC,CAAA,QAAW,MAAHF,CAAA,GAAG,OAAIA,CAAA;IACfG,CAAA,GAAcP,CAAA,CAAdQ,cAAA;IAEAC,CAAA,GAAET,CAAA,CAAFU,EAAA;IACeC,CAAA,GAAUX,CAAA,CAAzB;EAEA,OACEY,CAAA,CACEC,aAAA;IAAAC,SAAA,EAAWC,CAAA,CAAGC,CAAA,CAAOC,mBAAA,EANhBjB,CAAA,CAATc,SAAA;IAOIJ,EAAA,EAAID,CAAA;IACS,eAAAE,CAAA,IAAcO,CAAA,CAAUC,CAAA,CAAuBC,eAAA,EAAiBX,CAAA;EAAA,GAE7EG,CAAA,CAACC,aAAA,CAAAQ,CAAA;IAAaC,IAAA,EAAMpB,CAAA;IAAOY,SAAA,EAAWP;EAAA,IACrCD,CAAA,CAGP;AAAA;AAAA,SAAAN,CAAA,IAAAuB,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
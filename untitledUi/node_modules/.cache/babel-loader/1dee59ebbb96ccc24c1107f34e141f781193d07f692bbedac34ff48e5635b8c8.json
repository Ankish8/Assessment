{"ast":null,"code":"import { defineProperty as e } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport i, { forwardRef as o, useRef as t, useMemo as r } from \"react\";\nimport { BASE_SIZES as a } from \"../../constants/sizes.js\";\nimport l from \"../../hooks/useMergeRef.js\";\nimport { NOOP as s } from \"../../utils/function-utils.js\";\nimport { ensureDefaultValue as d } from \"./SliderHelpers.js\";\nimport { SliderProvider as n } from \"./SliderContext.js\";\nimport m from \"./SliderBase/SliderBase.js\";\nimport p from \"./SliderInfix.js\";\nimport { SliderColor as u } from \"./SliderConstants.js\";\nimport c from \"classnames\";\nimport { withStaticProps as f } from \"../../types/withStaticProps.js\";\nimport \"../../utils/colors-vars-map.js\";\nimport v from \"./Slider.module.scss.js\";\nimport { getStyle as b } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport { camelCase as j } from \"lodash-es\";\nvar x = f(o(function (o, a) {\n  var u = o.ariaLabel,\n    f = o.ariaLabelledby,\n    x = o.className,\n    S = o.color,\n    h = o[\"data-testid\"],\n    L = void 0 === h ? \"monday-slider\" : h,\n    y = o.disabled,\n    C = void 0 !== y && y,\n    P = o.id,\n    g = o.max,\n    E = void 0 === g ? 100 : g,\n    k = o.min,\n    I = void 0 === k ? 0 : k,\n    w = o.onChange,\n    z = void 0 === w ? s : w,\n    F = o.ranged,\n    V = void 0 !== F && F,\n    B = o.step,\n    H = void 0 === B ? 1 : B,\n    T = o.showValue,\n    M = void 0 !== T && T,\n    N = o.valueLabelPosition,\n    O = void 0 === N ? \"top\" : N,\n    R = o.valueLabelColor,\n    W = void 0 === R ? \"primary\" : R,\n    X = o.size,\n    _ = void 0 === X ? \"small\" : X,\n    q = o.value,\n    A = o.defaultValue,\n    D = void 0 === A ? 0 : A,\n    G = o.valueFormatter,\n    J = void 0 === G ? function (e) {\n      return \"\".concat(e, \"%\");\n    } : G,\n    K = o.valueText,\n    Q = o.indicateSelection,\n    U = void 0 !== Q && Q,\n    Y = o.prefix,\n    Z = o.postfix,\n    $ = o.selectionIndicatorWidth,\n    ee = void 0 === $ ? \"60px\" : $,\n    ie = t(null),\n    oe = l(a, ie),\n    te = r(function () {\n      return {\n        prefix: Y,\n        postfix: Z,\n        indicateSelection: U,\n        selectionIndicatorWidth: ee\n      };\n    }, [Y, Z, U, ee]);\n  return i.createElement(n, {\n    ariaLabel: u,\n    ariaLabelledby: f,\n    color: S,\n    \"data-testid\": L,\n    disabled: C,\n    infixOptions: te,\n    max: E,\n    min: I,\n    onChange: z,\n    ranged: V,\n    showValue: M,\n    valueLabelPosition: O,\n    valueLabelColor: W,\n    size: _,\n    step: H,\n    value: q,\n    defaultValue: d(D, I, E, V),\n    valueFormatter: J,\n    valueText: K\n  }, i.createElement(\"div\", {\n    className: c(v.slider, e({}, v.valueShown, M), b(v, j(\"position-\" + O)), x),\n    \"data-testid\": L,\n    id: P,\n    ref: oe\n  }, i.createElement(p, {\n    kind: p.kinds.PREFIX\n  }), i.createElement(m, null), i.createElement(p, {\n    kind: p.kinds.POSTFIX\n  })));\n}), {\n  sizes: a,\n  colors: u\n});\nexport { x as default };","map":{"version":3,"names":["x","f","o","a","u","ariaLabel","ariaLabelledby","className","S","color","h","L","y","disabled","C","P","id","g","max","E","k","min","I","w","onChange","z","s","F","ranged","V","B","step","H","T","showValue","M","N","valueLabelPosition","O","R","valueLabelColor","W","X","size","_","q","value","A","defaultValue","D","G","valueFormatter","J","e","concat","K","valueText","Q","indicateSelection","U","Y","prefix","Z","postfix","$","selectionIndicatorWidth","ee","ie","t","oe","l","te","r","i","createElement","n","infixOptions","d","c","v","slider","valueShown","b","j","ref","p","kind","kinds","PREFIX","m","POSTFIX","sizes","colors","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/Slider/Slider.tsx"],"sourcesContent":["import React, { forwardRef, ReactElement, useMemo, useRef } from \"react\";\nimport { BASE_SIZES } from \"../../constants\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport { NOOP } from \"../../utils/function-utils\";\nimport { ensureDefaultValue } from \"./SliderHelpers\";\nimport { SliderProvider } from \"./SliderContext\";\nimport SliderBase from \"./SliderBase/SliderBase\";\nimport SliderInfix from \"./SliderInfix\";\nimport { IconType } from \"../Icon\";\nimport { SliderColor as SliderColorEnum } from \"./SliderConstants\";\nimport cx from \"classnames\";\nimport { withStaticProps } from \"../../types\";\nimport styles from \"./Slider.module.scss\";\nimport { SliderColor, SliderLabelColor, SliderLabelPosition, SliderSize } from \"./Slider.types\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport { camelCase } from \"lodash-es\";\n\nexport type SliderProps = {\n  /**\n   * Define a string that labels the current element (Slider)\n   */\n  ariaLabel?: string;\n  /**\n   * ElementId of Node that have the text needed for labeling the current element (Slider)\n   */\n  ariaLabelledby?: string;\n  /**\n   * Custom `class name` to be added to the component-root-node\n   */\n  className?: string;\n  /**\n   * Color Mode (primary/positive/negative) of the component (Slider)\n   */\n  color?: SliderColor;\n  /**\n   * Unique TestId - can be used as Selector for integration tests and other needs (tracking, etc)\n   */\n  \"data-testid\"?: string;\n  defaultValue?: number | number[];\n  /**\n   * Formatter function `value => formattedValue`\n   * default formatter return `${value}%`\n   */\n  /**\n   * If set to true, Component (Slider) will be disabled\n   *  - impossible to change value of component (Slider)\n   *  - visual changes (opacity)\n   */\n  disabled?: boolean;\n  /**\n   * Attribute `id` to be added to the component-root-node\n   */\n  id?: string;\n  /**\n   * Max range value of the component (Slider)\n   */\n  max?: number;\n  /**\n   * Min range value of the component (Slider)\n   */\n  min?: number;\n  /**\n   * Optional onChange callback (for outer trigger or Controlled mode)\n   * - required in Controlled Mode\n   */\n  onChange?: (value: number | number[]) => void;\n  /**\n   * If true switch slider to RRange mode (two Thumbs)\n   */\n  ranged?: boolean;\n  /**\n   * The granularity with which the slider can step through values.\n   * (A \"discrete\" slider.) The min prop serves as the origin for the valid values.\n   * We recommend (max - min) to be evenly divisible by the step.\n   */\n  step?: number;\n  /**\n   * Always show `value` instead of Tooltip\n   */\n  showValue?: boolean;\n  /**\n   * Position of the `value` when `showValue` is true\n   */\n  valueLabelPosition?: SliderLabelPosition;\n  /**\n   * Color of the `value` when `showValue` is true\n   */\n  valueLabelColor?: SliderLabelColor;\n  /**\n   * Size small/medium/large of the component (Slider)\n   */\n  size?: SliderSize;\n  /**\n   * Current/selected value of the range of the Component (Slider)\n   *   - should be used in Controlled Mode only\n   *   - in ranged mode should be an array of two numbers\n   */\n  value?: number | number[];\n  /**\n   * Function to format the value, e.g. add %. By default, returns `${value}%`\n   */\n  valueFormatter?: (value: number) => string;\n  /**\n   * Text/presentation of current/selected value\n   *  - should be used in Controlled Mode only\n   */\n  valueText?: string;\n  /**\n   * Show selected from Slider range value\n   */\n  indicateSelection?: boolean;\n  /**\n   * Options for initial/start/prefix element, it can be one of:\n   *  - Any Component (react component, node, text, number etc.)\n   *  - Or it can be an object of options for Icons component (see Icon components props)\n   *  - Or it can be an object for Label (Icon, Heading - and other components)\n   *  - Or it can be Render Props Function witch are getting value and valueText\n   */\n  prefix?: { icon: IconType } | string | ((value: number, valueText: string) => void) | ReactElement;\n  /**\n   * Options for postfix/end/finishing element. Same as prefix element.\n   */\n  postfix?: { icon: IconType } | string | ((value: number, valueText: string) => void) | ReactElement;\n  /**\n   * Width of SelectionIndicator (i.e. TextField)\n   */\n  selectionIndicatorWidth?: string;\n};\n\nconst Slider = forwardRef(\n  (\n    {\n      ariaLabel,\n      ariaLabelledby,\n      className,\n      color,\n      \"data-testid\": dataTestId = \"monday-slider\",\n      disabled = false,\n      id,\n      max = 100,\n      min = 0,\n      onChange = NOOP,\n      ranged = false,\n      step = 1,\n      showValue = false,\n      valueLabelPosition = \"top\",\n      valueLabelColor = \"primary\",\n      size = \"small\",\n      value,\n      defaultValue = 0,\n      valueFormatter = (value: number) => `${value}%`,\n      valueText,\n      indicateSelection = false,\n      prefix,\n      postfix,\n      selectionIndicatorWidth = \"60px\"\n    }: SliderProps,\n    ref: React.ForwardedRef<HTMLElement>\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n    const infixOptions = useMemo(\n      () => ({ prefix, postfix, indicateSelection, selectionIndicatorWidth }),\n      [prefix, postfix, indicateSelection, selectionIndicatorWidth]\n    );\n    return (\n      <SliderProvider\n        ariaLabel={ariaLabel}\n        ariaLabelledby={ariaLabelledby}\n        color={color}\n        data-testid={dataTestId}\n        disabled={disabled}\n        infixOptions={infixOptions}\n        max={max}\n        min={min}\n        onChange={onChange}\n        ranged={ranged}\n        showValue={showValue}\n        valueLabelPosition={valueLabelPosition}\n        valueLabelColor={valueLabelColor}\n        size={size}\n        step={step}\n        value={value}\n        defaultValue={ensureDefaultValue(defaultValue, min, max, ranged)}\n        valueFormatter={valueFormatter}\n        valueText={valueText}\n      >\n        <div\n          className={cx(\n            styles.slider,\n            { [styles.valueShown]: showValue },\n            getStyle(styles, camelCase(\"position-\" + valueLabelPosition)),\n            className\n          )}\n          data-testid={dataTestId}\n          id={id}\n          ref={mergedRef}\n        >\n          <SliderInfix kind={SliderInfix.kinds.PREFIX} />\n          <SliderBase />\n          <SliderInfix kind={SliderInfix.kinds.POSTFIX} />\n        </div>\n      </SliderProvider>\n    );\n  }\n);\n\ninterface SliderStaticProps {\n  sizes: typeof BASE_SIZES;\n  colors: typeof SliderColorEnum;\n}\n\nexport default withStaticProps<SliderProps, SliderStaticProps>(Slider, {\n  sizes: BASE_SIZES,\n  colors: SliderColorEnum\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
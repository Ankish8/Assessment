{"ast":null,"code":"import { slicedToArray as e, defineProperty as t } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport o from \"classnames\";\nimport a, { forwardRef as n, useState as r, useRef as i, useCallback as l, useMemo as s, useEffect as c } from \"react\";\nimport d from \"../../hooks/useDebounceEvent/index.js\";\nimport m from \"../Icon/Icon.js\";\nimport u from \"../Loader/Loader.js\";\nimport p from \"../Text/Text.js\";\nimport v from \"../FieldLabel/FieldLabel.js\";\nimport { TextFieldFeedbackState as f, TextFieldTextType as C, FEEDBACK_CLASSES as b, SIZE_MAPPER as x, TextFieldAriaLabel as y } from \"./TextFieldConstants.js\";\nimport { BASE_SIZES as E } from \"../../constants/sizes.js\";\nimport T from \"../../hooks/useMergeRef.js\";\nimport N from \"../Clickable/Clickable.js\";\nimport { getTestId as h } from \"../../tests/testIds.js\";\nimport { NOOP as g } from \"../../utils/function-utils.js\";\nimport { ComponentDefaultTestId as I, ComponentVibeId as j } from \"../../tests/constants.js\";\nimport { withStaticProps as F } from \"../../types/withStaticProps.js\";\nimport \"../../utils/colors-vars-map.js\";\nimport L from \"./TextField.module.scss.js\";\nimport k from \"../Tooltip/Tooltip.js\";\nimport D from \"../HiddenText/HiddenText.js\";\nvar w = {\n    primary: \"\",\n    secondary: \"\"\n  },\n  H = F(n(function (n, f) {\n    var C = n.className,\n      E = void 0 === C ? \"\" : C,\n      F = n.placeholder,\n      H = void 0 === F ? \"\" : F,\n      A = n.autoComplete,\n      S = void 0 === A ? \"off\" : A,\n      _ = n.value,\n      q = n.onChange,\n      R = void 0 === q ? g : q,\n      W = n.onBlur,\n      z = void 0 === W ? g : W,\n      B = n.onFocus,\n      O = void 0 === B ? g : B,\n      K = n.onKeyDown,\n      M = void 0 === K ? g : K,\n      P = n.onWheel,\n      V = void 0 === P ? g : P,\n      X = n.debounceRate,\n      U = void 0 === X ? 0 : X,\n      Y = n.autoFocus,\n      G = void 0 !== Y && Y,\n      J = n.disabled,\n      Q = void 0 !== J && J,\n      Z = n.readonly,\n      $ = void 0 !== Z && Z,\n      ee = n.setRef,\n      te = void 0 === ee ? g : ee,\n      oe = n.iconName,\n      ae = n.secondaryIconName,\n      ne = n.id,\n      re = void 0 === ne ? \"input\" : ne,\n      ie = n.title,\n      le = void 0 === ie ? \"\" : ie,\n      se = n.size,\n      ce = void 0 === se ? \"small\" : se,\n      de = n.validation,\n      me = void 0 === de ? null : de,\n      ue = n.wrapperClassName,\n      pe = void 0 === ue ? \"\" : ue,\n      ve = n.onIconClick,\n      fe = void 0 === ve ? g : ve,\n      Ce = n.clearOnIconClick,\n      be = void 0 !== Ce && Ce,\n      xe = n.labelIconName,\n      ye = n.showCharCount,\n      Ee = void 0 !== ye && ye,\n      Te = n.inputAriaLabel,\n      Ne = n.searchResultsContainerId,\n      he = void 0 === Ne ? \"\" : Ne,\n      ge = n.activeDescendant,\n      Ie = void 0 === ge ? \"\" : ge,\n      je = n.iconsNames,\n      Fe = void 0 === je ? w : je,\n      Le = n.type,\n      ke = void 0 === Le ? \"text\" : Le,\n      De = n.maxLength,\n      we = void 0 === De ? null : De,\n      He = n.allowExceedingMaxLength,\n      Ae = void 0 !== He && He,\n      Se = n.trim,\n      _e = void 0 !== Se && Se,\n      qe = n.role,\n      Re = void 0 === qe ? \"\" : qe,\n      We = n.required,\n      ze = void 0 !== We && We,\n      Be = n.requiredErrorText,\n      Oe = void 0 === Be ? \"\" : Be,\n      Ke = n.loading,\n      Me = void 0 !== Ke && Ke,\n      Pe = n[\"data-testid\"],\n      Ve = n.secondaryDataTestId,\n      Xe = n.tabIndex,\n      Ue = n.underline,\n      Ye = void 0 !== Ue && Ue,\n      Ge = n.name,\n      Je = n.controlled,\n      Qe = void 0 !== Je && Je,\n      Ze = n.iconTooltipContent,\n      $e = n.secondaryTooltipContent,\n      et = n.dir,\n      tt = r(!1),\n      ot = e(tt, 2),\n      at = ot[0],\n      nt = ot[1],\n      rt = i(null),\n      it = T(f, rt, te),\n      lt = l(function (e) {\n        ze && !e.target.value && nt(!0), z(e);\n      }, [z, ze]),\n      st = l(function (e, t) {\n        at && e && nt(!1), R(e, t || {\n          target: rt.current\n        });\n      }, [R, at]),\n      ct = d({\n        delay: U,\n        onChange: st,\n        initialStateValue: _,\n        trim: _e\n      }),\n      dt = ct.inputValue,\n      mt = ct.onEventChanged,\n      ut = ct.clearValue,\n      pt = s(function () {\n        return Qe ? _ : dt;\n      }, [Qe, _, dt]),\n      vt = l(function (e) {\n        Qe ? st(e.target.value, e) : mt(e);\n      }, [Qe, st, mt]),\n      ft = s(function () {\n        return ae && pt ? ae : oe;\n      }, [oe, ae, pt]),\n      Ct = l(function () {\n        Q || (be && (rt.current && rt.current.focus(), rt.current.value = \"\", Qe ? st(\"\") : ut()), fe(ft));\n      }, [Q, be, fe, ft, Qe, st, ut]),\n      bt = s(function () {\n        return \"number\" == typeof we && pt && pt.length > we ? b.error : me && me.status || at ? b[at ? \"error\" : me.status] : \"\";\n      }, [we, me, at, pt]),\n      xt = oe || ae,\n      yt = Ee || me && me.text || at && Oe,\n      Et = ae === ft,\n      Tt = oe === ft,\n      Nt = (fe !== g || Fe.primary || Ze) && pt && oe.length && Tt,\n      ht = (ae || $e) && Et && !!pt,\n      gt = Ae ? \"\".concat(re, \"-allow-exceeding-max-length-text\") : void 0;\n    c(function () {\n      if ((null == rt ? void 0 : rt.current) && G) {\n        var e = requestAnimationFrame(function () {\n          return rt.current.focus();\n        });\n        return function () {\n          return cancelAnimationFrame(e);\n        };\n      }\n    }, [rt, G]);\n    var It = fe !== g || be,\n      jt = Fe.primary || Ze,\n      Ft = Fe.secondary || $e;\n    return a.createElement(\"div\", {\n      className: o(L.textField, pe, t(t({}, L.disabled, Q), L.onlyUnderline, Ye)),\n      role: Re,\n      \"aria-busy\": Me\n    }, a.createElement(\"div\", {\n      className: o(L.labelWrapper)\n    }, a.createElement(v, {\n      labelText: le,\n      icon: xe,\n      labelFor: re,\n      required: ze\n    }), a.createElement(\"div\", {\n      className: o(L.inputWrapper, x[ce], bt)\n    }, a.createElement(\"input\", {\n      className: o(E, L.input, t(t({}, L.inputHasIcon, !!xt), L.readOnly, $)),\n      placeholder: H,\n      autoComplete: S,\n      value: pt,\n      onChange: vt,\n      disabled: Q,\n      readOnly: $,\n      ref: it,\n      type: ke,\n      id: re,\n      \"data-testid\": Pe || h(I.TEXT_FIELD, re),\n      \"data-vibe\": j.TEXT_FIELD,\n      name: Ge,\n      onBlur: lt,\n      onFocus: O,\n      onKeyDown: M,\n      onWheel: V,\n      maxLength: \"number\" != typeof we || Ae ? void 0 : we,\n      role: he && \"combobox\",\n      \"aria-label\": Te || H,\n      \"aria-invalid\": me && \"error\" === me.status || at,\n      \"aria-owns\": he,\n      \"aria-activedescendant\": Ie,\n      \"aria-required\": ze,\n      \"aria-describedby\": gt,\n      required: ze,\n      tabIndex: Xe,\n      dir: et\n    }), Me && a.createElement(\"div\", {\n      className: o(L.loaderContainer, t({}, L.loaderContainerHasIcon, xt))\n    }, a.createElement(\"div\", {\n      className: o(L.loader)\n    }, a.createElement(u, {\n      className: o(L.loaderSvg)\n    }))), a.createElement(k, {\n      content: Tt ? Ze : void 0,\n      referenceWrapperClassName: L.tooltipContainer\n    }, a.createElement(N, {\n      className: o(L.iconContainer, t(t(t({}, L.iconContainerHasIcon, xt), L.iconContainerActive, Tt), L.iconContainerClickable, It)),\n      onClick: Ct,\n      tabIndex: Nt ? \"0\" : \"-1\",\n      ariaLabel: jt\n    }, a.createElement(m, {\n      icon: oe,\n      className: o(L.icon),\n      iconType: \"font\",\n      iconSize: \"small\" === ce ? \"16px\" : \"18px\"\n    }))), a.createElement(k, {\n      content: Et ? $e : void 0,\n      addKeyboardHideShowTriggersByDefault: !0,\n      referenceWrapperClassName: L.tooltipContainer\n    }, a.createElement(N, {\n      className: o(L.iconContainer, t(t(t({}, L.iconContainerHasIcon, xt), L.iconContainerActive, Et), L.iconContainerClickable, It)),\n      onClick: Ct,\n      tabIndex: ht ? \"0\" : \"-1\",\n      \"data-testid\": Ve || h(I.TEXT_FIELD_SECONDARY_BUTTON, re),\n      ariaLabel: Ft\n    }, a.createElement(m, {\n      icon: ae,\n      className: o(L.icon),\n      iconType: \"font\",\n      iconSize: \"small\" === ce ? \"16px\" : \"18px\"\n    })))), yt && a.createElement(p, {\n      type: \"text2\",\n      color: \"secondary\",\n      className: o(L.subTextContainer)\n    }, (me && me.text || at && Oe) && a.createElement(\"span\", {\n      className: o(L.subTextContainerStatus)\n    }, at ? Oe : me.text), Ee && a.createElement(\"span\", {\n      className: o(L.counter),\n      \"aria-label\": y.CHAR\n    }, pt && pt.length || 0, \"number\" == typeof we && \"/\".concat(we), a.createElement(D, {\n      id: gt,\n      text: \"Maximum of \".concat(we, \" characters\")\n    })))));\n  }), {\n    sizes: E,\n    feedbacks: f,\n    types: C\n  });\nexport { H as default };","map":{"version":3,"names":["w","primary","secondary","H","F","n","f","C","className","E","placeholder","A","autoComplete","S","_","value","q","onChange","R","g","W","onBlur","z","B","onFocus","O","K","onKeyDown","M","P","onWheel","V","X","debounceRate","U","Y","autoFocus","G","J","disabled","Q","Z","readonly","$","ee","setRef","te","oe","iconName","ae","secondaryIconName","ne","id","re","ie","title","le","se","size","ce","de","validation","me","ue","wrapperClassName","pe","ve","onIconClick","fe","Ce","clearOnIconClick","be","xe","labelIconName","ye","showCharCount","Ee","Te","inputAriaLabel","Ne","searchResultsContainerId","he","ge","activeDescendant","Ie","je","iconsNames","Fe","Le","type","ke","De","maxLength","we","He","allowExceedingMaxLength","Ae","Se","trim","_e","qe","role","Re","We","required","ze","Be","requiredErrorText","Oe","Ke","loading","Me","Pe","Ve","secondaryDataTestId","Xe","tabIndex","Ue","underline","Ye","Ge","name","Je","controlled","Qe","Ze","iconTooltipContent","$e","secondaryTooltipContent","et","dir","tt","r","ot","e","at","nt","rt","i","it","T","lt","l","target","st","t","current","ct","d","delay","initialStateValue","dt","inputValue","mt","onEventChanged","ut","clearValue","pt","s","vt","ft","Ct","focus","bt","length","b","error","status","xt","yt","text","Et","Tt","Nt","ht","gt","concat","c","requestAnimationFrame","cancelAnimationFrame","It","jt","Ft","a","createElement","o","L","textField","onlyUnderline","labelWrapper","v","labelText","icon","labelFor","inputWrapper","x","input","inputHasIcon","readOnly","ref","h","I","TEXT_FIELD","j","loaderContainer","loaderContainerHasIcon","loader","u","loaderSvg","k","content","referenceWrapperClassName","tooltipContainer","N","iconContainer","iconContainerHasIcon","iconContainerActive","iconContainerClickable","onClick","ariaLabel","m","iconType","iconSize","addKeyboardHideShowTriggersByDefault","TEXT_FIELD_SECONDARY_BUTTON","p","color","subTextContainer","subTextContainerStatus","counter","y","CHAR","D","sizes","feedbacks","types","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/TextField/TextField.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, {\n  ChangeEvent,\n  ChangeEventHandler,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from \"react\";\nimport useDebounceEvent from \"../../hooks/useDebounceEvent\";\nimport Icon from \"../Icon/Icon\";\nimport Loader from \"../Loader/Loader\";\nimport Text from \"../Text/Text\";\nimport FieldLabel from \"../FieldLabel/FieldLabel\";\nimport {\n  FEEDBACK_CLASSES,\n  SIZE_MAPPER,\n  TextFieldAriaLabel,\n  TextFieldFeedbackState as TextFieldFeedbackStateEnum,\n  TextFieldTextType as TextFieldTextTypeEnum\n} from \"./TextFieldConstants\";\nimport { TextFieldType, TextFieldSize } from \"./TextField.types\";\nimport { BASE_SIZES } from \"../../constants/sizes\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport Clickable from \"../../components/Clickable/Clickable\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport { NOOP } from \"../../utils/function-utils\";\nimport { ComponentDefaultTestId, ComponentVibeId } from \"../../tests/constants\";\nimport { VibeComponentProps, withStaticProps } from \"../../types\";\nimport styles from \"./TextField.module.scss\";\nimport { Tooltip } from \"../Tooltip\";\nimport { HiddenText } from \"../HiddenText\";\n\nconst EMPTY_OBJECT = { primary: \"\", secondary: \"\" };\n\nexport interface TextFieldProps extends VibeComponentProps {\n  /**\n   * The placeholder text displayed when the input is empty.\n   */\n  placeholder?: string;\n  /**\n   * Configures the browser's autocomplete behavior.\n   */\n  autoComplete?: string;\n  /**\n   * The current value of the text field.\n   */\n  value?: string;\n  /**\n   * Callback fired when the text field value changes.\n   */\n  onChange?: (\n    value: string,\n    event: React.ChangeEvent<HTMLInputElement> | Pick<React.ChangeEvent<HTMLInputElement>, \"target\">\n  ) => void;\n  /**\n   * Callback fired when the text field loses focus.\n   */\n  onBlur?: (event: React.FocusEvent) => void;\n  /**\n   * Callback fired when the text field gains focus.\n   */\n  onFocus?: (event: React.FocusEvent) => void;\n  /**\n   * Callback fired when a key is pressed inside the text field.\n   */\n  onKeyDown?: (event: React.KeyboardEvent) => void;\n  /**\n   * Callback fired when the mouse wheel is used inside the text field.\n   */\n  onWheel?: (event: React.WheelEvent) => void;\n  /**\n   * The debounce rate for input value changes.\n   */\n  debounceRate?: number;\n  /**\n   * If true, the input is automatically focused on mount.\n   */\n  autoFocus?: boolean;\n  /**\n   * If true, disables the text field.\n   */\n  disabled?: boolean;\n  /**\n   * If true, makes the text field read-only.\n   */\n  readonly?: boolean;\n  /**\n   * A function to set a reference to the input element.\n   */\n  setRef?: (node: HTMLElement) => void;\n  /**\n   * The primary icon displayed inside the text field.\n   */\n  iconName?: string | React.FunctionComponent | null;\n  /**\n   * The secondary icon displayed inside the text field.\n   */\n  secondaryIconName?: string | React.FunctionComponent | null;\n  /**\n   * The label displayed above the text field.\n   */\n  title?: string;\n  /**\n   * The size of the text field.\n   */\n  size?: TextFieldSize;\n  /**\n   * Validation state for the text field.\n   */\n  validation?: { status?: \"error\" | \"success\"; text?: string | React.ReactNode };\n  /**\n   * Class name applied to the text field wrapper.\n   */\n  wrapperClassName?: string;\n  /**\n   * Callback fired when the icon inside the text field is clicked.\n   */\n  onIconClick?: (icon: string | React.FunctionComponent | null) => void;\n  /**\n   * If true, clears the input when the icon is clicked.\n   */\n  clearOnIconClick?: boolean;\n  /**\n   * The icon displayed inside the label.\n   */\n  labelIconName?: string | React.FunctionComponent | null;\n  /**\n   * If true, displays the character count.\n   */\n  showCharCount?: boolean;\n  /**\n   * The ARIA label for the input field.\n   */\n  inputAriaLabel?: string;\n  /**\n   * The ID of the container where search results are displayed.\n   */\n  searchResultsContainerId?: string;\n  /**\n   * The ID of the currently active search result.\n   */\n  activeDescendant?: string;\n  /**\n   * Icon labels for accessibility.\n   */\n  iconsNames?: {\n    primary: string;\n    secondary: string;\n  };\n  /**\n   * The type of the text field.\n   */\n  type?: TextFieldType;\n  /**\n   * The maximum number of characters allowed.\n   */\n  maxLength?: number;\n  /**\n   * If true, allows the user to exceed the character limit set by `maxLength`.\n   */\n  allowExceedingMaxLength?: boolean;\n  /**\n   * If true, trims whitespace from the input value.\n   */\n  trim?: boolean;\n  /**\n   * The ARIA role of the text field.\n   */\n  role?: string;\n  /**\n   * If true, marks the input as required.\n   */\n  required?: boolean;\n  /**\n   * The error message displayed when a required field is left empty.\n   */\n  requiredErrorText?: string;\n  /**\n   * If true, displays a loading indicator inside the text field.\n   */\n  loading?: boolean;\n  /**\n   * Test ID for the secondary icon.\n   */\n  secondaryDataTestId?: string;\n  /**\n   * The tab order of the input field.\n   */\n  tabIndex?: number;\n  /**\n   * The name attribute for the input field.\n   */\n  name?: string;\n  /**\n   * If true, renders only an underline style for the text field.\n   */\n  underline?: boolean;\n  /**\n   * If true, the component is controlled by an external state.\n   */\n  controlled?: boolean;\n  /**\n   * Tooltip content for the primary icon.\n   */\n  iconTooltipContent?: string;\n  /**\n   * Tooltip content for the secondary icon.\n   */\n  secondaryTooltipContent?: string;\n  /**\n   * The text direction of the input.\n   */\n  dir?: \"ltr\" | \"rtl\" | \"auto\";\n}\n\nconst TextField = forwardRef(\n  (\n    {\n      className = \"\",\n      placeholder = \"\",\n      autoComplete = \"off\",\n      value,\n      onChange = NOOP,\n      onBlur = NOOP,\n      onFocus = NOOP,\n      onKeyDown = NOOP,\n      onWheel = NOOP,\n      debounceRate = 0,\n      autoFocus = false,\n      disabled = false,\n      readonly = false,\n      setRef = NOOP,\n      iconName,\n      secondaryIconName,\n      id = \"input\",\n      title = \"\",\n      size = \"small\",\n      validation = null,\n      wrapperClassName = \"\",\n      onIconClick = NOOP,\n      clearOnIconClick = false,\n      labelIconName,\n      showCharCount = false,\n      inputAriaLabel,\n      searchResultsContainerId = \"\",\n      activeDescendant = \"\",\n      iconsNames = EMPTY_OBJECT,\n      type = \"text\",\n      maxLength = null,\n      allowExceedingMaxLength = false,\n      trim = false,\n      role = \"\",\n      required = false,\n      requiredErrorText = \"\",\n      loading = false,\n      \"data-testid\": dataTestId,\n      secondaryDataTestId,\n      tabIndex,\n      underline = false,\n      name,\n      controlled = false,\n      iconTooltipContent,\n      secondaryTooltipContent,\n      dir\n    }: TextFieldProps,\n    ref: React.ForwardedRef<unknown>\n  ) => {\n    const [isRequiredAndEmpty, setIsRequiredAndEmpty] = useState(false);\n\n    const inputRef = useRef(null);\n    const mergedRef = useMergeRef(ref, inputRef, setRef);\n\n    const onBlurCallback = useCallback(\n      (e: React.FocusEvent<HTMLInputElement>) => {\n        if (required && !e.target.value) {\n          setIsRequiredAndEmpty(true);\n        }\n        onBlur(e);\n      },\n      [onBlur, required]\n    );\n\n    const onChangeCallback = useCallback(\n      (value: string, e?: React.ChangeEvent<HTMLInputElement>) => {\n        if (isRequiredAndEmpty && value) {\n          setIsRequiredAndEmpty(false);\n        }\n        const event = e || { target: inputRef.current };\n        onChange(value, event);\n      },\n      [onChange, isRequiredAndEmpty]\n    );\n\n    const {\n      inputValue: uncontrolledInput,\n      onEventChanged,\n      clearValue\n    } = useDebounceEvent({\n      delay: debounceRate,\n      onChange: onChangeCallback,\n      initialStateValue: value,\n      trim\n    });\n\n    const inputValue = useMemo(() => {\n      return controlled ? value : uncontrolledInput;\n    }, [controlled, value, uncontrolledInput]);\n\n    const handleChange = useCallback<ChangeEventHandler<HTMLInputElement>>(\n      event => {\n        controlled ? onChangeCallback(event.target.value, event) : onEventChanged(event);\n      },\n      [controlled, onChangeCallback, onEventChanged]\n    );\n\n    const currentStateIconName = useMemo(() => {\n      if (secondaryIconName) {\n        return inputValue ? secondaryIconName : iconName;\n      }\n      return iconName;\n    }, [iconName, secondaryIconName, inputValue]);\n\n    const onIconClickCallback = useCallback(() => {\n      if (disabled) {\n        return;\n      }\n\n      if (clearOnIconClick) {\n        if (inputRef.current) {\n          inputRef.current.focus();\n        }\n        // Do it cause otherwise the value is not cleared in target object\n        inputRef.current.value = \"\";\n        controlled ? onChangeCallback(\"\") : clearValue();\n      }\n      onIconClick(currentStateIconName);\n    }, [disabled, clearOnIconClick, onIconClick, currentStateIconName, controlled, onChangeCallback, clearValue]);\n\n    const validationClass = useMemo(() => {\n      if (typeof maxLength === \"number\" && inputValue && inputValue.length > maxLength) {\n        return FEEDBACK_CLASSES.error;\n      }\n\n      if ((!validation || !validation.status) && !isRequiredAndEmpty) {\n        return \"\";\n      }\n      const status = isRequiredAndEmpty ? \"error\" : validation.status;\n      return FEEDBACK_CLASSES[status];\n    }, [maxLength, validation, isRequiredAndEmpty, inputValue]);\n\n    const hasIcon = iconName || secondaryIconName;\n    const shouldShowExtraText =\n      showCharCount || (validation && validation.text) || (isRequiredAndEmpty && requiredErrorText);\n    const isSecondary = secondaryIconName === currentStateIconName;\n    const isPrimary = iconName === currentStateIconName;\n    const shouldFocusOnPrimaryIcon =\n      (onIconClick !== NOOP || iconsNames.primary || iconTooltipContent) && inputValue && iconName.length && isPrimary;\n    const shouldFocusOnSecondaryIcon = (secondaryIconName || secondaryTooltipContent) && isSecondary && !!inputValue;\n    const allowExceedingMaxLengthTextId = allowExceedingMaxLength ? `${id}-allow-exceeding-max-length-text` : undefined;\n\n    useEffect(() => {\n      if (!inputRef?.current || !autoFocus) {\n        return;\n      }\n\n      const animationFrame = requestAnimationFrame(() => inputRef.current.focus());\n      return () => cancelAnimationFrame(animationFrame);\n    }, [inputRef, autoFocus]);\n\n    const isIconContainerClickable = onIconClick !== NOOP || clearOnIconClick;\n\n    const primaryIconLabel = iconsNames.primary || iconTooltipContent;\n    const secondaryIconLabel = iconsNames.secondary || secondaryTooltipContent;\n\n    return (\n      <div\n        className={cx(styles.textField, wrapperClassName, {\n          [styles.disabled]: disabled,\n          [styles.onlyUnderline]: underline\n        })}\n        role={role}\n        aria-busy={loading}\n      >\n        <div className={cx(styles.labelWrapper)}>\n          <FieldLabel labelText={title} icon={labelIconName} labelFor={id} required={required} />\n          <div className={cx(styles.inputWrapper, SIZE_MAPPER[size], validationClass)}>\n            {/*Programatical input (tabIndex={-1}) is working fine with aria-activedescendant attribute despite the rule*/}\n            {/*eslint-disable-next-line jsx-a11y/aria-activedescendant-has-tabindex*/}\n            <input\n              className={cx(className, styles.input, {\n                [styles.inputHasIcon]: !!hasIcon,\n                [styles.readOnly]: readonly\n              })}\n              placeholder={placeholder}\n              autoComplete={autoComplete}\n              value={inputValue}\n              onChange={handleChange}\n              disabled={disabled}\n              readOnly={readonly}\n              ref={mergedRef}\n              type={type}\n              id={id}\n              data-testid={dataTestId || getTestId(ComponentDefaultTestId.TEXT_FIELD, id)}\n              data-vibe={ComponentVibeId.TEXT_FIELD}\n              name={name}\n              onBlur={onBlurCallback}\n              onFocus={onFocus}\n              onKeyDown={onKeyDown}\n              onWheel={onWheel}\n              maxLength={typeof maxLength === \"number\" && !allowExceedingMaxLength ? maxLength : undefined}\n              role={searchResultsContainerId && \"combobox\"} // For voice reader\n              aria-label={inputAriaLabel || placeholder}\n              aria-invalid={(validation && validation.status === \"error\") || isRequiredAndEmpty}\n              aria-owns={searchResultsContainerId}\n              aria-activedescendant={activeDescendant}\n              aria-required={required}\n              aria-describedby={allowExceedingMaxLengthTextId}\n              required={required}\n              tabIndex={tabIndex}\n              dir={dir}\n            />\n            {loading && (\n              <div\n                className={cx(styles.loaderContainer, {\n                  [styles.loaderContainerHasIcon]: hasIcon\n                })}\n              >\n                <div className={cx(styles.loader)}>\n                  <Loader className={cx(styles.loaderSvg)} />\n                </div>\n              </div>\n            )}\n            <Tooltip\n              content={isPrimary ? iconTooltipContent : undefined}\n              referenceWrapperClassName={styles.tooltipContainer}\n            >\n              <Clickable\n                className={cx(styles.iconContainer, {\n                  [styles.iconContainerHasIcon]: hasIcon,\n                  [styles.iconContainerActive]: isPrimary,\n                  [styles.iconContainerClickable]: isIconContainerClickable\n                })}\n                onClick={onIconClickCallback}\n                tabIndex={shouldFocusOnPrimaryIcon ? \"0\" : \"-1\"}\n                ariaLabel={primaryIconLabel}\n              >\n                <Icon\n                  icon={iconName}\n                  className={cx(styles.icon)}\n                  iconType=\"font\"\n                  iconSize={size === \"small\" ? \"16px\" : \"18px\"}\n                />\n              </Clickable>\n            </Tooltip>\n            <Tooltip\n              content={isSecondary ? secondaryTooltipContent : undefined}\n              addKeyboardHideShowTriggersByDefault\n              referenceWrapperClassName={styles.tooltipContainer}\n            >\n              <Clickable\n                className={cx(styles.iconContainer, {\n                  [styles.iconContainerHasIcon]: hasIcon,\n                  [styles.iconContainerActive]: isSecondary,\n                  [styles.iconContainerClickable]: isIconContainerClickable\n                })}\n                onClick={onIconClickCallback}\n                tabIndex={shouldFocusOnSecondaryIcon ? \"0\" : \"-1\"}\n                data-testid={secondaryDataTestId || getTestId(ComponentDefaultTestId.TEXT_FIELD_SECONDARY_BUTTON, id)}\n                ariaLabel={secondaryIconLabel}\n              >\n                <Icon\n                  icon={secondaryIconName}\n                  className={cx(styles.icon)}\n                  iconType=\"font\"\n                  iconSize={size === \"small\" ? \"16px\" : \"18px\"}\n                />\n              </Clickable>\n            </Tooltip>\n          </div>\n          {shouldShowExtraText && (\n            <Text type=\"text2\" color=\"secondary\" className={cx(styles.subTextContainer)}>\n              {((validation && validation.text) || (isRequiredAndEmpty && requiredErrorText)) && (\n                <span className={cx(styles.subTextContainerStatus)}>\n                  {isRequiredAndEmpty ? requiredErrorText : validation.text}\n                </span>\n              )}\n              {showCharCount && (\n                <span className={cx(styles.counter)} aria-label={TextFieldAriaLabel.CHAR}>\n                  {(inputValue && inputValue.length) || 0}\n                  {typeof maxLength === \"number\" && `/${maxLength}`}\n                  <HiddenText id={allowExceedingMaxLengthTextId} text={`Maximum of ${maxLength} characters`} />\n                </span>\n              )}\n            </Text>\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n\ninterface TextFieldStaticProps {\n  sizes: typeof BASE_SIZES;\n  types: typeof TextFieldTextTypeEnum;\n  feedbacks: typeof TextFieldFeedbackStateEnum;\n}\n\nexport default withStaticProps<TextFieldProps, TextFieldStaticProps, unknown>(TextField, {\n  sizes: BASE_SIZES,\n  feedbacks: TextFieldFeedbackStateEnum,\n  types: TextFieldTextTypeEnum\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAmCA,IAAMA,CAAA,GAAe;IAAEC,OAAA,EAAS;IAAIC,SAAA,EAAW;EAAA;EA2dhCC,CAAA,GAAAC,CAAA,CApSGC,CAAA,CAChB,UAAAA,CAAA,EAiDEC,CAAA;IACE,IAAAC,CAAA,GAAAF,CAAA,CAhDAG,SAAA;MAAAC,CAAA,QAAY,MAAHF,CAAA,GAAG,KAAEA,CAAA;MAAAH,CAAA,GAAAC,CAAA,CACdK,WAAA;MAAAP,CAAA,QAAc,MAAHC,CAAA,GAAG,KAAEA,CAAA;MAAAO,CAAA,GAAAN,CAAA,CAChBO,YAAA;MAAAC,CAAA,QAAe,MAAHF,CAAA,GAAG,QAAKA,CAAA;MACpBG,CAAA,GAAKT,CAAA,CAALU,KAAA;MAAKC,CAAA,GAAAX,CAAA,CACLY,QAAA;MAAAC,CAAA,QAAW,MAAHF,CAAA,GAAGG,CAAA,GAAIH,CAAA;MAAAI,CAAA,GAAAf,CAAA,CACfgB,MAAA;MAAAC,CAAA,QAAS,MAAHF,CAAA,GAAGD,CAAA,GAAIC,CAAA;MAAAG,CAAA,GAAAlB,CAAA,CACbmB,OAAA;MAAAC,CAAA,QAAU,MAAHF,CAAA,GAAGJ,CAAA,GAAII,CAAA;MAAAG,CAAA,GAAArB,CAAA,CACdsB,SAAA;MAAAC,CAAA,QAAY,MAAHF,CAAA,GAAGP,CAAA,GAAIO,CAAA;MAAAG,CAAA,GAAAxB,CAAA,CAChByB,OAAA;MAAAC,CAAA,QAAU,MAAHF,CAAA,GAAGV,CAAA,GAAIU,CAAA;MAAAG,CAAA,GAAA3B,CAAA,CACd4B,YAAA;MAAAC,CAAA,QAAe,MAAHF,CAAA,GAAG,IAACA,CAAA;MAAAG,CAAA,GAAA9B,CAAA,CAChB+B,SAAA;MAAAC,CAAA,QAAY,MAAHF,CAAA,IAAQA,CAAA;MAAAG,CAAA,GAAAjC,CAAA,CACjBkC,QAAA;MAAAC,CAAA,QAAW,MAAHF,CAAA,IAAQA,CAAA;MAAAG,CAAA,GAAApC,CAAA,CAChBqC,QAAA;MAAAC,CAAA,QAAW,MAAHF,CAAA,IAAQA,CAAA;MAAAG,EAAA,GAAAvC,CAAA,CAChBwC,MAAA;MAAAC,EAAA,QAAS,MAAHF,EAAA,GAAGzB,CAAA,GAAIyB,EAAA;MACbG,EAAA,GAAQ1C,CAAA,CAAR2C,QAAA;MACAC,EAAA,GAAiB5C,CAAA,CAAjB6C,iBAAA;MAAiBC,EAAA,GAAA9C,CAAA,CACjB+C,EAAA;MAAAC,EAAA,QAAK,MAAHF,EAAA,GAAG,UAAOA,EAAA;MAAAG,EAAA,GAAAjD,CAAA,CACZkD,KAAA;MAAAC,EAAA,QAAQ,MAAHF,EAAA,GAAG,KAAEA,EAAA;MAAAG,EAAA,GAAApD,CAAA,CACVqD,IAAA;MAAAC,EAAA,QAAO,MAAHF,EAAA,GAAG,UAAOA,EAAA;MAAAG,EAAA,GAAAvD,CAAA,CACdwD,UAAA;MAAAC,EAAA,QAAa,MAAHF,EAAA,GAAG,OAAIA,EAAA;MAAAG,EAAA,GAAA1D,CAAA,CACjB2D,gBAAA;MAAAC,EAAA,QAAmB,MAAHF,EAAA,GAAG,KAAEA,EAAA;MAAAG,EAAA,GAAA7D,CAAA,CACrB8D,WAAA;MAAAC,EAAA,QAAc,MAAHF,EAAA,GAAG/C,CAAA,GAAI+C,EAAA;MAAAG,EAAA,GAAAhE,CAAA,CAClBiE,gBAAA;MAAAC,EAAA,QAAmB,MAAHF,EAAA,IAAQA,EAAA;MACxBG,EAAA,GAAanE,CAAA,CAAboE,aAAA;MAAaC,EAAA,GAAArE,CAAA,CACbsE,aAAA;MAAAC,EAAA,QAAgB,MAAHF,EAAA,IAAQA,EAAA;MACrBG,EAAA,GAAcxE,CAAA,CAAdyE,cAAA;MAAcC,EAAA,GAAA1E,CAAA,CACd2E,wBAAA;MAAAC,EAAA,QAA2B,MAAHF,EAAA,GAAG,KAAEA,EAAA;MAAAG,EAAA,GAAA7E,CAAA,CAC7B8E,gBAAA;MAAAC,EAAA,QAAmB,MAAHF,EAAA,GAAG,KAAEA,EAAA;MAAAG,EAAA,GAAAhF,CAAA,CACrBiF,UAAA;MAAAC,EAAA,QAAa,MAAHF,EAAA,GAAGrF,CAAA,GAAYqF,EAAA;MAAAG,EAAA,GAAAnF,CAAA,CACzBoF,IAAA;MAAAC,EAAA,QAAO,MAAHF,EAAA,GAAG,SAAMA,EAAA;MAAAG,EAAA,GAAAtF,CAAA,CACbuF,SAAA;MAAAC,EAAA,QAAY,MAAHF,EAAA,GAAG,OAAIA,EAAA;MAAAG,EAAA,GAAAzF,CAAA,CAChB0F,uBAAA;MAAAC,EAAA,QAA0B,MAAHF,EAAA,IAAQA,EAAA;MAAAG,EAAA,GAAA5F,CAAA,CAC/B6F,IAAA;MAAAC,EAAA,QAAO,MAAHF,EAAA,IAAQA,EAAA;MAAAG,EAAA,GAAA/F,CAAA,CACZgG,IAAA;MAAAC,EAAA,QAAO,MAAHF,EAAA,GAAG,KAAEA,EAAA;MAAAG,EAAA,GAAAlG,CAAA,CACTmG,QAAA;MAAAC,EAAA,QAAW,MAAHF,EAAA,IAAQA,EAAA;MAAAG,EAAA,GAAArG,CAAA,CAChBsG,iBAAA;MAAAC,EAAA,QAAoB,MAAHF,EAAA,GAAG,KAAEA,EAAA;MAAAG,EAAA,GAAAxG,CAAA,CACtByG,OAAA;MAAAC,EAAA,QAAU,MAAHF,EAAA,IAAQA,EAAA;MACAG,EAAA,GAAU3G,CAAA,CAAzB;MACA4G,EAAA,GAAmB5G,CAAA,CAAnB6G,mBAAA;MACAC,EAAA,GAAQ9G,CAAA,CAAR+G,QAAA;MAAQC,EAAA,GAAAhH,CAAA,CACRiH,SAAA;MAAAC,EAAA,QAAY,MAAHF,EAAA,IAAQA,EAAA;MACjBG,EAAA,GAAInH,CAAA,CAAJoH,IAAA;MAAIC,EAAA,GAAArH,CAAA,CACJsH,UAAA;MAAAC,EAAA,QAAa,MAAHF,EAAA,IAAQA,EAAA;MAClBG,EAAA,GAAkBxH,CAAA,CAAlByH,kBAAA;MACAC,EAAA,GAAuB1H,CAAA,CAAvB2H,uBAAA;MACAC,EAAA,GAAG5H,CAAA,CAAH6H,GAAA;MAIFC,EAAA,GAAoDC,CAAA,EAAS;MAAMC,EAAA,GAAAC,CAAA,CAAAH,EAAA;MAA5DI,EAAA,GAAkBF,EAAA;MAAEG,EAAA,GAAqBH,EAAA;MAE1CI,EAAA,GAAWC,CAAA,CAAO;MAClBC,EAAA,GAAYC,CAAA,CAAYtI,CAAA,EAAKmI,EAAA,EAAU3F,EAAA;MAEvC+F,EAAA,GAAiBC,CAAA,CACrB,UAACR,CAAA;QACK7B,EAAA,KAAa6B,CAAA,CAAES,MAAA,CAAOhI,KAAA,IACxByH,EAAA,EAAsB,IAExBlH,CAAA,CAAOgH,CAAA,CACT;MAAA,GACA,CAAChH,CAAA,EAAQmF,EAAA;MAGLuC,EAAA,GAAmBF,CAAA,CACvB,UAACR,CAAA,EAAeW,CAAA;QACVV,EAAA,IAAsBD,CAAA,IACxBE,EAAA,EAAsB,IAGxBtH,CAAA,CAASoH,CAAA,EADKW,CAAA,IAAK;UAAEF,MAAA,EAAQN,EAAA,CAASS;QAAA,EAExC;MAAA,GACA,CAAChI,CAAA,EAAUqH,EAAA;MAGbY,EAAA,GAIIC,CAAA,CAAiB;QACnBC,KAAA,EAAOnH,CAAA;QACPjB,QAAA,EAAU+H,EAAA;QACVM,iBAAA,EAAmBxI,CAAA;QACnBoF,IAAA,EAAAC;MAAA;MAPYoD,EAAA,GAAiBJ,EAAA,CAA7BK,UAAA;MACAC,EAAA,GAAcN,EAAA,CAAdO,cAAA;MACAC,EAAA,GAAUR,EAAA,CAAVS,UAAA;MAQIC,EAAA,GAAaC,CAAA,CAAQ;QACzB,OAAOlC,EAAA,GAAa9G,CAAA,GAAQyI,EAC7B;MAAA,GAAE,CAAC3B,EAAA,EAAY9G,CAAA,EAAOyI,EAAA;MAEjBQ,EAAA,GAAejB,CAAA,CACnB,UAAAR,CAAA;QACEV,EAAA,GAAaoB,EAAA,CAAiBV,CAAA,CAAMS,MAAA,CAAOhI,KAAA,EAAOuH,CAAA,IAASmB,EAAA,CAAenB,CAAA,CAC3E;MAAA,GACD,CAACV,EAAA,EAAYoB,EAAA,EAAkBS,EAAA;MAG3BO,EAAA,GAAuBF,CAAA,CAAQ;QACnC,OAAI7G,EAAA,IACK4G,EAAA,GAAa5G,EAAA,GAEfF,EACR;MAAA,GAAE,CAACA,EAAA,EAAUE,EAAA,EAAmB4G,EAAA;MAE3BI,EAAA,GAAsBnB,CAAA,CAAY;QAClCtG,CAAA,KAIA+B,EAAA,KACEkE,EAAA,CAASS,OAAA,IACXT,EAAA,CAASS,OAAA,CAAQgB,KAAA,IAGnBzB,EAAA,CAASS,OAAA,CAAQnI,KAAA,GAAQ,IACzB6G,EAAA,GAAaoB,EAAA,CAAiB,MAAMW,EAAA,KAEtCvF,EAAA,CAAY4F,EAAA,EACd;MAAA,GAAG,CAACxH,CAAA,EAAU+B,EAAA,EAAkBH,EAAA,EAAa4F,EAAA,EAAsBpC,EAAA,EAAYoB,EAAA,EAAkBW,EAAA;MAE3FQ,EAAA,GAAkBL,CAAA,CAAQ;QAC9B,OAAyB,mBAAdjE,EAAA,IAA0BgE,EAAA,IAAcA,EAAA,CAAWO,MAAA,GAASvE,EAAA,GAC9DwE,CAAA,CAAiBC,KAAA,GAGpBxG,EAAA,IAAeA,EAAA,CAAWyG,MAAA,IAAYhC,EAAA,GAIrC8B,CAAA,CADQ9B,EAAA,GAAqB,UAAUzE,EAAA,CAAWyG,MAAA,IAFhD,EAIV;MAAA,GAAE,CAAC1E,EAAA,EAAW/B,EAAA,EAAYyE,EAAA,EAAoBsB,EAAA;MAEzCW,EAAA,GAAUzH,EAAA,IAAYE,EAAA;MACtBwH,EAAA,GACJ7F,EAAA,IAAkBd,EAAA,IAAcA,EAAA,CAAW4G,IAAA,IAAUnC,EAAA,IAAsB3B,EAAA;MACvE+D,EAAA,GAAc1H,EAAA,KAAsB+G,EAAA;MACpCY,EAAA,GAAY7H,EAAA,KAAaiH,EAAA;MACzBa,EAAA,IACHzG,EAAA,KAAgBjD,CAAA,IAAQoE,EAAA,CAAWtF,OAAA,IAAW4H,EAAA,KAAuBgC,EAAA,IAAc9G,EAAA,CAASqH,MAAA,IAAUQ,EAAA;MACnGE,EAAA,IAA8B7H,EAAA,IAAqB8E,EAAA,KAA4B4C,EAAA,MAAiBd,EAAA;MAChGkB,EAAA,GAAgC/E,EAAA,GAAuB,GAAAgF,MAAA,CAAM3H,EAAA,6CAAuC;IAE1G4H,CAAA,CAAU;MACR,KAAK,QAAAxC,EAAA,QAAQ,IAARA,EAAA,CAAUS,OAAA,KAAY7G,CAAA,EAA3B;QAIA,IAAMiG,CAAA,GAAiB4C,qBAAA,CAAsB;UAAA,OAAMzC,EAAA,CAASS,OAAA,CAAQgB,KAAA;QAAA;QACpE,OAAO;UAAA,OAAMiB,oBAAA,CAAqB7C,CAAA,CAAe;QAAA,CAHhD;MAAA;IAIH,GAAG,CAACG,EAAA,EAAUpG,CAAA;IAEd,IAAM+I,EAAA,GAA2BhH,EAAA,KAAgBjD,CAAA,IAAQoD,EAAA;MAEnD8G,EAAA,GAAmB9F,EAAA,CAAWtF,OAAA,IAAW4H,EAAA;MACzCyD,EAAA,GAAqB/F,EAAA,CAAWrF,SAAA,IAAa6H,EAAA;IAEnD,OACEwD,CAAA,CACEC,aAAA;MAAAhL,SAAA,EAAWiL,CAAA,CAAGC,CAAA,CAAOC,SAAA,EAAW1H,EAAA,EAAgBgF,CAAA,CAAAA,CAAA,KAC7CyC,CAAA,CAAOnJ,QAAA,EAAWC,CAAA,GAClBkJ,CAAA,CAAOE,aAAA,EAAgBrE,EAAA;MAE1BlB,IAAA,EAAMC,EAAA;MAAA,aACKS;IAAA,GAEXwE,CAAA,CAAAC,aAAA;MAAKhL,SAAA,EAAWiL,CAAA,CAAGC,CAAA,CAAOG,YAAA;IAAA,GACxBN,CAAA,CAAAC,aAAA,CAACM,CAAA,EAAW;MAAAC,SAAA,EAAWvI,EAAA;MAAOwI,IAAA,EAAMxH,EAAA;MAAeyH,QAAA,EAAU5I,EAAA;MAAImD,QAAA,EAAUC;IAAA,IAC3E8E,CAAA,CAAAC,aAAA;MAAKhL,SAAA,EAAWiL,CAAA,CAAGC,CAAA,CAAOQ,YAAA,EAAcC,CAAA,CAAYxI,EAAA,GAAOwG,EAAA;IAAA,GAGzDoB,CAAA,CACEC,aAAA;MAAAhL,SAAA,EAAWiL,CAAA,CAAGhL,CAAA,EAAWiL,CAAA,CAAOU,KAAA,EAAKnD,CAAA,CAAAA,CAAA,KAClCyC,CAAA,CAAOW,YAAA,IAAiB7B,EAAA,GACxBkB,CAAA,CAAOY,QAAA,EAAW3J,CAAA;MAErBjC,WAAA,EAAaP,CAAA;MACbS,YAAA,EAAcC,CAAA;MACdE,KAAA,EAAO8I,EAAA;MACP5I,QAAA,EAAU8I,EAAA;MACVxH,QAAA,EAAUC,CAAA;MACV8J,QAAA,EAAU3J,CAAA;MACV4J,GAAA,EAAK5D,EAAA;MACLlD,IAAA,EAAMC,EAAA;MACNtC,EAAA,EAAIC,EAAA;MAAE,eACO2D,EAAA,IAAcwF,CAAA,CAAUC,CAAA,CAAuBC,UAAA,EAAYrJ,EAAA;MAAG,aAChEsJ,CAAA,CAAgBD,UAAA;MAC3BjF,IAAA,EAAMD,EAAA;MACNnG,MAAA,EAAQwH,EAAA;MACRrH,OAAA,EAASC,CAAA;MACTE,SAAA,EAAWC,CAAA;MACXE,OAAA,EAASC,CAAA;MACT6D,SAAA,EAAgC,mBAAdC,EAAA,IAA2BG,EAAA,QAAsC,IAAZH,EAAA;MACvEQ,IAAA,EAAMpB,EAAA,IAA4B;MAAU,cAChCJ,EAAA,IAAkB1E,CAAA;MAChB,gBAAC2D,EAAA,IAAoC,YAAtBA,EAAA,CAAWyG,MAAA,IAAuBhC,EAAA;MACpD,aAAAtD,EAAA;MAAA,yBACYG,EAAA;MAAgB,iBACxBqB,EAAA;MAAQ,oBACLsE,EAAA;MAClBvE,QAAA,EAAUC,EAAA;MACVW,QAAA,EAAUD,EAAA;MACVe,GAAA,EAAKD;IAAA,IAENlB,EAAA,IACCwE,CAAA,CAAAC,aAAA;MACEhL,SAAA,EAAWiL,CAAA,CAAGC,CAAA,CAAOkB,eAAA,EAAe3D,CAAA,KACjCyC,CAAA,CAAOmB,sBAAA,EAAyBrC,EAAA;IAAA,GAGnCe,CAAA,CAAAC,aAAA;MAAKhL,SAAA,EAAWiL,CAAA,CAAGC,CAAA,CAAOoB,MAAA;IAAA,GACxBvB,CAAA,CAAAC,aAAA,CAACuB,CAAA,EAAM;MAACvM,SAAA,EAAWiL,CAAA,CAAGC,CAAA,CAAOsB,SAAA;IAAA,MAInCzB,CAAA,CAAAC,aAAA,CAACyB,CAAA,EACC;MAAAC,OAAA,EAAStC,EAAA,GAAY/C,EAAA,QAAqB;MAC1CsF,yBAAA,EAA2BzB,CAAA,CAAO0B;IAAA,GAElC7B,CAAA,CAACC,aAAA,CAAA6B,CAAA;MACC7M,SAAA,EAAWiL,CAAA,CAAGC,CAAA,CAAO4B,aAAA,EAAarE,CAAA,CAAAA,CAAA,CAAAA,CAAA,KAC/ByC,CAAA,CAAO6B,oBAAA,EAAuB/C,EAAA,GAC9BkB,CAAA,CAAO8B,mBAAA,EAAsB5C,EAAA,GAC7Bc,CAAA,CAAO+B,sBAAA,EAAyBrC,EAAA;MAEnCsC,OAAA,EAASzD,EAAA;MACT7C,QAAA,EAAUyD,EAAA,GAA2B,MAAM;MAC3C8C,SAAA,EAAWtC;IAAA,GAEXE,CAAA,CAAAC,aAAA,CAACoC,CAAA,EAAI;MACH5B,IAAA,EAAMjJ,EAAA;MACNvC,SAAA,EAAWiL,CAAA,CAAGC,CAAA,CAAOM,IAAA;MACrB6B,QAAA,EAAS;MACTC,QAAA,EAAmB,YAATnK,EAAA,GAAmB,SAAS;IAAA,MAI5C4H,CAAA,CAACC,aAAA,CAAAyB,CAAA;MACCC,OAAA,EAASvC,EAAA,GAAc5C,EAAA,QAA0B;MACjDgG,oCAAA,GAAoC;MACpCZ,yBAAA,EAA2BzB,CAAA,CAAO0B;IAAA,GAElC7B,CAAA,CAACC,aAAA,CAAA6B,CAAA;MACC7M,SAAA,EAAWiL,CAAA,CAAGC,CAAA,CAAO4B,aAAA,EAAarE,CAAA,CAAAA,CAAA,CAAAA,CAAA,KAC/ByC,CAAA,CAAO6B,oBAAA,EAAuB/C,EAAA,GAC9BkB,CAAA,CAAO8B,mBAAA,EAAsB7C,EAAA,GAC7Be,CAAA,CAAO+B,sBAAA,EAAyBrC,EAAA;MAEnCsC,OAAA,EAASzD,EAAA;MACT7C,QAAA,EAAU0D,EAAA,GAA6B,MAAM;MAAI,eACpC7D,EAAA,IAAuBuF,CAAA,CAAUC,CAAA,CAAuBuB,2BAAA,EAA6B3K,EAAA;MAClGsK,SAAA,EAAWrC;IAAA,GAEXC,CAAA,CAAAC,aAAA,CAACoC,CAAA,EAAI;MACH5B,IAAA,EAAM/I,EAAA;MACNzC,SAAA,EAAWiL,CAAA,CAAGC,CAAA,CAAOM,IAAA;MACrB6B,QAAA,EAAS;MACTC,QAAA,EAAmB,YAATnK,EAAA,GAAmB,SAAS;IAAA,OAK7C8G,EAAA,IACCc,CAAA,CAACC,aAAA,CAAAyC,CAAA;MAAKxI,IAAA,EAAK;MAAQyI,KAAA,EAAM;MAAY1N,SAAA,EAAWiL,CAAA,CAAGC,CAAA,CAAOyC,gBAAA;IAAA,IACrDrK,EAAA,IAAcA,EAAA,CAAW4G,IAAA,IAAUnC,EAAA,IAAsB3B,EAAA,KAC1D2E,CAAA,CAAAC,aAAA;MAAMhL,SAAA,EAAWiL,CAAA,CAAGC,CAAA,CAAO0C,sBAAA;IAAA,GACxB7F,EAAA,GAAqB3B,EAAA,GAAoB9C,EAAA,CAAW4G,IAAA,GAGxD9F,EAAA,IACC2G,CAAA,CAAMC,aAAA;MAAAhL,SAAA,EAAWiL,CAAA,CAAGC,CAAA,CAAO2C,OAAA;MAAsB,cAAAC,CAAA,CAAmBC;IAAA,GAChE1E,EAAA,IAAcA,EAAA,CAAWO,MAAA,IAAW,GAChB,mBAAdvE,EAAA,IAAsB,IAAAmF,MAAA,CAAQnF,EAAA,GACtC0F,CAAA,CAAAC,aAAA,CAACgD,CAAA,EAAW;MAAApL,EAAA,EAAI2H,EAAA;MAA+BL,IAAA,EAAI,cAAAM,MAAA,CAAgBnF,EAAA,EAAS;IAAA,MAQ5F;EAAA,IASuF;IACvF4I,KAAA,EAAOhO,CAAA;IACPiO,SAAA,EAAWpO,CAAA;IACXqO,KAAA,EAAOpO;EAAA;AAAA,SAAAJ,CAAA,IAAAyO,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
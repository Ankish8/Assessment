{"ast":null,"code":"import { __rest as e } from \"../../../_virtual/_tslib.js\";\nimport { camelCase as s } from \"lodash-es\";\nimport { getStyle as t } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport i from \"classnames\";\nimport r, { forwardRef as a, useRef as o } from \"react\";\nimport l from \"../../hooks/useMergeRef.js\";\nimport { DialogType as d, DialogSize as m } from \"../Dialog/DialogConstants.js\";\nimport { withStaticProps as p } from \"../../types/withStaticProps.js\";\nimport \"../../utils/colors-vars-map.js\";\nimport { getTestId as n, ComponentDefaultTestId as c } from \"../../tests/testIds.js\";\nimport y from \"./DialogContentContainer.module.scss.js\";\nvar b = p(a(function (a, d) {\n  var m = a.className,\n    p = void 0 === m ? \"\" : m,\n    b = a.ariaLabelledby,\n    f = void 0 === b ? \"\" : b,\n    v = a.ariaDescribedby,\n    j = void 0 === v ? \"\" : v,\n    u = a.type,\n    C = void 0 === u ? \"popover\" : u,\n    g = a.size,\n    N = void 0 === g ? \"small\" : g,\n    h = a.children,\n    D = a.style,\n    z = a[\"data-testid\"],\n    O = void 0 === z ? n(c.DIALOG_CONTENT_CONTAINER, a.id) : z,\n    _ = e(a, [\"id\", \"className\", \"ariaLabelledby\", \"ariaDescribedby\", \"type\", \"size\", \"children\", \"style\", \"data-testid\"]),\n    E = o(null),\n    I = l(d, E);\n  return r.createElement(\"div\", Object.assign({\n    role: \"dialog\",\n    \"data-testid\": O,\n    \"aria-labelledby\": f,\n    \"aria-describedby\": j,\n    ref: I,\n    style: D,\n    className: i(y.dialogContentContainer, p, t(y, s(\"type--\" + C)), t(y, s(\"size--\" + N)))\n  }, _), h);\n}), {\n  types: d,\n  sizes: m\n});\nexport { b as default };","map":{"version":3,"names":["b","p","a","d","m","className","ariaLabelledby","f","v","ariaDescribedby","j","u","type","C","g","size","N","h","children","D","style","z","O","n","c","DIALOG_CONTENT_CONTAINER","id","_","e","E","o","I","l","r","createElement","Object","assign","role","ref","i","y","dialogContentContainer","t","s","types","sizes","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/DialogContentContainer/DialogContentContainer.tsx"],"sourcesContent":["import { camelCase } from \"lodash-es\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport cx from \"classnames\";\nimport React, { useRef, forwardRef } from \"react\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport { DialogSize as DialogSizeEnum, DialogType as DialogTypeEnum } from \"../Dialog/DialogConstants\";\nimport { DialogSize, DialogType } from \"../Dialog\";\nimport { withStaticProps, VibeComponentProps } from \"../../types\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport styles from \"./DialogContentContainer.module.scss\";\n\nexport interface DialogContentContainerProps extends VibeComponentProps {\n  /**\n   * The content inside the dialog container.\n   */\n  children?: React.ReactNode;\n  /**\n   * The ID of the element that labels this dialog.\n   */\n  ariaLabelledby?: string;\n  /**\n   * The ID of the element that describes this dialog.\n   */\n  ariaDescribedby?: string;\n  /**\n   * The type of dialog.\n   */\n  type?: DialogType;\n  /**\n   * The size of the dialog.\n   */\n  size?: DialogSize;\n  /**\n   * Custom styles applied to the dialog container.\n   */\n  style?: React.CSSProperties;\n}\n\nconst DialogContentContainer = forwardRef(\n  (\n    {\n      id,\n      className = \"\",\n      ariaLabelledby = \"\",\n      ariaDescribedby = \"\",\n      type = \"popover\",\n      size = \"small\",\n      children,\n      style,\n      \"data-testid\": dataTestId = getTestId(ComponentDefaultTestId.DIALOG_CONTENT_CONTAINER, id),\n      ...props\n    }: DialogContentContainerProps,\n    ref: React.Ref<HTMLElement>\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n\n    return (\n      <div\n        role=\"dialog\"\n        data-testid={dataTestId}\n        aria-labelledby={ariaLabelledby}\n        aria-describedby={ariaDescribedby}\n        ref={mergedRef}\n        style={style}\n        className={cx(\n          styles.dialogContentContainer,\n          className,\n          getStyle(styles, camelCase(\"type--\" + type)),\n          getStyle(styles, camelCase(\"size--\" + size))\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n\ninterface DialogContentContainerStaticProps {\n  types: typeof DialogTypeEnum;\n  sizes: typeof DialogSizeEnum;\n}\n\nexport default withStaticProps<DialogContentContainerProps, DialogContentContainerStaticProps>(DialogContentContainer, {\n  types: DialogTypeEnum,\n  sizes: DialogSizeEnum\n});\n"],"mappings":";;;;;;;;;;;AAsCA,IA8CeA,CAAA,GAAAC,CAAA,CA9CgBC,CAAA,CAC7B,UACEA,CAAA,EAYAC,CAAA;EAZA,IACIC,CAAA,GAQwFF,CAAA,CAP1FG,SAAA;IAAAJ,CAAA,QAAY,MAAHG,CAAA,GAAG,KAAEA,CAAA;IAAAJ,CAAA,GAO4EE,CAAA,CAN1FI,cAAA;IAAAC,CAAA,QAAiB,MAAHP,CAAA,GAAG,KAAEA,CAAA;IAAAQ,CAAA,GAMuEN,CAAA,CAL1FO,eAAA;IAAAC,CAAA,QAAkB,MAAHF,CAAA,GAAG,KAAEA,CAAA;IAAAG,CAAA,GAKsET,CAAA,CAJ1FU,IAAA;IAAAC,CAAA,QAAO,MAAHF,CAAA,GAAG,YAASA,CAAA;IAAAG,CAAA,GAI0EZ,CAAA,CAH1Fa,IAAA;IAAAC,CAAA,QAAO,MAAHF,CAAA,GAAG,UAAOA,CAAA;IACdG,CAAA,GAE0Ff,CAAA,CAF1FgB,QAAA;IACAC,CAAA,GAC0FjB,CAAA,CAD1FkB,KAAA;IAAKC,CAAA,GACqFnB,CAAA,CAA1F;IAAeoB,CAAA,QAAa,MAAHD,CAAA,GAAGE,CAAA,CAAUC,CAAA,CAAuBC,wBAAA,EAA6BvB,CAAA,CAR1FwB,EAAA,IAQ0FL,CAAA;IACvFM,CAAA,GAAKC,CAAA,CAAA1B,CAAA,EAVV;IAcM2B,CAAA,GAAeC,CAAA,CAAO;IACtBC,CAAA,GAAYC,CAAA,CAAY7B,CAAA,EAAK0B,CAAA;EAEnC,OACEI,CAAA,CAAAC,aAAA,QAAAC,MAAA,CAAAC,MAAA;IACEC,IAAA,EAAK;IAAQ,eACAf,CAAA;IAAU,mBACNf,CAAA;IAAc,oBACbG,CAAA;IAClB4B,GAAA,EAAKP,CAAA;IACLX,KAAA,EAAOD,CAAA;IACPd,SAAA,EAAWkC,CAAA,CACTC,CAAA,CAAOC,sBAAA,EACPxC,CAAA,EACAyC,CAAA,CAASF,CAAA,EAAQG,CAAA,CAAU,WAAW9B,CAAA,IACtC6B,CAAA,CAASF,CAAA,EAAQG,CAAA,CAAU,WAAW3B,CAAA;EAAA,GAEpCW,CAAA,GAEHV,CAAA,CAGP;AAAA,IAQqH;EACrH2B,KAAA,EAAOzC,CAAA;EACP0C,KAAA,EAAOzC;AAAA;AAAA,SAAAJ,CAAA,IAAA8C,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
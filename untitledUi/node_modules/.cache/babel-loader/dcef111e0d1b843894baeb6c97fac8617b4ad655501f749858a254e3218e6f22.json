{"ast":null,"code":"import { typeof as o } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport r from \"react\";\nimport t from \"../Icon/Icon.js\";\nimport { defaultIconMap as e } from \"./ToastConstants.js\";\nvar n = function (n, i) {\n  return i && \"object\" === o(i) ? i : i || e[n] ? r.createElement(t, {\n    iconType: i ? \"font\" : \"svg\",\n    icon: i || e[n],\n    iconSize: 20,\n    ignoreFocusStyle: !0\n  }) : null;\n};\nexport { n as getIcon };","map":{"version":3,"names":["n","getIcon","i","o","e","r","createElement","t","iconType","icon","iconSize","ignoreFocusStyle"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/Toast/ToastHelpers.tsx"],"sourcesContent":["import React from \"react\";\nimport Icon, { IconSubComponentProps } from \"../Icon/Icon\";\nimport { defaultIconMap } from \"./ToastConstants\";\nimport { ToastType } from \"./Toast.types\";\n\nexport const getIcon = (type: ToastType, icon: string | React.FC<IconSubComponentProps> | null) => {\n  /* icon may be node a may be a string */\n  if (icon && typeof icon === \"object\") {\n    return icon;\n  }\n  return icon || defaultIconMap[type] ? (\n    <Icon iconType={icon ? \"font\" : \"svg\"} icon={icon || defaultIconMap[type]} iconSize={20} ignoreFocusStyle />\n  ) : null;\n};\n"],"mappings":";;;;AAKO,IAAMA,CAAA,GAAU,SAAAC,CAACD,CAAA,EAAiBE,CAAA;EAEvC,OAAIA,CAAA,IAAwB,aAAhBC,CAAA,CAAOD,CAAA,IACVA,CAAA,GAEFA,CAAA,IAAQE,CAAA,CAAeJ,CAAA,IAC5BK,CAAA,CAAAC,aAAA,CAACC,CAAA,EAAI;IAACC,QAAA,EAAUN,CAAA,GAAO,SAAS;IAAOO,IAAA,EAAMP,CAAA,IAAQE,CAAA,CAAeJ,CAAA;IAAOU,QAAA,EAAU;IAAIC,gBAAA,GAAgB;EAAA,KACvG,IACN;AAAA;AAAA,SAAAX,CAAA,IAAAC,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
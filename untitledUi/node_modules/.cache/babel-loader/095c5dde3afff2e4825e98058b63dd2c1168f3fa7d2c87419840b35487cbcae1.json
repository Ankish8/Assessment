{"ast":null,"code":"import { slicedToArray as e } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport a, { useState as l, useMemo as r, createContext as t, useContext as u } from \"react\";\nimport { createTestIdHelper as o } from \"../../helpers/testid-helper.js\";\nimport { useSliderValues as i, useDragging as n, useSliderActionsContextValue as s } from \"./SliderHooks.js\";\nvar d = t({}),\n  c = t({}),\n  v = t({}),\n  m = t({});\nfunction f(t) {\n  var u = t.children,\n    f = t.ariaLabel,\n    b = t.ariaLabelledby,\n    p = t.color,\n    g = t.defaultValue,\n    L = t.disabled,\n    h = t.max,\n    x = t.min,\n    P = t.onChange,\n    V = t.ranged,\n    T = t.showValue,\n    E = t.valueLabelPosition,\n    j = t.valueLabelColor,\n    y = t.size,\n    C = t.step,\n    S = t.value,\n    w = t.valueFormatter,\n    z = t.valueText,\n    H = t.infixOptions,\n    _ = o(t[\"data-testid\"]),\n    k = i(g, S, w, z),\n    A = k.actualValue,\n    B = k.actualValueText,\n    F = k.getSelectedValue,\n    I = k.setSelectedValue,\n    O = l(null),\n    q = e(O, 2),\n    D = q[0],\n    G = q[1],\n    J = l(null),\n    K = e(J, 2),\n    M = K[0],\n    N = K[1],\n    Q = n(),\n    R = e(Q, 3),\n    U = R[0],\n    W = R[1],\n    X = R[2],\n    Y = r(function () {\n      return {\n        active: D,\n        ariaLabel: f,\n        ariaLabelledby: b,\n        color: p,\n        disabled: L,\n        dragging: U,\n        focused: M,\n        size: y,\n        shapeTestId: _,\n        showValue: T,\n        valueLabelPosition: E,\n        valueLabelColor: j\n      };\n    }, [D, f, b, p, L, U, M, y, _, T, E, j]),\n    Z = r(function () {\n      return {\n        max: h,\n        min: x,\n        ranged: V,\n        step: C,\n        value: A,\n        valueText: B\n      };\n    }, [h, x, V, C, A, B]),\n    $ = s(A, M, X, F, h, x, P, V, G, N, W, I, C);\n  return a.createElement(d.Provider, {\n    value: Y\n  }, a.createElement(c.Provider, {\n    value: Z\n  }, a.createElement(v.Provider, {\n    value: $\n  }, a.createElement(m.Provider, {\n    value: H\n  }, u))));\n}\nfunction b() {\n  return u(d);\n}\nfunction p() {\n  return u(m);\n}\nfunction g() {\n  return u(c);\n}\nfunction L() {\n  return u(v);\n}\nexport { f as SliderProvider, L as useSliderActions, p as useSliderInfix, g as useSliderSelection, b as useSliderUi };","map":{"version":3,"names":["d","t","c","v","m","f","u","children","ariaLabel","b","ariaLabelledby","p","color","g","defaultValue","L","disabled","h","max","x","min","P","onChange","V","ranged","T","showValue","E","valueLabelPosition","j","valueLabelColor","y","size","C","step","S","value","w","valueFormatter","z","valueText","H","infixOptions","_","o","k","i","A","actualValue","B","actualValueText","F","getSelectedValue","I","setSelectedValue","O","l","q","e","D","G","J","K","M","N","Q","n","R","U","W","X","Y","r","active","dragging","focused","shapeTestId","Z","$","s","a","createElement","Provider","SliderProvider","useSliderActions","useSliderInfix","useSliderSelection","useSliderUi"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/Slider/SliderContext.tsx"],"sourcesContent":["import React, { createContext, ReactElement, useContext, useMemo, useState } from \"react\";\nimport { createTestIdHelper } from \"../../helpers/testid-helper\";\nimport { useDragging, useSliderActionsContextValue, useSliderValues } from \"./SliderHooks\";\nimport { SliderProps } from \"./Slider\";\nimport { SliderContextActions, SliderContextInfix, SliderContextSelection, SliderContextUI } from \"./SliderConstants\";\nimport { IconType } from \"../Icon\";\n\nconst UiContext = createContext({});\nconst SelectionContext = createContext({});\nconst ActionsContext = createContext({});\nconst InfixContext = createContext({});\n\nexport interface SliderProviderProps extends SliderProps {\n  /**\n   * The child elements inside the slider provider.\n   */\n  children?: ReactElement | ReactElement[];\n  /**\n   * Configuration options for prefix, postfix, and selection indicator.\n   */\n  infixOptions?: {\n    /**\n     * If true, displays the selected value from the slider range.\n     */\n    indicateSelection?: boolean;\n    /**\n     * Configuration for the prefix (start) element, which can be:\n     * - A React component, text, number, or node.\n     * - An object with an icon.\n     * - A function that receives the value and valueText.\n     */\n    prefix?: { icon: IconType } | string | ((value: number, valueText: string) => void) | ReactElement;\n    /**\n     * Configuration for the postfix (end) element, similar to prefix.\n     */\n    postfix?: { icon: IconType } | string | ((value: number, valueText: string) => void) | ReactElement;\n    /**\n     * The width of the selection indicator.\n     */\n    selectionIndicatorWidth?: string;\n  };\n}\n\nexport function SliderProvider({\n  children,\n  ariaLabel,\n  ariaLabelledby,\n  color,\n  \"data-testid\": dataTestId,\n  defaultValue,\n  disabled,\n  max,\n  min,\n  onChange,\n  ranged,\n  showValue,\n  valueLabelPosition,\n  valueLabelColor,\n  size,\n  step,\n  value,\n  valueFormatter,\n  valueText,\n  infixOptions\n}: SliderProviderProps) {\n  const shapeTestId = createTestIdHelper(dataTestId);\n  const { actualValue, actualValueText, getSelectedValue, setSelectedValue } = useSliderValues(\n    defaultValue,\n    value,\n    valueFormatter,\n    valueText\n  );\n\n  const [active, setActive] = useState<number>(null);\n  const [focused, setFocused] = useState<number>(null);\n  const [dragging, setDragging, getDragging] = useDragging();\n\n  const uiContextValue: SliderContextUI = useMemo(\n    () => ({\n      active,\n      ariaLabel,\n      ariaLabelledby,\n      color,\n      disabled,\n      dragging,\n      focused,\n      size,\n      shapeTestId,\n      showValue,\n      valueLabelPosition,\n      valueLabelColor\n    }),\n    [\n      active,\n      ariaLabel,\n      ariaLabelledby,\n      color,\n      disabled,\n      dragging,\n      focused,\n      size,\n      shapeTestId,\n      showValue,\n      valueLabelPosition,\n      valueLabelColor\n    ]\n  );\n\n  const selectionContextValue: SliderContextSelection = useMemo(\n    () => ({\n      max,\n      min,\n      ranged,\n      step,\n      value: actualValue,\n      valueText: actualValueText\n    }),\n    [max, min, ranged, step, actualValue, actualValueText]\n  );\n\n  const actionsContextValue: SliderContextActions = useSliderActionsContextValue(\n    actualValue,\n    focused,\n    getDragging,\n    getSelectedValue,\n    max,\n    min,\n    onChange,\n    ranged,\n    setActive,\n    setFocused,\n    setDragging,\n    setSelectedValue,\n    step\n  );\n\n  return (\n    <UiContext.Provider value={uiContextValue}>\n      <SelectionContext.Provider value={selectionContextValue}>\n        <ActionsContext.Provider value={actionsContextValue}>\n          <InfixContext.Provider value={infixOptions}>{children}</InfixContext.Provider>\n        </ActionsContext.Provider>\n      </SelectionContext.Provider>\n    </UiContext.Provider>\n  );\n}\n\nexport function useSliderUi(): SliderContextUI {\n  return useContext(UiContext) as SliderContextUI;\n}\n\nexport function useSliderInfix(): SliderContextInfix {\n  return useContext(InfixContext) as SliderContextInfix;\n}\n\nexport function useSliderSelection(): SliderContextSelection {\n  return useContext(SelectionContext) as SliderContextSelection;\n}\n\nexport function useSliderActions(): SliderContextActions {\n  return useContext(ActionsContext) as SliderContextActions;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
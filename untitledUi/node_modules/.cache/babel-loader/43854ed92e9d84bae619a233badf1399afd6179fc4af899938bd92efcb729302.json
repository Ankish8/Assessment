{"ast":null,"code":"// src/index.ts\nimport * as React from \"react\";\n\n// src/helpers.ts\nvar styleToObject = input => {\n  if (typeof input !== \"string\") {\n    return {};\n  }\n  return input.split(/ ?; ?/).reduce((acc, item) => {\n    const [key, value] = item.split(/ ?: ?/).map((d, index) => index === 0 ? d.replace(/\\s+/g, \"\") : d.trim());\n    if (key && value) {\n      const nextKey = key.replace(/(\\w)-(\\w)/g, (_$0, $1, $2) => `${$1}${$2.toUpperCase()}`);\n      let nextValue = value.trim();\n      if (!Number.isNaN(Number(value))) {\n        nextValue = Number(value);\n      }\n      acc[key.startsWith(\"-\") ? key : nextKey] = nextValue;\n    }\n    return acc;\n  }, {});\n};\nfunction randomString(length = 6) {\n  const characters = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  let result = \"\";\n  for (let index = length; index > 0; --index) {\n    result += characters[Math.round(Math.random() * (characters.length - 1))];\n  }\n  return result;\n}\nvar noTextChildNodes = [\"br\", \"col\", \"colgroup\", \"dl\", \"hr\", \"iframe\", \"img\", \"input\", \"link\", \"menuitem\", \"meta\", \"ol\", \"param\", \"select\", \"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\", \"ul\", \"wbr\"];\nvar possibleStandardNames = {\n  // HTML\n  \"accept-charset\": \"acceptCharset\",\n  acceptcharset: \"acceptCharset\",\n  accesskey: \"accessKey\",\n  allowfullscreen: \"allowFullScreen\",\n  autocapitalize: \"autoCapitalize\",\n  autocomplete: \"autoComplete\",\n  autocorrect: \"autoCorrect\",\n  autofocus: \"autoFocus\",\n  autoplay: \"autoPlay\",\n  autosave: \"autoSave\",\n  cellpadding: \"cellPadding\",\n  cellspacing: \"cellSpacing\",\n  charset: \"charSet\",\n  class: \"className\",\n  classid: \"classID\",\n  classname: \"className\",\n  colspan: \"colSpan\",\n  contenteditable: \"contentEditable\",\n  contextmenu: \"contextMenu\",\n  controlslist: \"controlsList\",\n  crossorigin: \"crossOrigin\",\n  dangerouslysetinnerhtml: \"dangerouslySetInnerHTML\",\n  datetime: \"dateTime\",\n  defaultchecked: \"defaultChecked\",\n  defaultvalue: \"defaultValue\",\n  enctype: \"encType\",\n  for: \"htmlFor\",\n  formmethod: \"formMethod\",\n  formaction: \"formAction\",\n  formenctype: \"formEncType\",\n  formnovalidate: \"formNoValidate\",\n  formtarget: \"formTarget\",\n  frameborder: \"frameBorder\",\n  hreflang: \"hrefLang\",\n  htmlfor: \"htmlFor\",\n  httpequiv: \"httpEquiv\",\n  \"http-equiv\": \"httpEquiv\",\n  icon: \"icon\",\n  innerhtml: \"innerHTML\",\n  inputmode: \"inputMode\",\n  itemid: \"itemID\",\n  itemprop: \"itemProp\",\n  itemref: \"itemRef\",\n  itemscope: \"itemScope\",\n  itemtype: \"itemType\",\n  keyparams: \"keyParams\",\n  keytype: \"keyType\",\n  marginwidth: \"marginWidth\",\n  marginheight: \"marginHeight\",\n  maxlength: \"maxLength\",\n  mediagroup: \"mediaGroup\",\n  minlength: \"minLength\",\n  nomodule: \"noModule\",\n  novalidate: \"noValidate\",\n  playsinline: \"playsInline\",\n  radiogroup: \"radioGroup\",\n  readonly: \"readOnly\",\n  referrerpolicy: \"referrerPolicy\",\n  rowspan: \"rowSpan\",\n  spellcheck: \"spellCheck\",\n  srcdoc: \"srcDoc\",\n  srclang: \"srcLang\",\n  srcset: \"srcSet\",\n  tabindex: \"tabIndex\",\n  typemustmatch: \"typeMustMatch\",\n  usemap: \"useMap\",\n  // SVG\n  accentheight: \"accentHeight\",\n  \"accent-height\": \"accentHeight\",\n  alignmentbaseline: \"alignmentBaseline\",\n  \"alignment-baseline\": \"alignmentBaseline\",\n  allowreorder: \"allowReorder\",\n  arabicform: \"arabicForm\",\n  \"arabic-form\": \"arabicForm\",\n  attributename: \"attributeName\",\n  attributetype: \"attributeType\",\n  autoreverse: \"autoReverse\",\n  basefrequency: \"baseFrequency\",\n  baselineshift: \"baselineShift\",\n  \"baseline-shift\": \"baselineShift\",\n  baseprofile: \"baseProfile\",\n  calcmode: \"calcMode\",\n  capheight: \"capHeight\",\n  \"cap-height\": \"capHeight\",\n  clippath: \"clipPath\",\n  \"clip-path\": \"clipPath\",\n  clippathunits: \"clipPathUnits\",\n  cliprule: \"clipRule\",\n  \"clip-rule\": \"clipRule\",\n  colorinterpolation: \"colorInterpolation\",\n  \"color-interpolation\": \"colorInterpolation\",\n  colorinterpolationfilters: \"colorInterpolationFilters\",\n  \"color-interpolation-filters\": \"colorInterpolationFilters\",\n  colorprofile: \"colorProfile\",\n  \"color-profile\": \"colorProfile\",\n  colorrendering: \"colorRendering\",\n  \"color-rendering\": \"colorRendering\",\n  contentscripttype: \"contentScriptType\",\n  contentstyletype: \"contentStyleType\",\n  diffuseconstant: \"diffuseConstant\",\n  dominantbaseline: \"dominantBaseline\",\n  \"dominant-baseline\": \"dominantBaseline\",\n  edgemode: \"edgeMode\",\n  enablebackground: \"enableBackground\",\n  \"enable-background\": \"enableBackground\",\n  externalresourcesrequired: \"externalResourcesRequired\",\n  fillopacity: \"fillOpacity\",\n  \"fill-opacity\": \"fillOpacity\",\n  fillrule: \"fillRule\",\n  \"fill-rule\": \"fillRule\",\n  filterres: \"filterRes\",\n  filterunits: \"filterUnits\",\n  floodopacity: \"floodOpacity\",\n  \"flood-opacity\": \"floodOpacity\",\n  floodcolor: \"floodColor\",\n  \"flood-color\": \"floodColor\",\n  fontfamily: \"fontFamily\",\n  \"font-family\": \"fontFamily\",\n  fontsize: \"fontSize\",\n  \"font-size\": \"fontSize\",\n  fontsizeadjust: \"fontSizeAdjust\",\n  \"font-size-adjust\": \"fontSizeAdjust\",\n  fontstretch: \"fontStretch\",\n  \"font-stretch\": \"fontStretch\",\n  fontstyle: \"fontStyle\",\n  \"font-style\": \"fontStyle\",\n  fontvariant: \"fontVariant\",\n  \"font-variant\": \"fontVariant\",\n  fontweight: \"fontWeight\",\n  \"font-weight\": \"fontWeight\",\n  glyphname: \"glyphName\",\n  \"glyph-name\": \"glyphName\",\n  glyphorientationhorizontal: \"glyphOrientationHorizontal\",\n  \"glyph-orientation-horizontal\": \"glyphOrientationHorizontal\",\n  glyphorientationvertical: \"glyphOrientationVertical\",\n  \"glyph-orientation-vertical\": \"glyphOrientationVertical\",\n  glyphref: \"glyphRef\",\n  gradienttransform: \"gradientTransform\",\n  gradientunits: \"gradientUnits\",\n  horizadvx: \"horizAdvX\",\n  \"horiz-adv-x\": \"horizAdvX\",\n  horizoriginx: \"horizOriginX\",\n  \"horiz-origin-x\": \"horizOriginX\",\n  imagerendering: \"imageRendering\",\n  \"image-rendering\": \"imageRendering\",\n  kernelmatrix: \"kernelMatrix\",\n  kernelunitlength: \"kernelUnitLength\",\n  keypoints: \"keyPoints\",\n  keysplines: \"keySplines\",\n  keytimes: \"keyTimes\",\n  lengthadjust: \"lengthAdjust\",\n  letterspacing: \"letterSpacing\",\n  \"letter-spacing\": \"letterSpacing\",\n  lightingcolor: \"lightingColor\",\n  \"lighting-color\": \"lightingColor\",\n  limitingconeangle: \"limitingConeAngle\",\n  markerend: \"markerEnd\",\n  \"marker-end\": \"markerEnd\",\n  markerheight: \"markerHeight\",\n  markermid: \"markerMid\",\n  \"marker-mid\": \"markerMid\",\n  markerstart: \"markerStart\",\n  \"marker-start\": \"markerStart\",\n  markerunits: \"markerUnits\",\n  markerwidth: \"markerWidth\",\n  maskcontentunits: \"maskContentUnits\",\n  maskunits: \"maskUnits\",\n  numoctaves: \"numOctaves\",\n  overlineposition: \"overlinePosition\",\n  \"overline-position\": \"overlinePosition\",\n  overlinethickness: \"overlineThickness\",\n  \"overline-thickness\": \"overlineThickness\",\n  paintorder: \"paintOrder\",\n  \"paint-order\": \"paintOrder\",\n  \"panose-1\": \"panose1\",\n  pathlength: \"pathLength\",\n  patterncontentunits: \"patternContentUnits\",\n  patterntransform: \"patternTransform\",\n  patternunits: \"patternUnits\",\n  pointerevents: \"pointerEvents\",\n  \"pointer-events\": \"pointerEvents\",\n  pointsatx: \"pointsAtX\",\n  pointsaty: \"pointsAtY\",\n  pointsatz: \"pointsAtZ\",\n  preservealpha: \"preserveAlpha\",\n  preserveaspectratio: \"preserveAspectRatio\",\n  primitiveunits: \"primitiveUnits\",\n  refx: \"refX\",\n  refy: \"refY\",\n  renderingintent: \"renderingIntent\",\n  \"rendering-intent\": \"renderingIntent\",\n  repeatcount: \"repeatCount\",\n  repeatdur: \"repeatDur\",\n  requiredextensions: \"requiredExtensions\",\n  requiredfeatures: \"requiredFeatures\",\n  shaperendering: \"shapeRendering\",\n  \"shape-rendering\": \"shapeRendering\",\n  specularconstant: \"specularConstant\",\n  specularexponent: \"specularExponent\",\n  spreadmethod: \"spreadMethod\",\n  startoffset: \"startOffset\",\n  stddeviation: \"stdDeviation\",\n  stitchtiles: \"stitchTiles\",\n  stopcolor: \"stopColor\",\n  \"stop-color\": \"stopColor\",\n  stopopacity: \"stopOpacity\",\n  \"stop-opacity\": \"stopOpacity\",\n  strikethroughposition: \"strikethroughPosition\",\n  \"strikethrough-position\": \"strikethroughPosition\",\n  strikethroughthickness: \"strikethroughThickness\",\n  \"strikethrough-thickness\": \"strikethroughThickness\",\n  strokedasharray: \"strokeDasharray\",\n  \"stroke-dasharray\": \"strokeDasharray\",\n  strokedashoffset: \"strokeDashoffset\",\n  \"stroke-dashoffset\": \"strokeDashoffset\",\n  strokelinecap: \"strokeLinecap\",\n  \"stroke-linecap\": \"strokeLinecap\",\n  strokelinejoin: \"strokeLinejoin\",\n  \"stroke-linejoin\": \"strokeLinejoin\",\n  strokemiterlimit: \"strokeMiterlimit\",\n  \"stroke-miterlimit\": \"strokeMiterlimit\",\n  strokewidth: \"strokeWidth\",\n  \"stroke-width\": \"strokeWidth\",\n  strokeopacity: \"strokeOpacity\",\n  \"stroke-opacity\": \"strokeOpacity\",\n  suppresscontenteditablewarning: \"suppressContentEditableWarning\",\n  suppresshydrationwarning: \"suppressHydrationWarning\",\n  surfacescale: \"surfaceScale\",\n  systemlanguage: \"systemLanguage\",\n  tablevalues: \"tableValues\",\n  targetx: \"targetX\",\n  targety: \"targetY\",\n  textanchor: \"textAnchor\",\n  \"text-anchor\": \"textAnchor\",\n  textdecoration: \"textDecoration\",\n  \"text-decoration\": \"textDecoration\",\n  textlength: \"textLength\",\n  textrendering: \"textRendering\",\n  \"text-rendering\": \"textRendering\",\n  underlineposition: \"underlinePosition\",\n  \"underline-position\": \"underlinePosition\",\n  underlinethickness: \"underlineThickness\",\n  \"underline-thickness\": \"underlineThickness\",\n  unicodebidi: \"unicodeBidi\",\n  \"unicode-bidi\": \"unicodeBidi\",\n  unicoderange: \"unicodeRange\",\n  \"unicode-range\": \"unicodeRange\",\n  unitsperem: \"unitsPerEm\",\n  \"units-per-em\": \"unitsPerEm\",\n  unselectable: \"unselectable\",\n  valphabetic: \"vAlphabetic\",\n  \"v-alphabetic\": \"vAlphabetic\",\n  vectoreffect: \"vectorEffect\",\n  \"vector-effect\": \"vectorEffect\",\n  vertadvy: \"vertAdvY\",\n  \"vert-adv-y\": \"vertAdvY\",\n  vertoriginx: \"vertOriginX\",\n  \"vert-origin-x\": \"vertOriginX\",\n  vertoriginy: \"vertOriginY\",\n  \"vert-origin-y\": \"vertOriginY\",\n  vhanging: \"vHanging\",\n  \"v-hanging\": \"vHanging\",\n  videographic: \"vIdeographic\",\n  \"v-ideographic\": \"vIdeographic\",\n  viewbox: \"viewBox\",\n  viewtarget: \"viewTarget\",\n  vmathematical: \"vMathematical\",\n  \"v-mathematical\": \"vMathematical\",\n  wordspacing: \"wordSpacing\",\n  \"word-spacing\": \"wordSpacing\",\n  writingmode: \"writingMode\",\n  \"writing-mode\": \"writingMode\",\n  xchannelselector: \"xChannelSelector\",\n  xheight: \"xHeight\",\n  \"x-height\": \"xHeight\",\n  xlinkactuate: \"xlinkActuate\",\n  \"xlink:actuate\": \"xlinkActuate\",\n  xlinkarcrole: \"xlinkArcrole\",\n  \"xlink:arcrole\": \"xlinkArcrole\",\n  xlinkhref: \"xlinkHref\",\n  \"xlink:href\": \"xlinkHref\",\n  xlinkrole: \"xlinkRole\",\n  \"xlink:role\": \"xlinkRole\",\n  xlinkshow: \"xlinkShow\",\n  \"xlink:show\": \"xlinkShow\",\n  xlinktitle: \"xlinkTitle\",\n  \"xlink:title\": \"xlinkTitle\",\n  xlinktype: \"xlinkType\",\n  \"xlink:type\": \"xlinkType\",\n  xmlbase: \"xmlBase\",\n  \"xml:base\": \"xmlBase\",\n  xmllang: \"xmlLang\",\n  \"xml:lang\": \"xmlLang\",\n  \"xml:space\": \"xmlSpace\",\n  xmlnsxlink: \"xmlnsXlink\",\n  \"xmlns:xlink\": \"xmlnsXlink\",\n  xmlspace: \"xmlSpace\",\n  ychannelselector: \"yChannelSelector\",\n  zoomandpan: \"zoomAndPan\",\n  // event handlers\n  onblur: \"onBlur\",\n  onchange: \"onChange\",\n  onclick: \"onClick\",\n  oncontextmenu: \"onContextMenu\",\n  ondoubleclick: \"onDoubleClick\",\n  ondrag: \"onDrag\",\n  ondragend: \"onDragEnd\",\n  ondragenter: \"onDragEnter\",\n  ondragexit: \"onDragExit\",\n  ondragleave: \"onDragLeave\",\n  ondragover: \"onDragOver\",\n  ondragstart: \"onDragStart\",\n  ondrop: \"onDrop\",\n  onerror: \"onError\",\n  onfocus: \"onFocus\",\n  oninput: \"onInput\",\n  oninvalid: \"onInvalid\",\n  onkeydown: \"onKeyDown\",\n  onkeypress: \"onKeyPress\",\n  onkeyup: \"onKeyUp\",\n  onload: \"onLoad\",\n  onmousedown: \"onMouseDown\",\n  onmouseenter: \"onMouseEnter\",\n  onmouseleave: \"onMouseLeave\",\n  onmousemove: \"onMouseMove\",\n  onmouseout: \"onMouseOut\",\n  onmouseover: \"onMouseOver\",\n  onmouseup: \"onMouseUp\",\n  onscroll: \"onScroll\",\n  onsubmit: \"onSubmit\",\n  ontouchcancel: \"onTouchCancel\",\n  ontouchend: \"onTouchEnd\",\n  ontouchmove: \"onTouchMove\",\n  ontouchstart: \"onTouchStart\",\n  onwheel: \"onWheel\"\n};\n\n// src/index.ts\nfunction getReactNode(node, options) {\n  const {\n    key,\n    level,\n    ...rest\n  } = options;\n  switch (node.nodeType) {\n    case 1:\n      {\n        return React.createElement(parseName(node.nodeName), parseAttributes(node, key), parseChildren(node.childNodes, level, rest));\n      }\n    case 3:\n      {\n        const nodeText = node.nodeValue?.toString() ?? \"\";\n        if (!rest.allowWhiteSpaces && /^\\s+$/.test(nodeText) && !/[\\u00A0\\u202F]/.test(nodeText)) {\n          return null;\n        }\n        if (!node.parentNode) {\n          return nodeText;\n        }\n        const parentNodeName = node.parentNode.nodeName.toLowerCase();\n        if (noTextChildNodes.includes(parentNodeName)) {\n          if (/\\S/.test(nodeText)) {\n            console.warn(`A textNode is not allowed inside '${parentNodeName}'. Your text \"${nodeText}\" will be ignored`);\n          }\n          return null;\n        }\n        return nodeText;\n      }\n    case 8:\n      {\n        return null;\n      }\n    case 11:\n      {\n        return parseChildren(node.childNodes, level, options);\n      }\n    /* c8 ignore next 3 */\n    default:\n      {\n        return null;\n      }\n  }\n}\nfunction parseAttributes(node, reactKey) {\n  const attributes = {\n    key: reactKey\n  };\n  if (node instanceof Element) {\n    const nodeClassNames = node.getAttribute(\"class\");\n    if (nodeClassNames) {\n      attributes.className = nodeClassNames;\n    }\n    [...node.attributes].forEach(d => {\n      switch (d.name) {\n        // this is manually handled above, so break;\n        case \"class\":\n          break;\n        case \"style\":\n          attributes[d.name] = styleToObject(d.value);\n          break;\n        case \"allowfullscreen\":\n        case \"allowpaymentrequest\":\n        case \"async\":\n        case \"autofocus\":\n        case \"autoplay\":\n        case \"checked\":\n        case \"controls\":\n        case \"default\":\n        case \"defer\":\n        case \"disabled\":\n        case \"formnovalidate\":\n        case \"hidden\":\n        case \"ismap\":\n        case \"itemscope\":\n        case \"loop\":\n        case \"multiple\":\n        case \"muted\":\n        case \"nomodule\":\n        case \"novalidate\":\n        case \"open\":\n        case \"readonly\":\n        case \"required\":\n        case \"reversed\":\n        case \"selected\":\n        case \"typemustmatch\":\n          attributes[possibleStandardNames[d.name] || d.name] = true;\n          break;\n        default:\n          attributes[possibleStandardNames[d.name] || d.name] = d.value;\n      }\n    });\n  }\n  return attributes;\n}\nfunction parseChildren(childNodeList, level, options) {\n  const children = [...childNodeList].map((node, index) => convertFromNode(node, {\n    ...options,\n    index,\n    level: level + 1\n  })).filter(Boolean);\n  if (!children.length) {\n    return null;\n  }\n  return children;\n}\nfunction parseName(nodeName) {\n  if (/[a-z]+[A-Z]+[a-z]+/.test(nodeName)) {\n    return nodeName;\n  }\n  return nodeName.toLowerCase();\n}\nfunction convert(input, options = {}) {\n  if (typeof input === \"string\") {\n    return convertFromString(input, options);\n  }\n  if (input instanceof Node) {\n    return convertFromNode(input, options);\n  }\n  return null;\n}\nfunction convertFromNode(input, options = {}) {\n  if (!input || !(input instanceof Node)) {\n    return null;\n  }\n  const {\n    actions = [],\n    index = 0,\n    level = 0,\n    randomKey\n  } = options;\n  let node = input;\n  let key = `${level}-${index}`;\n  const result = [];\n  if (randomKey && level === 0) {\n    key = `${randomString()}-${key}`;\n  }\n  if (Array.isArray(actions)) {\n    actions.forEach(action => {\n      if (action.condition(node, key, level)) {\n        if (typeof action.pre === \"function\") {\n          node = action.pre(node, key, level);\n          if (!(node instanceof Node)) {\n            node = input;\n            if (process.env.NODE_ENV !== \"production\") {\n              console.warn(\"The `pre` method always must return a valid DomNode (instanceof Node) - your modification will be ignored (Hint: if you want to render a React-component, use the `post` method instead)\");\n            }\n          }\n        }\n        if (typeof action.post === \"function\") {\n          result.push(action.post(node, key, level));\n        }\n      }\n    });\n  }\n  if (result.length) {\n    return result;\n  }\n  return getReactNode(node, {\n    key,\n    level,\n    ...options\n  });\n}\nfunction convertFromString(input, options = {}) {\n  if (!input || typeof input !== \"string\") {\n    return null;\n  }\n  const {\n    includeAllNodes = false,\n    nodeOnly = false,\n    selector = \"body > *\",\n    type = \"text/html\"\n  } = options;\n  try {\n    const parser = new DOMParser();\n    const document = parser.parseFromString(input, type);\n    if (includeAllNodes) {\n      const {\n        childNodes\n      } = document.body;\n      if (nodeOnly) {\n        return childNodes;\n      }\n      return [...childNodes].map(node2 => convertFromNode(node2, options));\n    }\n    const node = document.querySelector(selector) || document.body.childNodes[0];\n    if (!(node instanceof Node)) {\n      throw new TypeError(\"Error parsing input\");\n    }\n    if (nodeOnly) {\n      return node;\n    }\n    return convertFromNode(node, options);\n  } catch (error) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(error);\n    }\n  }\n  return null;\n}\nexport { convertFromNode, convertFromString, convert as default };","map":{"version":3,"names":["React","styleToObject","input","split","reduce","acc","item","key","value","map","d","index","replace","trim","nextKey","_$0","$1","$2","toUpperCase","nextValue","Number","isNaN","startsWith","randomString","length","characters","result","Math","round","random","noTextChildNodes","possibleStandardNames","acceptcharset","accesskey","allowfullscreen","autocapitalize","autocomplete","autocorrect","autofocus","autoplay","autosave","cellpadding","cellspacing","charset","class","classid","classname","colspan","contenteditable","contextmenu","controlslist","crossorigin","dangerouslysetinnerhtml","datetime","defaultchecked","defaultvalue","enctype","for","formmethod","formaction","formenctype","formnovalidate","formtarget","frameborder","hreflang","htmlfor","httpequiv","icon","innerhtml","inputmode","itemid","itemprop","itemref","itemscope","itemtype","keyparams","keytype","marginwidth","marginheight","maxlength","mediagroup","minlength","nomodule","novalidate","playsinline","radiogroup","readonly","referrerpolicy","rowspan","spellcheck","srcdoc","srclang","srcset","tabindex","typemustmatch","usemap","accentheight","alignmentbaseline","allowreorder","arabicform","attributename","attributetype","autoreverse","basefrequency","baselineshift","baseprofile","calcmode","capheight","clippath","clippathunits","cliprule","colorinterpolation","colorinterpolationfilters","colorprofile","colorrendering","contentscripttype","contentstyletype","diffuseconstant","dominantbaseline","edgemode","enablebackground","externalresourcesrequired","fillopacity","fillrule","filterres","filterunits","floodopacity","floodcolor","fontfamily","fontsize","fontsizeadjust","fontstretch","fontstyle","fontvariant","fontweight","glyphname","glyphorientationhorizontal","glyphorientationvertical","glyphref","gradienttransform","gradientunits","horizadvx","horizoriginx","imagerendering","kernelmatrix","kernelunitlength","keypoints","keysplines","keytimes","lengthadjust","letterspacing","lightingcolor","limitingconeangle","markerend","markerheight","markermid","markerstart","markerunits","markerwidth","maskcontentunits","maskunits","numoctaves","overlineposition","overlinethickness","paintorder","pathlength","patterncontentunits","patterntransform","patternunits","pointerevents","pointsatx","pointsaty","pointsatz","preservealpha","preserveaspectratio","primitiveunits","refx","refy","renderingintent","repeatcount","repeatdur","requiredextensions","requiredfeatures","shaperendering","specularconstant","specularexponent","spreadmethod","startoffset","stddeviation","stitchtiles","stopcolor","stopopacity","strikethroughposition","strikethroughthickness","strokedasharray","strokedashoffset","strokelinecap","strokelinejoin","strokemiterlimit","strokewidth","strokeopacity","suppresscontenteditablewarning","suppresshydrationwarning","surfacescale","systemlanguage","tablevalues","targetx","targety","textanchor","textdecoration","textlength","textrendering","underlineposition","underlinethickness","unicodebidi","unicoderange","unitsperem","unselectable","valphabetic","vectoreffect","vertadvy","vertoriginx","vertoriginy","vhanging","videographic","viewbox","viewtarget","vmathematical","wordspacing","writingmode","xchannelselector","xheight","xlinkactuate","xlinkarcrole","xlinkhref","xlinkrole","xlinkshow","xlinktitle","xlinktype","xmlbase","xmllang","xmlnsxlink","xmlspace","ychannelselector","zoomandpan","onblur","onchange","onclick","oncontextmenu","ondoubleclick","ondrag","ondragend","ondragenter","ondragexit","ondragleave","ondragover","ondragstart","ondrop","onerror","onfocus","oninput","oninvalid","onkeydown","onkeypress","onkeyup","onload","onmousedown","onmouseenter","onmouseleave","onmousemove","onmouseout","onmouseover","onmouseup","onscroll","onsubmit","ontouchcancel","ontouchend","ontouchmove","ontouchstart","onwheel","getReactNode","node","options","level","rest","nodeType","createElement","parseName","nodeName","parseAttributes","parseChildren","childNodes","nodeText","nodeValue","toString","allowWhiteSpaces","test","parentNode","parentNodeName","toLowerCase","includes","console","warn","reactKey","attributes","Element","nodeClassNames","getAttribute","className","forEach","name","childNodeList","children","convertFromNode","filter","Boolean","convert","convertFromString","Node","actions","randomKey","Array","isArray","action","condition","pre","process","env","NODE_ENV","post","push","includeAllNodes","nodeOnly","selector","type","parser","DOMParser","document","parseFromString","body","node2","querySelector","TypeError","error"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/react-from-dom/src/index.ts","/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/react-from-dom/src/helpers.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { noTextChildNodes, possibleStandardNames, randomString, styleToObject } from './helpers';\n\ninterface Attributes {\n  [index: string]: any;\n\n  key: string;\n}\n\ninterface GetReactNodeOptions extends Options {\n  key: string;\n  level: number;\n}\n\nexport type Output = React.ReactNode | Node | NodeList;\n\nexport interface Action {\n  // If this returns true, the two following functions are called if they are defined\n  condition: (node: Node, key: string, level: number) => boolean;\n\n  // Use this to inject a component or remove the node\n  // It must return something that can be rendered by React\n  post?: (node: Node, key: string, level: number) => React.ReactNode;\n\n  // Use this to update or replace the node\n  // e.g. for removing or adding attributes, changing the node type\n  pre?: (node: Node, key: string, level: number) => Node;\n}\n\nexport interface Options {\n  /**\n   * An array of actions to modify the nodes before converting them to ReactNodes.\n   */\n  actions?: Action[];\n  /**\n   * Don't remove white spaces in the output.\n   */\n  allowWhiteSpaces?: boolean;\n  /**\n   * Parse all nodes instead of just a single parent node.\n   * This will return a ReactNode array (or a NodeList if `nodeOnly` is true).\n   */\n  includeAllNodes?: boolean;\n  /**\n   * The index to start the React key identification.\n   * @default 0\n   */\n  index?: number;\n  /**\n   * The level to start the React key identification.\n   * @default 0\n   */\n  level?: number;\n  /**\n   * Only return the node (or NodeList) without converting it to a ReactNode.\n   */\n  nodeOnly?: boolean;\n  /**\n   * Add a random key to the root element.\n   * @default false\n   */\n  randomKey?: boolean;\n  /**\n   * The selector to use in the `document.querySelector` method.\n   * @default 'body > *'\n   */\n  selector?: string;\n  /**\n   * The mimeType to use in the DOMParser's parseFromString.\n   * @default 'text/html'\n   */\n  type?: DOMParserSupportedType;\n}\n\nfunction getReactNode(node: Node, options: GetReactNodeOptions): React.ReactNode {\n  const { key, level, ...rest } = options;\n\n  switch (node.nodeType) {\n    case 1: {\n      // regular dom-node\n      return React.createElement(\n        parseName(node.nodeName),\n        parseAttributes(node, key),\n        parseChildren(node.childNodes, level, rest),\n      );\n    }\n    case 3: {\n      // textnode\n      const nodeText = node.nodeValue?.toString() ?? '';\n\n      if (!rest.allowWhiteSpaces && /^\\s+$/.test(nodeText) && !/[\\u00A0\\u202F]/.test(nodeText)) {\n        return null;\n      }\n\n      /* c8 ignore next 3 */\n      if (!node.parentNode) {\n        return nodeText;\n      }\n\n      const parentNodeName = node.parentNode.nodeName.toLowerCase();\n\n      if (noTextChildNodes.includes(parentNodeName)) {\n        if (/\\S/.test(nodeText)) {\n          // eslint-disable-next-line no-console\n          console.warn(\n            `A textNode is not allowed inside '${parentNodeName}'. Your text \"${nodeText}\" will be ignored`,\n          );\n        }\n\n        return null;\n      }\n\n      return nodeText;\n    }\n    case 8: {\n      // html-comment\n      return null;\n    }\n    case 11: {\n      // fragment\n\n      return parseChildren(node.childNodes, level, options);\n    }\n    /* c8 ignore next 3 */\n    default: {\n      return null;\n    }\n  }\n}\n\nfunction parseAttributes(node: Node, reactKey: string): Attributes {\n  const attributes: Attributes = {\n    key: reactKey,\n  };\n\n  if (node instanceof Element) {\n    const nodeClassNames = node.getAttribute('class');\n\n    if (nodeClassNames) {\n      attributes.className = nodeClassNames;\n    }\n\n    [...node.attributes].forEach(d => {\n      switch (d.name) {\n        // this is manually handled above, so break;\n        case 'class':\n          break;\n        case 'style':\n          attributes[d.name] = styleToObject(d.value);\n          break;\n        case 'allowfullscreen':\n        case 'allowpaymentrequest':\n        case 'async':\n        case 'autofocus':\n        case 'autoplay':\n        case 'checked':\n        case 'controls':\n        case 'default':\n        case 'defer':\n        case 'disabled':\n        case 'formnovalidate':\n        case 'hidden':\n        case 'ismap':\n        case 'itemscope':\n        case 'loop':\n        case 'multiple':\n        case 'muted':\n        case 'nomodule':\n        case 'novalidate':\n        case 'open':\n        case 'readonly':\n        case 'required':\n        case 'reversed':\n        case 'selected':\n        case 'typemustmatch':\n          attributes[possibleStandardNames[d.name] || d.name] = true;\n          break;\n        default:\n          attributes[possibleStandardNames[d.name] || d.name] = d.value;\n      }\n    });\n  }\n\n  return attributes;\n}\n\nfunction parseChildren(childNodeList: NodeList, level: number, options: Options) {\n  const children: React.ReactNode[] = [...childNodeList]\n    .map((node, index) =>\n      convertFromNode(node, {\n        ...options,\n        index,\n        level: level + 1,\n      }),\n    )\n    .filter(Boolean);\n\n  if (!children.length) {\n    return null;\n  }\n\n  return children;\n}\n\nfunction parseName(nodeName: string) {\n  if (/[a-z]+[A-Z]+[a-z]+/.test(nodeName)) {\n    return nodeName;\n  }\n\n  return nodeName.toLowerCase();\n}\n\nexport default function convert(input: Node | string, options: Options = {}): Output {\n  if (typeof input === 'string') {\n    return convertFromString(input, options);\n  }\n\n  if (input instanceof Node) {\n    return convertFromNode(input, options);\n  }\n\n  return null;\n}\n\nexport function convertFromNode(input: Node, options: Options = {}): React.ReactNode {\n  if (!input || !(input instanceof Node)) {\n    return null;\n  }\n\n  const { actions = [], index = 0, level = 0, randomKey } = options;\n\n  let node = input;\n  let key = `${level}-${index}`;\n  const result: React.ReactNode[] = [];\n\n  if (randomKey && level === 0) {\n    key = `${randomString()}-${key}`;\n  }\n\n  if (Array.isArray(actions)) {\n    actions.forEach((action: Action) => {\n      if (action.condition(node, key, level)) {\n        if (typeof action.pre === 'function') {\n          node = action.pre(node, key, level);\n\n          if (!(node instanceof Node)) {\n            node = input;\n\n            if (process.env.NODE_ENV !== 'production') {\n              // eslint-disable-next-line no-console\n              console.warn(\n                'The `pre` method always must return a valid DomNode (instanceof Node) - your modification will be ignored (Hint: if you want to render a React-component, use the `post` method instead)',\n              );\n            }\n          }\n        }\n\n        if (typeof action.post === 'function') {\n          result.push(action.post(node, key, level));\n        }\n      }\n    });\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return getReactNode(node, { key, level, ...options });\n}\n\nexport function convertFromString(input: string, options: Options = {}): Output {\n  if (!input || typeof input !== 'string') {\n    return null;\n  }\n\n  const {\n    includeAllNodes = false,\n    nodeOnly = false,\n    selector = 'body > *',\n    type = 'text/html',\n  } = options;\n\n  try {\n    const parser = new DOMParser();\n    const document = parser.parseFromString(input, type);\n\n    if (includeAllNodes) {\n      const { childNodes } = document.body;\n\n      if (nodeOnly) {\n        return childNodes;\n      }\n\n      return [...childNodes].map(node => convertFromNode(node, options));\n    }\n\n    const node = document.querySelector(selector) || document.body.childNodes[0];\n\n    /* c8 ignore next 3 */\n    if (!(node instanceof Node)) {\n      throw new TypeError('Error parsing input');\n    }\n\n    if (nodeOnly) {\n      return node;\n    }\n\n    return convertFromNode(node, options);\n    /* c8 ignore start */\n  } catch (error) {\n    if (process.env.NODE_ENV !== 'production') {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  }\n\n  return null;\n  /* c8 ignore stop */\n}\n","export const styleToObject = (input: string): Record<string, any> => {\n  /* c8 ignore next 3 */\n  if (typeof input !== 'string') {\n    return {};\n  }\n\n  return input.split(/ ?; ?/).reduce<Record<string, string | number>>((acc, item: string) => {\n    const [key, value] = item\n      .split(/ ?: ?/)\n      .map((d, index) => (index === 0 ? d.replace(/\\s+/g, '') : d.trim()));\n\n    if (key && value) {\n      const nextKey = key.replace(/(\\w)-(\\w)/g, (_$0, $1, $2) => `${$1}${$2.toUpperCase()}`);\n      let nextValue: string | number = value.trim();\n\n      if (!Number.isNaN(Number(value))) {\n        nextValue = Number(value);\n      }\n\n      acc[key.startsWith('-') ? key : nextKey] = nextValue;\n    }\n\n    return acc;\n  }, {});\n};\n\nexport function randomString(length = 6): string {\n  const characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  let result = '';\n\n  for (let index = length; index > 0; --index) {\n    result += characters[Math.round(Math.random() * (characters.length - 1))];\n  }\n\n  return result;\n}\n\nexport const noTextChildNodes = [\n  'br',\n  'col',\n  'colgroup',\n  'dl',\n  'hr',\n  'iframe',\n  'img',\n  'input',\n  'link',\n  'menuitem',\n  'meta',\n  'ol',\n  'param',\n  'select',\n  'table',\n  'tbody',\n  'tfoot',\n  'thead',\n  'tr',\n  'ul',\n  'wbr',\n];\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// Taken from https://raw.githubusercontent.com/facebook/react/baff5cc2f69d30589a5dc65b089e47765437294b/packages/react-dom/src/shared/possibleStandardNames.js\n// tslint:disable:object-literal-sort-keys\nexport const possibleStandardNames: Record<string, any> = {\n  // HTML\n  'accept-charset': 'acceptCharset',\n  acceptcharset: 'acceptCharset',\n  accesskey: 'accessKey',\n  allowfullscreen: 'allowFullScreen',\n  autocapitalize: 'autoCapitalize',\n  autocomplete: 'autoComplete',\n  autocorrect: 'autoCorrect',\n  autofocus: 'autoFocus',\n  autoplay: 'autoPlay',\n  autosave: 'autoSave',\n  cellpadding: 'cellPadding',\n  cellspacing: 'cellSpacing',\n  charset: 'charSet',\n  class: 'className',\n  classid: 'classID',\n  classname: 'className',\n  colspan: 'colSpan',\n  contenteditable: 'contentEditable',\n  contextmenu: 'contextMenu',\n  controlslist: 'controlsList',\n  crossorigin: 'crossOrigin',\n  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',\n  datetime: 'dateTime',\n  defaultchecked: 'defaultChecked',\n  defaultvalue: 'defaultValue',\n  enctype: 'encType',\n  for: 'htmlFor',\n  formmethod: 'formMethod',\n  formaction: 'formAction',\n  formenctype: 'formEncType',\n  formnovalidate: 'formNoValidate',\n  formtarget: 'formTarget',\n  frameborder: 'frameBorder',\n  hreflang: 'hrefLang',\n  htmlfor: 'htmlFor',\n  httpequiv: 'httpEquiv',\n  'http-equiv': 'httpEquiv',\n  icon: 'icon',\n  innerhtml: 'innerHTML',\n  inputmode: 'inputMode',\n  itemid: 'itemID',\n  itemprop: 'itemProp',\n  itemref: 'itemRef',\n  itemscope: 'itemScope',\n  itemtype: 'itemType',\n  keyparams: 'keyParams',\n  keytype: 'keyType',\n  marginwidth: 'marginWidth',\n  marginheight: 'marginHeight',\n  maxlength: 'maxLength',\n  mediagroup: 'mediaGroup',\n  minlength: 'minLength',\n  nomodule: 'noModule',\n  novalidate: 'noValidate',\n  playsinline: 'playsInline',\n  radiogroup: 'radioGroup',\n  readonly: 'readOnly',\n  referrerpolicy: 'referrerPolicy',\n  rowspan: 'rowSpan',\n  spellcheck: 'spellCheck',\n  srcdoc: 'srcDoc',\n  srclang: 'srcLang',\n  srcset: 'srcSet',\n  tabindex: 'tabIndex',\n  typemustmatch: 'typeMustMatch',\n  usemap: 'useMap',\n\n  // SVG\n  accentheight: 'accentHeight',\n  'accent-height': 'accentHeight',\n  alignmentbaseline: 'alignmentBaseline',\n  'alignment-baseline': 'alignmentBaseline',\n  allowreorder: 'allowReorder',\n  arabicform: 'arabicForm',\n  'arabic-form': 'arabicForm',\n  attributename: 'attributeName',\n  attributetype: 'attributeType',\n  autoreverse: 'autoReverse',\n  basefrequency: 'baseFrequency',\n  baselineshift: 'baselineShift',\n  'baseline-shift': 'baselineShift',\n  baseprofile: 'baseProfile',\n  calcmode: 'calcMode',\n  capheight: 'capHeight',\n  'cap-height': 'capHeight',\n  clippath: 'clipPath',\n  'clip-path': 'clipPath',\n  clippathunits: 'clipPathUnits',\n  cliprule: 'clipRule',\n  'clip-rule': 'clipRule',\n  colorinterpolation: 'colorInterpolation',\n  'color-interpolation': 'colorInterpolation',\n  colorinterpolationfilters: 'colorInterpolationFilters',\n  'color-interpolation-filters': 'colorInterpolationFilters',\n  colorprofile: 'colorProfile',\n  'color-profile': 'colorProfile',\n  colorrendering: 'colorRendering',\n  'color-rendering': 'colorRendering',\n  contentscripttype: 'contentScriptType',\n  contentstyletype: 'contentStyleType',\n  diffuseconstant: 'diffuseConstant',\n  dominantbaseline: 'dominantBaseline',\n  'dominant-baseline': 'dominantBaseline',\n  edgemode: 'edgeMode',\n  enablebackground: 'enableBackground',\n  'enable-background': 'enableBackground',\n  externalresourcesrequired: 'externalResourcesRequired',\n  fillopacity: 'fillOpacity',\n  'fill-opacity': 'fillOpacity',\n  fillrule: 'fillRule',\n  'fill-rule': 'fillRule',\n  filterres: 'filterRes',\n  filterunits: 'filterUnits',\n  floodopacity: 'floodOpacity',\n  'flood-opacity': 'floodOpacity',\n  floodcolor: 'floodColor',\n  'flood-color': 'floodColor',\n  fontfamily: 'fontFamily',\n  'font-family': 'fontFamily',\n  fontsize: 'fontSize',\n  'font-size': 'fontSize',\n  fontsizeadjust: 'fontSizeAdjust',\n  'font-size-adjust': 'fontSizeAdjust',\n  fontstretch: 'fontStretch',\n  'font-stretch': 'fontStretch',\n  fontstyle: 'fontStyle',\n  'font-style': 'fontStyle',\n  fontvariant: 'fontVariant',\n  'font-variant': 'fontVariant',\n  fontweight: 'fontWeight',\n  'font-weight': 'fontWeight',\n  glyphname: 'glyphName',\n  'glyph-name': 'glyphName',\n  glyphorientationhorizontal: 'glyphOrientationHorizontal',\n  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',\n  glyphorientationvertical: 'glyphOrientationVertical',\n  'glyph-orientation-vertical': 'glyphOrientationVertical',\n  glyphref: 'glyphRef',\n  gradienttransform: 'gradientTransform',\n  gradientunits: 'gradientUnits',\n  horizadvx: 'horizAdvX',\n  'horiz-adv-x': 'horizAdvX',\n  horizoriginx: 'horizOriginX',\n  'horiz-origin-x': 'horizOriginX',\n  imagerendering: 'imageRendering',\n  'image-rendering': 'imageRendering',\n  kernelmatrix: 'kernelMatrix',\n  kernelunitlength: 'kernelUnitLength',\n  keypoints: 'keyPoints',\n  keysplines: 'keySplines',\n  keytimes: 'keyTimes',\n  lengthadjust: 'lengthAdjust',\n  letterspacing: 'letterSpacing',\n  'letter-spacing': 'letterSpacing',\n  lightingcolor: 'lightingColor',\n  'lighting-color': 'lightingColor',\n  limitingconeangle: 'limitingConeAngle',\n  markerend: 'markerEnd',\n  'marker-end': 'markerEnd',\n  markerheight: 'markerHeight',\n  markermid: 'markerMid',\n  'marker-mid': 'markerMid',\n  markerstart: 'markerStart',\n  'marker-start': 'markerStart',\n  markerunits: 'markerUnits',\n  markerwidth: 'markerWidth',\n  maskcontentunits: 'maskContentUnits',\n  maskunits: 'maskUnits',\n  numoctaves: 'numOctaves',\n  overlineposition: 'overlinePosition',\n  'overline-position': 'overlinePosition',\n  overlinethickness: 'overlineThickness',\n  'overline-thickness': 'overlineThickness',\n  paintorder: 'paintOrder',\n  'paint-order': 'paintOrder',\n  'panose-1': 'panose1',\n  pathlength: 'pathLength',\n  patterncontentunits: 'patternContentUnits',\n  patterntransform: 'patternTransform',\n  patternunits: 'patternUnits',\n  pointerevents: 'pointerEvents',\n  'pointer-events': 'pointerEvents',\n  pointsatx: 'pointsAtX',\n  pointsaty: 'pointsAtY',\n  pointsatz: 'pointsAtZ',\n  preservealpha: 'preserveAlpha',\n  preserveaspectratio: 'preserveAspectRatio',\n  primitiveunits: 'primitiveUnits',\n  refx: 'refX',\n  refy: 'refY',\n  renderingintent: 'renderingIntent',\n  'rendering-intent': 'renderingIntent',\n  repeatcount: 'repeatCount',\n  repeatdur: 'repeatDur',\n  requiredextensions: 'requiredExtensions',\n  requiredfeatures: 'requiredFeatures',\n  shaperendering: 'shapeRendering',\n  'shape-rendering': 'shapeRendering',\n  specularconstant: 'specularConstant',\n  specularexponent: 'specularExponent',\n  spreadmethod: 'spreadMethod',\n  startoffset: 'startOffset',\n  stddeviation: 'stdDeviation',\n  stitchtiles: 'stitchTiles',\n  stopcolor: 'stopColor',\n  'stop-color': 'stopColor',\n  stopopacity: 'stopOpacity',\n  'stop-opacity': 'stopOpacity',\n  strikethroughposition: 'strikethroughPosition',\n  'strikethrough-position': 'strikethroughPosition',\n  strikethroughthickness: 'strikethroughThickness',\n  'strikethrough-thickness': 'strikethroughThickness',\n  strokedasharray: 'strokeDasharray',\n  'stroke-dasharray': 'strokeDasharray',\n  strokedashoffset: 'strokeDashoffset',\n  'stroke-dashoffset': 'strokeDashoffset',\n  strokelinecap: 'strokeLinecap',\n  'stroke-linecap': 'strokeLinecap',\n  strokelinejoin: 'strokeLinejoin',\n  'stroke-linejoin': 'strokeLinejoin',\n  strokemiterlimit: 'strokeMiterlimit',\n  'stroke-miterlimit': 'strokeMiterlimit',\n  strokewidth: 'strokeWidth',\n  'stroke-width': 'strokeWidth',\n  strokeopacity: 'strokeOpacity',\n  'stroke-opacity': 'strokeOpacity',\n  suppresscontenteditablewarning: 'suppressContentEditableWarning',\n  suppresshydrationwarning: 'suppressHydrationWarning',\n  surfacescale: 'surfaceScale',\n  systemlanguage: 'systemLanguage',\n  tablevalues: 'tableValues',\n  targetx: 'targetX',\n  targety: 'targetY',\n  textanchor: 'textAnchor',\n  'text-anchor': 'textAnchor',\n  textdecoration: 'textDecoration',\n  'text-decoration': 'textDecoration',\n  textlength: 'textLength',\n  textrendering: 'textRendering',\n  'text-rendering': 'textRendering',\n  underlineposition: 'underlinePosition',\n  'underline-position': 'underlinePosition',\n  underlinethickness: 'underlineThickness',\n  'underline-thickness': 'underlineThickness',\n  unicodebidi: 'unicodeBidi',\n  'unicode-bidi': 'unicodeBidi',\n  unicoderange: 'unicodeRange',\n  'unicode-range': 'unicodeRange',\n  unitsperem: 'unitsPerEm',\n  'units-per-em': 'unitsPerEm',\n  unselectable: 'unselectable',\n  valphabetic: 'vAlphabetic',\n  'v-alphabetic': 'vAlphabetic',\n  vectoreffect: 'vectorEffect',\n  'vector-effect': 'vectorEffect',\n  vertadvy: 'vertAdvY',\n  'vert-adv-y': 'vertAdvY',\n  vertoriginx: 'vertOriginX',\n  'vert-origin-x': 'vertOriginX',\n  vertoriginy: 'vertOriginY',\n  'vert-origin-y': 'vertOriginY',\n  vhanging: 'vHanging',\n  'v-hanging': 'vHanging',\n  videographic: 'vIdeographic',\n  'v-ideographic': 'vIdeographic',\n  viewbox: 'viewBox',\n  viewtarget: 'viewTarget',\n  vmathematical: 'vMathematical',\n  'v-mathematical': 'vMathematical',\n  wordspacing: 'wordSpacing',\n  'word-spacing': 'wordSpacing',\n  writingmode: 'writingMode',\n  'writing-mode': 'writingMode',\n  xchannelselector: 'xChannelSelector',\n  xheight: 'xHeight',\n  'x-height': 'xHeight',\n  xlinkactuate: 'xlinkActuate',\n  'xlink:actuate': 'xlinkActuate',\n  xlinkarcrole: 'xlinkArcrole',\n  'xlink:arcrole': 'xlinkArcrole',\n  xlinkhref: 'xlinkHref',\n  'xlink:href': 'xlinkHref',\n  xlinkrole: 'xlinkRole',\n  'xlink:role': 'xlinkRole',\n  xlinkshow: 'xlinkShow',\n  'xlink:show': 'xlinkShow',\n  xlinktitle: 'xlinkTitle',\n  'xlink:title': 'xlinkTitle',\n  xlinktype: 'xlinkType',\n  'xlink:type': 'xlinkType',\n  xmlbase: 'xmlBase',\n  'xml:base': 'xmlBase',\n  xmllang: 'xmlLang',\n  'xml:lang': 'xmlLang',\n  'xml:space': 'xmlSpace',\n  xmlnsxlink: 'xmlnsXlink',\n  'xmlns:xlink': 'xmlnsXlink',\n  xmlspace: 'xmlSpace',\n  ychannelselector: 'yChannelSelector',\n  zoomandpan: 'zoomAndPan',\n\n  // event handlers\n  onblur: 'onBlur',\n  onchange: 'onChange',\n  onclick: 'onClick',\n  oncontextmenu: 'onContextMenu',\n  ondoubleclick: 'onDoubleClick',\n  ondrag: 'onDrag',\n  ondragend: 'onDragEnd',\n  ondragenter: 'onDragEnter',\n  ondragexit: 'onDragExit',\n  ondragleave: 'onDragLeave',\n  ondragover: 'onDragOver',\n  ondragstart: 'onDragStart',\n  ondrop: 'onDrop',\n  onerror: 'onError',\n  onfocus: 'onFocus',\n  oninput: 'onInput',\n  oninvalid: 'onInvalid',\n  onkeydown: 'onKeyDown',\n  onkeypress: 'onKeyPress',\n  onkeyup: 'onKeyUp',\n  onload: 'onLoad',\n  onmousedown: 'onMouseDown',\n  onmouseenter: 'onMouseEnter',\n  onmouseleave: 'onMouseLeave',\n  onmousemove: 'onMouseMove',\n  onmouseout: 'onMouseOut',\n  onmouseover: 'onMouseOver',\n  onmouseup: 'onMouseUp',\n  onscroll: 'onScroll',\n  onsubmit: 'onSubmit',\n  ontouchcancel: 'onTouchCancel',\n  ontouchend: 'onTouchEnd',\n  ontouchmove: 'onTouchMove',\n  ontouchstart: 'onTouchStart',\n  onwheel: 'onWheel',\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { defineProperty as t } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { getTestId as r, ComponentDefaultTestId as i } from \"../../tests/testIds.js\";\nimport s from \"classnames\";\nimport o from \"react\";\nimport { DirectionType as e } from \"./DividerConstants.js\";\nimport { getStyle as a } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport { withStaticPropsWithoutForwardRef as m } from \"../../types/withStaticProps.js\";\nimport \"../../utils/colors-vars-map.js\";\nimport d from \"./Divider.module.scss.js\";\nvar p = m(function (e) {\n  var m = e.className,\n    p = void 0 === m ? void 0 : m,\n    l = e.withoutMargin,\n    n = void 0 !== l && l,\n    c = e.direction,\n    v = void 0 === c ? \"horizontal\" : c,\n    f = e.id;\n  return o.createElement(\"div\", {\n    id: f,\n    \"data-testid\": e[\"data-testid\"] || r(i.DIVIDER, f),\n    className: s(d.divider, p, a(d, v), t({}, d.withoutMargin, n))\n  });\n}, {\n  directions: e\n});\nexport { p as default };","map":{"version":3,"names":["p","m","e","className","l","withoutMargin","n","c","direction","v","f","id","o","createElement","r","i","DIVIDER","s","d","divider","a","t","directions","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/Divider/Divider.tsx"],"sourcesContent":["import { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport cx from \"classnames\";\nimport React from \"react\";\nimport { DirectionType as DirectionTypeEnum } from \"./DividerConstants\";\nimport { DividerDirection } from \"./Divider.types\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport { VibeComponentProps, withStaticPropsWithoutForwardRef } from \"../../types\";\nimport styles from \"./Divider.module.scss\";\n\nexport interface DividerProps extends VibeComponentProps {\n  /**\n   * The direction of the divider.\n   */\n  direction?: DividerDirection;\n  /**\n   * If true, removes margin from the divider.\n   */\n  withoutMargin?: boolean;\n}\n\nconst Divider = ({\n  className = undefined,\n  withoutMargin = false,\n  direction = \"horizontal\",\n  id,\n  \"data-testid\": dataTestId\n}: DividerProps) => {\n  return (\n    <div\n      id={id}\n      data-testid={dataTestId || getTestId(ComponentDefaultTestId.DIVIDER, id)}\n      className={cx(styles.divider, className, getStyle(styles, direction), {\n        [styles.withoutMargin]: withoutMargin\n      })}\n    />\n  );\n};\n\ninterface DividerStaticProps {\n  directions: typeof DirectionTypeEnum;\n}\n\nexport default withStaticPropsWithoutForwardRef<DividerProps, DividerStaticProps>(Divider, {\n  directions: DirectionTypeEnum\n});\n"],"mappings":";;;;;;;;;AAoBA,IAsBeA,CAAA,GAAAC,CAAA,CAtBC,UAAHC,CAAA;EAMM,IAAAD,CAAA,GAAAC,CAAA,CALjBC,SAAA;IAAAH,CAAA,QAAY,MAAHC,CAAA,QAAG,IAASA,CAAA;IAAAG,CAAA,GAAAF,CAAA,CACrBG,aAAA;IAAAC,CAAA,QAAgB,MAAHF,CAAA,IAAQA,CAAA;IAAAG,CAAA,GAAAL,CAAA,CACrBM,SAAA;IAAAC,CAAA,QAAY,MAAHF,CAAA,GAAG,eAAYA,CAAA;IACxBG,CAAA,GAAER,CAAA,CAAFS,EAAA;EAGA,OACEC,CAAA,CAAAC,aAAA;IACEF,EAAA,EAAID,CAAA;IACS,eALQR,CAAA,CAAzB,kBAK+BY,CAAA,CAAUC,CAAA,CAAuBC,OAAA,EAASN,CAAA;IACrEP,SAAA,EAAWc,CAAA,CAAGC,CAAA,CAAOC,OAAA,EAASnB,CAAA,EAAWoB,CAAA,CAASF,CAAA,EAAQT,CAAA,GAAUY,CAAA,KACjEH,CAAA,CAAOb,aAAA,EAAgBC,CAAA;EAAA,EAIhC;AAAA,GAM2F;EACzFgB,UAAA,EAAYpB;AAAA;AAAA,SAAAF,CAAA,IAAAuB,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
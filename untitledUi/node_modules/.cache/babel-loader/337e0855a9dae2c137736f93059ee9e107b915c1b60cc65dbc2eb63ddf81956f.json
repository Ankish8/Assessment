{"ast":null,"code":"import { defineProperty as e } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport s from \"classnames\";\nimport t, { forwardRef as o, useContext as i, useRef as r, useEffect as n, useCallback as a } from \"react\";\nimport { camelCase as m } from \"lodash-es\";\nimport { getStyle as l } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport d from \"../Text/Text.js\";\nimport { SELECTION_KEYS as p } from \"../../constants/keyCodes.js\";\nimport { SIZES as c } from \"../../constants/sizes.js\";\nimport { NOOP as u } from \"../../utils/function-utils.js\";\nimport { withStaticProps as f } from \"../../types/withStaticProps.js\";\nimport \"../../utils/colors-vars-map.js\";\nimport j from \"../../hooks/useKeyEvent/index.js\";\nimport \"../Menu/Menu/hooks/useLastNavigationDirection.js\";\nimport \"../../hooks/useFullKeyboardListeners.js\";\nimport \"../../hooks/useActiveDescendantListFocus/index.js\";\nimport \"../../hooks/useVibeMediaQuery/index.js\";\nimport v from \"../../hooks/useMergeRef.js\";\nimport \"../../tests/constants.js\";\nimport \"../../hooks/useSwitch/index.js\";\nimport { ListContext as h } from \"../List/utils/ListContext.js\";\nimport { ListItemComponentType as k } from \"./ListItemConstants.js\";\nimport x from \"./ListItem.module.scss.js\";\nvar b = o(function (o, f) {\n  var k = o.className,\n    b = o.id,\n    y = o.component,\n    L = void 0 === y ? \"div\" : y,\n    I = o.onClick,\n    M = void 0 === I ? u : I,\n    C = o.onHover,\n    g = void 0 === C ? u : C,\n    F = o.selected,\n    N = o.disabled,\n    z = void 0 !== N && N,\n    E = o.size,\n    H = void 0 === E ? c.SMALL : E,\n    P = o.tabIndex,\n    S = void 0 === P ? 0 : P,\n    w = o.children,\n    A = o[\"aria-current\"],\n    D = o[\"data-testid\"],\n    K = o.role,\n    T = void 0 === K ? \"option\" : K,\n    _ = i(h).updateFocusedItem,\n    B = r(null),\n    O = v(f, B);\n  n(function () {\n    F && (null == _ || _(b));\n  }, [F, b, _]);\n  var Q = a(function (e) {\n    z || M(e, b);\n  }, [z, M, b]);\n  j({\n    keys: p,\n    ref: B,\n    callback: Q\n  });\n  var R = a(function (e) {\n    z || g(e, b);\n  }, [z, g, b]);\n  return t.createElement(d, {\n    element: L,\n    \"data-testid\": D || b,\n    ref: O,\n    className: s(x.listItem, k, l(x, m(H)), e(e({}, x.selected, F && !z), x.disabled, z)),\n    id: b,\n    type: \"text2\",\n    \"aria-disabled\": z,\n    \"aria-selected\": F,\n    onClick: Q,\n    onMouseEnter: R,\n    onFocus: R,\n    role: T,\n    tabIndex: S,\n    \"aria-current\": A\n  }, w);\n});\nObject.assign(b, {\n  displayName: \"ListItem\"\n});\nvar y = f(b, {\n  sizes: c,\n  components: k\n});\nexport { y as default };","map":{"version":3,"names":["b","o","f","k","className","id","y","component","L","I","onClick","M","u","C","onHover","g","F","selected","N","disabled","z","E","size","H","c","SMALL","P","tabIndex","S","w","children","A","D","K","role","T","_","i","h","updateFocusedItem","B","r","O","v","n","Q","a","e","j","keys","p","ref","callback","R","t","createElement","d","element","s","x","listItem","l","m","type","onMouseEnter","onFocus","Object","assign","displayName","sizes","components","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/ListItem/ListItem.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, { AriaAttributes, AriaRole, forwardRef, useCallback, useContext, useEffect, useRef } from \"react\";\nimport { camelCase } from \"lodash-es\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport Text from \"../Text/Text\";\nimport { SIZES, SELECTION_KEYS } from \"../../constants\";\nimport { NOOP } from \"../../utils/function-utils\";\nimport { withStaticProps, VibeComponentProps, ElementContent } from \"../../types\";\nimport { useKeyEvent } from \"../../hooks\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport { ListContext } from \"../List/utils/ListContext\";\nimport { ListItemComponentType as ListItemComponentTypeEnum } from \"./ListItemConstants\";\nimport { ListItemElement, ListItemSize } from \"./ListItem.types\";\nimport styles from \"./ListItem.module.scss\";\n\nexport interface ListItemProps extends VibeComponentProps {\n  /**\n   * The HTML element used for the list item.\n   */\n  component?: ListItemElement;\n  /**\n   * The textual content inside the list item.\n   */\n  children?: ElementContent;\n  /**\n   * Callback fired when the item is clicked.\n   */\n  onClick?: (event: React.MouseEvent | React.KeyboardEvent, id: string) => void;\n  /**\n   * Callback fired when the item is hovered.\n   */\n  onHover?: (event: React.MouseEvent | React.FocusEvent, id: string) => void;\n  /**\n   * If true, disables the item and prevents interactions.\n   */\n  disabled?: boolean;\n  /**\n   * If true, marks the item as selected.\n   */\n  selected?: boolean;\n  /**\n   * The size of the list item.\n   */\n  size?: ListItemSize;\n  /**\n   * The tab index of the list item for keyboard navigation.\n   */\n  tabIndex?: number;\n  /**\n   * Indicates the current state of the item in a set of items.\n   */\n  \"aria-current\"?: AriaAttributes[\"aria-current\"];\n  /**\n   * The ARIA role of the list item.\n   */\n  role?: AriaRole;\n}\n\nconst ListItem = forwardRef(\n  (\n    {\n      className,\n      id,\n      component = \"div\",\n      onClick = NOOP,\n      onHover = NOOP,\n      selected,\n      disabled = false,\n      size = SIZES.SMALL,\n      tabIndex = 0,\n      children,\n      \"aria-current\": ariaCurrent,\n      \"data-testid\": dataTestId,\n      role = \"option\"\n    }: ListItemProps,\n    ref: React.ForwardedRef<HTMLElement>\n  ) => {\n    const { updateFocusedItem } = useContext(ListContext);\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n\n    useEffect(() => {\n      if (selected) {\n        updateFocusedItem?.(id);\n      }\n    }, [selected, id, updateFocusedItem]);\n\n    const componentOnClick = useCallback(\n      (event: React.MouseEvent | React.KeyboardEvent) => {\n        if (disabled) return;\n        onClick(event, id);\n      },\n      [disabled, onClick, id]\n    );\n\n    useKeyEvent({\n      keys: SELECTION_KEYS,\n      ref: componentRef,\n      callback: componentOnClick\n    });\n\n    const componentOnHover = useCallback(\n      (event: React.MouseEvent | React.FocusEvent) => {\n        if (disabled) return;\n        onHover(event, id);\n      },\n      [disabled, onHover, id]\n    );\n\n    return (\n      <Text\n        element={component}\n        data-testid={dataTestId || id}\n        ref={mergedRef}\n        className={cx(styles.listItem, className, getStyle(styles, camelCase(size)), {\n          [styles.selected]: selected && !disabled,\n          [styles.disabled]: disabled\n        })}\n        id={id}\n        type=\"text2\"\n        aria-disabled={disabled}\n        aria-selected={selected}\n        onClick={componentOnClick}\n        onMouseEnter={componentOnHover}\n        onFocus={componentOnHover}\n        role={role}\n        tabIndex={tabIndex}\n        aria-current={ariaCurrent}\n      >\n        {children}\n      </Text>\n    );\n  }\n);\n\nObject.assign(ListItem, {\n  // Used by VirtualizedListItems\n  displayName: \"ListItem\"\n});\n\ninterface ListItemStaticProps {\n  sizes: typeof SIZES;\n  components: typeof ListItemComponentTypeEnum;\n}\n\nexport default withStaticProps<ListItemProps, ListItemStaticProps>(ListItem, {\n  sizes: SIZES,\n  components: ListItemComponentTypeEnum\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar isObject = require('es-object-atoms/isObject');\nvar DefineOwnProperty = require('../helpers/DefineOwnProperty');\nvar isFullyPopulatedPropertyDescriptor = require('../helpers/isFullyPopulatedPropertyDescriptor');\nvar isPropertyDescriptor = require('../helpers/records/property-descriptor');\nvar FromPropertyDescriptor = require('./FromPropertyDescriptor');\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\nvar IsDataDescriptor = require('./IsDataDescriptor');\nvar IsGenericDescriptor = require('./IsGenericDescriptor');\nvar isPropertyKey = require('../helpers/isPropertyKey');\nvar SameValue = require('./SameValue');\n\n// https://262.ecma-international.org/13.0/#sec-validateandapplypropertydescriptor\n\n// see https://github.com/tc39/ecma262/pull/2468 for ES2022 changes\n\n// eslint-disable-next-line max-lines-per-function, max-statements\nmodule.exports = function ValidateAndApplyPropertyDescriptor(O, P, extensible, Desc, current) {\n  if (typeof O !== 'undefined' && !isObject(O)) {\n    throw new $TypeError('Assertion failed: O must be undefined or an Object');\n  }\n  if (!isPropertyKey(P)) {\n    throw new $TypeError('Assertion failed: P must be a Property Key');\n  }\n  if (typeof extensible !== 'boolean') {\n    throw new $TypeError('Assertion failed: extensible must be a Boolean');\n  }\n  if (!isPropertyDescriptor(Desc)) {\n    throw new $TypeError('Assertion failed: Desc must be a Property Descriptor');\n  }\n  if (typeof current !== 'undefined' && !isPropertyDescriptor(current)) {\n    throw new $TypeError('Assertion failed: current must be a Property Descriptor, or undefined');\n  }\n  if (typeof current === 'undefined') {\n    // step 2\n    if (!extensible) {\n      return false; // step 2.a\n    }\n    if (typeof O === 'undefined') {\n      return true; // step 2.b\n    }\n    if (IsAccessorDescriptor(Desc)) {\n      // step 2.c\n      return DefineOwnProperty(IsDataDescriptor, SameValue, FromPropertyDescriptor, O, P, Desc);\n    }\n    // step 2.d\n    return DefineOwnProperty(IsDataDescriptor, SameValue, FromPropertyDescriptor, O, P, {\n      '[[Configurable]]': !!Desc['[[Configurable]]'],\n      '[[Enumerable]]': !!Desc['[[Enumerable]]'],\n      '[[Value]]': Desc['[[Value]]'],\n      '[[Writable]]': !!Desc['[[Writable]]']\n    });\n  }\n\n  // 3. Assert: current is a fully populated Property Descriptor.\n  if (!isFullyPopulatedPropertyDescriptor({\n    IsAccessorDescriptor: IsAccessorDescriptor,\n    IsDataDescriptor: IsDataDescriptor\n  }, current)) {\n    throw new $TypeError('`current`, when present, must be a fully populated and valid Property Descriptor');\n  }\n\n  // 4. If every field in Desc is absent, return true.\n  // this can't really match the assertion that it's a Property Descriptor in our JS implementation\n\n  // 5. If current.[[Configurable]] is false, then\n  if (!current['[[Configurable]]']) {\n    if ('[[Configurable]]' in Desc && Desc['[[Configurable]]']) {\n      // step 5.a\n      return false;\n    }\n    if ('[[Enumerable]]' in Desc && !SameValue(Desc['[[Enumerable]]'], current['[[Enumerable]]'])) {\n      // step 5.b\n      return false;\n    }\n    if (!IsGenericDescriptor(Desc) && !SameValue(IsAccessorDescriptor(Desc), IsAccessorDescriptor(current))) {\n      // step 5.c\n      return false;\n    }\n    if (IsAccessorDescriptor(current)) {\n      // step 5.d\n      if ('[[Get]]' in Desc && !SameValue(Desc['[[Get]]'], current['[[Get]]'])) {\n        return false;\n      }\n      if ('[[Set]]' in Desc && !SameValue(Desc['[[Set]]'], current['[[Set]]'])) {\n        return false;\n      }\n    } else if (!current['[[Writable]]']) {\n      // step 5.e\n      if ('[[Writable]]' in Desc && Desc['[[Writable]]']) {\n        return false;\n      }\n      if ('[[Value]]' in Desc && !SameValue(Desc['[[Value]]'], current['[[Value]]'])) {\n        return false;\n      }\n    }\n  }\n\n  // 6. If O is not undefined, then\n  if (typeof O !== 'undefined') {\n    var configurable;\n    var enumerable;\n    if (IsDataDescriptor(current) && IsAccessorDescriptor(Desc)) {\n      // step 6.a\n      configurable = ('[[Configurable]]' in Desc ? Desc : current)['[[Configurable]]'];\n      enumerable = ('[[Enumerable]]' in Desc ? Desc : current)['[[Enumerable]]'];\n      // Replace the property named P of object O with an accessor property having [[Configurable]] and [[Enumerable]] attributes as described by current and each other attribute set to its default value.\n      return DefineOwnProperty(IsDataDescriptor, SameValue, FromPropertyDescriptor, O, P, {\n        '[[Configurable]]': !!configurable,\n        '[[Enumerable]]': !!enumerable,\n        '[[Get]]': ('[[Get]]' in Desc ? Desc : current)['[[Get]]'],\n        '[[Set]]': ('[[Set]]' in Desc ? Desc : current)['[[Set]]']\n      });\n    } else if (IsAccessorDescriptor(current) && IsDataDescriptor(Desc)) {\n      configurable = ('[[Configurable]]' in Desc ? Desc : current)['[[Configurable]]'];\n      enumerable = ('[[Enumerable]]' in Desc ? Desc : current)['[[Enumerable]]'];\n      // i. Replace the property named P of object O with a data property having [[Configurable]] and [[Enumerable]] attributes as described by current and each other attribute set to its default value.\n      return DefineOwnProperty(IsDataDescriptor, SameValue, FromPropertyDescriptor, O, P, {\n        '[[Configurable]]': !!configurable,\n        '[[Enumerable]]': !!enumerable,\n        '[[Value]]': ('[[Value]]' in Desc ? Desc : current)['[[Value]]'],\n        '[[Writable]]': !!('[[Writable]]' in Desc ? Desc : current)['[[Writable]]']\n      });\n    }\n\n    // For each field of Desc that is present, set the corresponding attribute of the property named P of object O to the value of the field.\n    return DefineOwnProperty(IsDataDescriptor, SameValue, FromPropertyDescriptor, O, P, Desc);\n  }\n  return true; // step 7\n};","map":{"version":3,"names":["$TypeError","require","isObject","DefineOwnProperty","isFullyPopulatedPropertyDescriptor","isPropertyDescriptor","FromPropertyDescriptor","IsAccessorDescriptor","IsDataDescriptor","IsGenericDescriptor","isPropertyKey","SameValue","module","exports","ValidateAndApplyPropertyDescriptor","O","P","extensible","Desc","current","configurable","enumerable"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/es-abstract/2024/ValidateAndApplyPropertyDescriptor.js"],"sourcesContent":["'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar isObject = require('es-object-atoms/isObject');\n\nvar DefineOwnProperty = require('../helpers/DefineOwnProperty');\nvar isFullyPopulatedPropertyDescriptor = require('../helpers/isFullyPopulatedPropertyDescriptor');\nvar isPropertyDescriptor = require('../helpers/records/property-descriptor');\n\nvar FromPropertyDescriptor = require('./FromPropertyDescriptor');\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\nvar IsDataDescriptor = require('./IsDataDescriptor');\nvar IsGenericDescriptor = require('./IsGenericDescriptor');\nvar isPropertyKey = require('../helpers/isPropertyKey');\nvar SameValue = require('./SameValue');\n\n// https://262.ecma-international.org/13.0/#sec-validateandapplypropertydescriptor\n\n// see https://github.com/tc39/ecma262/pull/2468 for ES2022 changes\n\n// eslint-disable-next-line max-lines-per-function, max-statements\nmodule.exports = function ValidateAndApplyPropertyDescriptor(O, P, extensible, Desc, current) {\n\tif (typeof O !== 'undefined' && !isObject(O)) {\n\t\tthrow new $TypeError('Assertion failed: O must be undefined or an Object');\n\t}\n\tif (!isPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: P must be a Property Key');\n\t}\n\tif (typeof extensible !== 'boolean') {\n\t\tthrow new $TypeError('Assertion failed: extensible must be a Boolean');\n\t}\n\tif (!isPropertyDescriptor(Desc)) {\n\t\tthrow new $TypeError('Assertion failed: Desc must be a Property Descriptor');\n\t}\n\tif (typeof current !== 'undefined' && !isPropertyDescriptor(current)) {\n\t\tthrow new $TypeError('Assertion failed: current must be a Property Descriptor, or undefined');\n\t}\n\n\tif (typeof current === 'undefined') { // step 2\n\t\tif (!extensible) {\n\t\t\treturn false; // step 2.a\n\t\t}\n\t\tif (typeof O === 'undefined') {\n\t\t\treturn true; // step 2.b\n\t\t}\n\t\tif (IsAccessorDescriptor(Desc)) { // step 2.c\n\t\t\treturn DefineOwnProperty(\n\t\t\t\tIsDataDescriptor,\n\t\t\t\tSameValue,\n\t\t\t\tFromPropertyDescriptor,\n\t\t\t\tO,\n\t\t\t\tP,\n\t\t\t\tDesc\n\t\t\t);\n\t\t}\n\t\t// step 2.d\n\t\treturn DefineOwnProperty(\n\t\t\tIsDataDescriptor,\n\t\t\tSameValue,\n\t\t\tFromPropertyDescriptor,\n\t\t\tO,\n\t\t\tP,\n\t\t\t{\n\t\t\t\t'[[Configurable]]': !!Desc['[[Configurable]]'],\n\t\t\t\t'[[Enumerable]]': !!Desc['[[Enumerable]]'],\n\t\t\t\t'[[Value]]': Desc['[[Value]]'],\n\t\t\t\t'[[Writable]]': !!Desc['[[Writable]]']\n\t\t\t}\n\t\t);\n\t}\n\n\t// 3. Assert: current is a fully populated Property Descriptor.\n\tif (\n\t\t!isFullyPopulatedPropertyDescriptor(\n\t\t\t{\n\t\t\t\tIsAccessorDescriptor: IsAccessorDescriptor,\n\t\t\t\tIsDataDescriptor: IsDataDescriptor\n\t\t\t},\n\t\t\tcurrent\n\t\t)\n\t) {\n\t\tthrow new $TypeError('`current`, when present, must be a fully populated and valid Property Descriptor');\n\t}\n\n\t// 4. If every field in Desc is absent, return true.\n\t// this can't really match the assertion that it's a Property Descriptor in our JS implementation\n\n\t// 5. If current.[[Configurable]] is false, then\n\tif (!current['[[Configurable]]']) {\n\t\tif ('[[Configurable]]' in Desc && Desc['[[Configurable]]']) {\n\t\t\t// step 5.a\n\t\t\treturn false;\n\t\t}\n\t\tif ('[[Enumerable]]' in Desc && !SameValue(Desc['[[Enumerable]]'], current['[[Enumerable]]'])) {\n\t\t\t// step 5.b\n\t\t\treturn false;\n\t\t}\n\t\tif (!IsGenericDescriptor(Desc) && !SameValue(IsAccessorDescriptor(Desc), IsAccessorDescriptor(current))) {\n\t\t\t// step 5.c\n\t\t\treturn false;\n\t\t}\n\t\tif (IsAccessorDescriptor(current)) { // step 5.d\n\t\t\tif ('[[Get]]' in Desc && !SameValue(Desc['[[Get]]'], current['[[Get]]'])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ('[[Set]]' in Desc && !SameValue(Desc['[[Set]]'], current['[[Set]]'])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (!current['[[Writable]]']) { // step 5.e\n\t\t\tif ('[[Writable]]' in Desc && Desc['[[Writable]]']) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ('[[Value]]' in Desc && !SameValue(Desc['[[Value]]'], current['[[Value]]'])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\t// 6. If O is not undefined, then\n\tif (typeof O !== 'undefined') {\n\t\tvar configurable;\n\t\tvar enumerable;\n\t\tif (IsDataDescriptor(current) && IsAccessorDescriptor(Desc)) { // step 6.a\n\t\t\tconfigurable = ('[[Configurable]]' in Desc ? Desc : current)['[[Configurable]]'];\n\t\t\tenumerable = ('[[Enumerable]]' in Desc ? Desc : current)['[[Enumerable]]'];\n\t\t\t// Replace the property named P of object O with an accessor property having [[Configurable]] and [[Enumerable]] attributes as described by current and each other attribute set to its default value.\n\t\t\treturn DefineOwnProperty(\n\t\t\t\tIsDataDescriptor,\n\t\t\t\tSameValue,\n\t\t\t\tFromPropertyDescriptor,\n\t\t\t\tO,\n\t\t\t\tP,\n\t\t\t\t{\n\t\t\t\t\t'[[Configurable]]': !!configurable,\n\t\t\t\t\t'[[Enumerable]]': !!enumerable,\n\t\t\t\t\t'[[Get]]': ('[[Get]]' in Desc ? Desc : current)['[[Get]]'],\n\t\t\t\t\t'[[Set]]': ('[[Set]]' in Desc ? Desc : current)['[[Set]]']\n\t\t\t\t}\n\t\t\t);\n\t\t} else if (IsAccessorDescriptor(current) && IsDataDescriptor(Desc)) {\n\t\t\tconfigurable = ('[[Configurable]]' in Desc ? Desc : current)['[[Configurable]]'];\n\t\t\tenumerable = ('[[Enumerable]]' in Desc ? Desc : current)['[[Enumerable]]'];\n\t\t\t// i. Replace the property named P of object O with a data property having [[Configurable]] and [[Enumerable]] attributes as described by current and each other attribute set to its default value.\n\t\t\treturn DefineOwnProperty(\n\t\t\t\tIsDataDescriptor,\n\t\t\t\tSameValue,\n\t\t\t\tFromPropertyDescriptor,\n\t\t\t\tO,\n\t\t\t\tP,\n\t\t\t\t{\n\t\t\t\t\t'[[Configurable]]': !!configurable,\n\t\t\t\t\t'[[Enumerable]]': !!enumerable,\n\t\t\t\t\t'[[Value]]': ('[[Value]]' in Desc ? Desc : current)['[[Value]]'],\n\t\t\t\t\t'[[Writable]]': !!('[[Writable]]' in Desc ? Desc : current)['[[Writable]]']\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\t// For each field of Desc that is present, set the corresponding attribute of the property named P of object O to the value of the field.\n\t\treturn DefineOwnProperty(\n\t\t\tIsDataDescriptor,\n\t\t\tSameValue,\n\t\t\tFromPropertyDescriptor,\n\t\t\tO,\n\t\t\tP,\n\t\t\tDesc\n\t\t);\n\t}\n\n\treturn true; // step 7\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
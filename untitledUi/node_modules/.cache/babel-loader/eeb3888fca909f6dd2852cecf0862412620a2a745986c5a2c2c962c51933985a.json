{"ast":null,"code":"import e from \"react\";\nimport r from \"classnames\";\nimport { getStyle as t } from \"../../../helpers/typesciptCssModulesHelper.js\";\nimport o from \"./SliderFilledTrack.module.scss.js\";\nvar s = function (s) {\n  var c = s.className,\n    i = s.dimension,\n    a = s.offset,\n    l = s.reverse,\n    m = s.color,\n    n = function (e, r, t) {\n      return t ? {\n        right: \"\".concat(r, \"%\"),\n        width: \"\".concat(e - r, \"%\")\n      } : {\n        left: \"\".concat(r, \"%\"),\n        width: \"\".concat(e - r, \"%\")\n      };\n    }(void 0 === i ? 0 : i, void 0 === a ? 0 : a, void 0 !== l && l);\n  return e.createElement(\"div\", {\n    className: r(o.filledTrack, t(o, m), c),\n    style: n\n  });\n};\nexport { s as default };","map":{"version":3,"names":["s","SliderFilledTrack","c","className","i","dimension","a","offset","l","reverse","m","color","n","e","r","t","right","concat","width","left","createElement","o","filledTrack","style","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/Slider/SliderBase/SliderFilledTrack.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport VibeComponentProps from \"../../../types/VibeComponentProps\";\nimport cx from \"classnames\";\nimport { getStyle } from \"../../../helpers/typesciptCssModulesHelper\";\nimport styles from \"./SliderFilledTrack.module.scss\";\nimport { SliderColor } from \"../Slider.types\";\n\nfunction defineFilledTrackProps(dimension: number, offset: number, reverse: boolean) {\n  if (reverse) {\n    return {\n      right: `${offset}%`,\n      width: `${dimension - offset}%`\n    };\n  }\n  return {\n    left: `${offset}%`,\n    width: `${dimension - offset}%`\n  };\n}\n\nexport interface SliderFilledTrackProps extends VibeComponentProps {\n  /**\n   * The size of the filled track, based on the selected value.\n   */\n  dimension?: number;\n  /**\n   * The offset from the start of the track.\n   */\n  offset?: number;\n  /**\n   * If true, the filled track starts from the end instead of the beginning.\n   */\n  reverse?: boolean;\n  /**\n   * The color of the filled track.\n   */\n  color: SliderColor;\n}\n\nconst SliderFilledTrack: FC<SliderFilledTrackProps> = ({\n  className,\n  dimension = 0,\n  offset = 0,\n  reverse = false,\n  color\n}) => {\n  const filledTrackStyle = defineFilledTrackProps(dimension, offset, reverse);\n  return <div className={cx(styles.filledTrack, getStyle(styles, color), className)} style={filledTrackStyle} />;\n};\n\nexport default SliderFilledTrack;\n"],"mappings":";;;;AAuCA,IAAMA,CAAA,GAAgD,SAAAC,CAA/BD,CAAA;EAMlB,IALHE,CAAA,GAASF,CAAA,CAATG,SAAA;IAASC,CAAA,GAAAJ,CAAA,CACTK,SAAA;IAAaC,CAAA,GAAAN,CAAA,CACbO,MAAA;IAAUC,CAAA,GAAAR,CAAA,CACVS,OAAA;IACAC,CAAA,GAAKV,CAAA,CAALW,KAAA;IAEMC,CAAA,GAvCR,UAAgCC,CAAA,EAAmBC,CAAA,EAAgBC,CAAA;MACjE,OAAIA,CAAA,GACK;QACLC,KAAA,EAAK,GAAAC,MAAA,CAAKH,CAAA,EAAS;QACnBI,KAAA,EAAK,GAAAD,MAAA,CAAKJ,CAAA,GAAYC,CAAA,EAAM;MAAA,IAGzB;QACLK,IAAA,EAAI,GAAAF,MAAA,CAAKH,CAAA,EAAS;QAClBI,KAAA,EAAK,GAAAD,MAAA,CAAKJ,CAAA,GAAYC,CAAA,EAAM;MAAA,CAEhC;IAAA,CA4B2B,MALb,MAAHV,CAAA,GAAG,IAACA,CAAA,OACJ,MAAHE,CAAA,GAAG,IAACA,CAAA,OACA,MAAHE,CAAA,IAAQA,CAAA;EAIf,OAAOK,CAAA,CAAAO,aAAA;IAAKjB,SAAA,EAAWW,CAAA,CAAGO,CAAA,CAAOC,WAAA,EAAaP,CAAA,CAASM,CAAA,EAAQX,CAAA,GAAQR,CAAA;IAAYqB,KAAA,EAAOX;EAAA,EAC5F;AAAA;AAAA,SAAAZ,CAAA,IAAAwB,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { useCallback as n } from \"react\";\nimport { calculateSteppedValue as o } from \"../utils/calcValue.js\";\nvar t = function (t) {\n  var e = t.onChange,\n    r = t.value,\n    u = t.step,\n    a = void 0 === u ? 1 : u,\n    i = t.min,\n    l = t.max,\n    c = t.allowOutOfBounds,\n    f = t.readOnly,\n    m = t.inputRef,\n    s = n(function (n, t) {\n      var u;\n      if (!f) {\n        var s = o({\n          value: r,\n          direction: n,\n          step: a,\n          min: i,\n          max: l,\n          allowOutOfBounds: c\n        });\n        e(s, t), null === (u = m.current) || void 0 === u || u.focus();\n      }\n    }, [r, a, i, l, e, c, f, m]);\n  return {\n    onIncrement: n(function (n) {\n      s(1, n);\n    }, [s]),\n    onDecrement: n(function (n) {\n      s(-1, n);\n    }, [s])\n  };\n};\nexport { t as default };","map":{"version":3,"names":["t","useSpinButtonHandlers","e","onChange","r","value","u","step","a","i","min","l","max","c","allowOutOfBounds","f","readOnly","m","inputRef","s","n","o","direction","current","focus","onIncrement","onDecrement","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/NumberField/hooks/useSpinButtonHandlers.ts"],"sourcesContent":["import { useCallback } from \"react\";\nimport { NumberFieldProps } from \"../NumberField.types\";\nimport { calculateSteppedValue } from \"../utils/calcValue\";\n\nexport type UseSpinButtonHandlersProps = Pick<\n  NumberFieldProps,\n  \"onChange\" | \"value\" | \"step\" | \"min\" | \"max\" | \"allowOutOfBounds\" | \"readOnly\"\n> & {\n  inputRef: React.RefObject<HTMLInputElement>;\n};\n\nconst useSpinButtonHandlers = ({\n  onChange,\n  value,\n  step = 1,\n  min,\n  max,\n  allowOutOfBounds,\n  readOnly,\n  inputRef\n}: UseSpinButtonHandlersProps) => {\n  const handleStep = useCallback(\n    (direction: number, event: React.MouseEvent | React.KeyboardEvent) => {\n      if (readOnly) return;\n      const newValue = calculateSteppedValue({ value, direction, step, min, max, allowOutOfBounds });\n      onChange(newValue, event);\n      inputRef.current?.focus();\n    },\n    [value, step, min, max, onChange, allowOutOfBounds, readOnly, inputRef]\n  );\n\n  const onIncrement = useCallback(\n    (event: React.MouseEvent | React.KeyboardEvent) => {\n      handleStep(1, event);\n    },\n    [handleStep]\n  );\n\n  const onDecrement = useCallback(\n    (event: React.MouseEvent | React.KeyboardEvent) => {\n      handleStep(-1, event);\n    },\n    [handleStep]\n  );\n\n  return {\n    onIncrement,\n    onDecrement\n  };\n};\n\nexport default useSpinButtonHandlers;\n"],"mappings":";;AAWA,IAAMA,CAAA,GAAwB,SAAAC,CAAHD,CAAA;EASM,IAR/BE,CAAA,GAAQF,CAAA,CAARG,QAAA;IACAC,CAAA,GAAKJ,CAAA,CAALK,KAAA;IAAKC,CAAA,GAAAN,CAAA,CACLO,IAAA;IAAAC,CAAA,QAAO,MAAHF,CAAA,GAAG,IAACA,CAAA;IACRG,CAAA,GAAGT,CAAA,CAAHU,GAAA;IACAC,CAAA,GAAGX,CAAA,CAAHY,GAAA;IACAC,CAAA,GAAgBb,CAAA,CAAhBc,gBAAA;IACAC,CAAA,GAAQf,CAAA,CAARgB,QAAA;IACAC,CAAA,GAAQjB,CAAA,CAARkB,QAAA;IAEMC,CAAA,GAAaC,CAAA,CACjB,UAACA,CAAA,EAAmBpB,CAAA;MAAA,IAAAM,CAAA;MAClB,KAAIS,CAAA,EAAJ;QACA,IAAMI,CAAA,GAAWE,CAAA,CAAsB;UAAEhB,KAAA,EAAAD,CAAA;UAAOkB,SAAA,EAAAF,CAAA;UAAWb,IAAA,EAAAC,CAAA;UAAME,GAAA,EAAAD,CAAA;UAAKG,GAAA,EAAAD,CAAA;UAAKG,gBAAA,EAAAD;QAAA;QAC3EX,CAAA,CAASiB,CAAA,EAAUnB,CAAA,GACD,UAAlBM,CAAA,GAAAW,CAAA,CAASM,OAAA,UAAS,MAAAjB,CAAA,IAAAA,CAAA,CAAAkB,KAAA,EAHJ;MAAA;IAIhB,GACA,CAACpB,CAAA,EAAOI,CAAA,EAAMC,CAAA,EAAKE,CAAA,EAAKT,CAAA,EAAUW,CAAA,EAAkBE,CAAA,EAAUE,CAAA;EAiBhE,OAAO;IACLQ,WAAA,EAfkBL,CAAA,CAClB,UAACA,CAAA;MACCD,CAAA,CAAW,GAAGC,CAAA,CAChB;IAAA,GACA,CAACD,CAAA;IAYDO,WAAA,EATkBN,CAAA,CAClB,UAACA,CAAA;MACCD,CAAA,EAAY,GAAGC,CAAA,CACjB;IAAA,GACA,CAACD,CAAA;EAAA,CAOL;AAAA;AAAA,SAAAnB,CAAA,IAAA2B,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
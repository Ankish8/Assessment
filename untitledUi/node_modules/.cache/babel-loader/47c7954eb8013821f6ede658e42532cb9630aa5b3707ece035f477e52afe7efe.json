{"ast":null,"code":"import e from \"react\";\nimport t from \"classnames\";\nimport s from \"../../IconButton/IconButton.js\";\nimport o from \"../../Icon/Icon.js\";\nimport { NOOP as a } from \"../../../utils/function-utils.js\";\nimport { getTestId as i } from \"../../../tests/testIds.js\";\nimport { ComponentDefaultTestId as r } from \"../../../tests/constants.js\";\nimport m from \"../../Text/Text.js\";\nimport n from \"../../Heading/Heading.js\";\nimport c from \"../../Flex/Flex.js\";\nimport l from \"./LegacyModalHeader.module.scss.js\";\nimport d from \"../../../../icons/dist/react/CloseSmall.js\";\nvar p = function (p) {\n  var f = p.title,\n    u = p.children,\n    j = p.titleClassName,\n    x = p.description,\n    N = void 0 === x ? \"\" : x,\n    v = p.descriptionClassName,\n    E = p.icon,\n    g = p.closeModal,\n    y = void 0 === g ? a : g,\n    L = p.iconSize,\n    C = void 0 === L ? 24 : L,\n    H = p.iconClassName,\n    I = p.closeButtonAriaLabel,\n    B = void 0 === I ? \"close\" : I,\n    M = p.id,\n    S = p[\"data-testid\"];\n  return e.createElement(\"div\", {\n    className: t(l.container, p.className),\n    \"data-testid\": S || i(r.MODAL_HEADER, M)\n  }, u || e.createElement(c, {\n    align: \"start\",\n    gap: \"small\",\n    className: j\n  }, E && e.createElement(o, {\n    className: t(l.icon, H),\n    icon: E,\n    iconType: \"svg\",\n    iconSize: C,\n    ignoreFocusStyle: !0\n  }), e.createElement(n, {\n    id: M,\n    maxLines: 2\n  }, f)), N && e.createElement(m, {\n    type: \"text2\",\n    maxLines: 2,\n    className: t(l.description, v)\n  }, N), e.createElement(\"div\", {\n    className: t(l.closeButton)\n  }, e.createElement(s, {\n    key: \"xxs\",\n    onClick: y,\n    ariaLabel: B,\n    icon: d,\n    kind: \"tertiary\",\n    size: \"small\"\n  })));\n};\nObject.assign(p, {\n  displayName: \"ModalHeader\"\n});\nexport { p as default };","map":{"version":3,"names":["p","LegacyModalHeader","f","title","u","children","j","titleClassName","x","description","N","v","descriptionClassName","E","icon","g","closeModal","y","a","L","iconSize","C","H","iconClassName","I","closeButtonAriaLabel","B","M","id","S","e","createElement","className","t","l","container","i","r","MODAL_HEADER","c","align","gap","o","iconType","ignoreFocusStyle","n","maxLines","m","type","closeButton","s","key","onClick","ariaLabel","d","kind","size","Object","assign","displayName","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/LegacyModal/LegacyModalHeader/LegacyModalHeader.tsx"],"sourcesContent":["import React from \"react\";\nimport cx from \"classnames\";\nimport IconButton from \"../../IconButton/IconButton\";\nimport { CloseSmall } from \"@vibe/icons\";\nimport Icon from \"../../Icon/Icon\";\nimport { SubIcon, ElementContent, VibeComponentProps } from \"../../../types\";\nimport { NOOP } from \"../../../utils/function-utils\";\nimport { getTestId } from \"../../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../../tests/constants\";\nimport Text from \"../../Text/Text\";\nimport Heading from \"../../Heading/Heading\";\nimport Flex from \"../../Flex/Flex\";\nimport styles from \"./LegacyModalHeader.module.scss\";\n\ninterface BaseLegacyModalHeaderProps extends VibeComponentProps {\n  /**\n   * Description of the modal - pure string description is a recommended standard, use JSX ability only if there is a need to add links\n   */\n  description?: ElementContent;\n  /**\n   * Icon to be rendered before the title\n   */\n  // icon?: string | React.FunctionComponent<IconSubComponentProps> | null;\n  icon?: SubIcon;\n  /**\n   * Class name for the title\n   */\n  titleClassName?: string;\n  /**\n   * closes the Modal. No need to provide it, it is being provided by the modal\n   */\n  closeModal?: () => void;\n  /**\n   * Class name for the description\n   */\n  descriptionClassName?: string;\n  /**\n   * Size of the icon\n   */\n  iconSize?: number;\n  /**\n   * class name for the icon\n   */\n  iconClassName?: string;\n  /**\n   * Aria label for the close button\n   */\n  closeButtonAriaLabel?: string;\n}\n\ninterface LegacyModalHeaderWithOnlyTitle extends BaseLegacyModalHeaderProps {\n  title: ElementContent;\n  children?: never;\n}\n\ninterface LegacyModalHeaderWithOnlyChildren extends BaseLegacyModalHeaderProps {\n  title?: never;\n  children: ElementContent;\n}\n\nexport type LegacyModalHeaderProps = LegacyModalHeaderWithOnlyTitle | LegacyModalHeaderWithOnlyChildren;\n\nconst LegacyModalHeader = ({\n  className,\n  title,\n  children,\n  titleClassName,\n  description = \"\",\n  descriptionClassName,\n  icon,\n  closeModal = NOOP,\n  iconSize = 24,\n  iconClassName,\n  closeButtonAriaLabel = \"close\",\n  id,\n  \"data-testid\": dataTestId\n}: LegacyModalHeaderProps) => {\n  return (\n    <div\n      className={cx(styles.container, className)}\n      data-testid={dataTestId || getTestId(ComponentDefaultTestId.MODAL_HEADER, id)}\n    >\n      {children ? (\n        children\n      ) : (\n        <Flex align=\"start\" gap=\"small\" className={titleClassName}>\n          {icon && (\n            <Icon\n              className={cx(styles.icon, iconClassName)}\n              icon={icon}\n              iconType=\"svg\"\n              iconSize={iconSize}\n              ignoreFocusStyle\n            />\n          )}\n          <Heading id={id} maxLines={2}>\n            {title}\n          </Heading>\n        </Flex>\n      )}\n      {description && (\n        <Text type=\"text2\" maxLines={2} className={cx(styles.description, descriptionClassName)}>\n          {description}\n        </Text>\n      )}\n\n      <div className={cx(styles.closeButton)}>\n        <IconButton\n          key=\"xxs\"\n          onClick={closeModal}\n          ariaLabel={closeButtonAriaLabel}\n          icon={CloseSmall}\n          kind=\"tertiary\"\n          size=\"small\"\n        />\n      </div>\n    </div>\n  );\n};\n\nObject.assign(LegacyModalHeader, {\n  displayName: \"ModalHeader\"\n});\n\nexport default LegacyModalHeader;\n"],"mappings":";;;;;;;;;;;;AA8DA,IAAMA,CAAA,GAAoB,SAAAC,CAAHD,CAAA;EAcM,IAZ3BE,CAAA,GAAKF,CAAA,CAALG,KAAA;IACAC,CAAA,GAAQJ,CAAA,CAARK,QAAA;IACAC,CAAA,GAAcN,CAAA,CAAdO,cAAA;IAAcC,CAAA,GAAAR,CAAA,CACdS,WAAA;IAAAC,CAAA,QAAc,MAAHF,CAAA,GAAG,KAAEA,CAAA;IAChBG,CAAA,GAAoBX,CAAA,CAApBY,oBAAA;IACAC,CAAA,GAAIb,CAAA,CAAJc,IAAA;IAAIC,CAAA,GAAAf,CAAA,CACJgB,UAAA;IAAAC,CAAA,QAAa,MAAHF,CAAA,GAAGG,CAAA,GAAIH,CAAA;IAAAI,CAAA,GAAAnB,CAAA,CACjBoB,QAAA;IAAAC,CAAA,QAAW,MAAHF,CAAA,GAAG,KAAEA,CAAA;IACbG,CAAA,GAAatB,CAAA,CAAbuB,aAAA;IAAaC,CAAA,GAAAxB,CAAA,CACbyB,oBAAA;IAAAC,CAAA,QAAuB,MAAHF,CAAA,GAAG,UAAOA,CAAA;IAC9BG,CAAA,GAAE3B,CAAA,CAAF4B,EAAA;IACeC,CAAA,GAAU7B,CAAA,CAAzB;EAEA,OACE8B,CAAA,CAAAC,aAAA;IACEC,SAAA,EAAWC,CAAA,CAAGC,CAAA,CAAOC,SAAA,EAhBhBnC,CAAA,CAATgC,SAAA;IAiBiB,eAAAH,CAAA,IAAcO,CAAA,CAAUC,CAAA,CAAuBC,YAAA,EAAcX,CAAA;EAAA,GAEzEvB,CAAA,IAGC0B,CAAA,CAAAC,aAAA,CAACQ,CAAA,EAAK;IAAAC,KAAA,EAAM;IAAQC,GAAA,EAAI;IAAQT,SAAA,EAAW1B;EAAA,GACxCO,CAAA,IACCiB,CAAA,CAACC,aAAA,CAAAW,CAAA,EACC;IAAAV,SAAA,EAAWC,CAAA,CAAGC,CAAA,CAAOpB,IAAA,EAAMQ,CAAA;IAC3BR,IAAA,EAAMD,CAAA;IACN8B,QAAA,EAAS;IACTvB,QAAA,EAAUC,CAAA;IACVuB,gBAAA;EAAA,IAGJd,CAAA,CAAAC,aAAA,CAACc,CAAA,EAAO;IAACjB,EAAA,EAAID,CAAA;IAAImB,QAAA,EAAU;EAAA,GACxB5C,CAAA,IAINQ,CAAA,IACCoB,CAAA,CAAAC,aAAA,CAACgB,CAAA,EAAI;IAACC,IAAA,EAAK;IAAQF,QAAA,EAAU;IAAGd,SAAA,EAAWC,CAAA,CAAGC,CAAA,CAAOzB,WAAA,EAAaE,CAAA;EAAA,GAC/DD,CAAA,GAILoB,CAAA,CAAAC,aAAA;IAAKC,SAAA,EAAWC,CAAA,CAAGC,CAAA,CAAOe,WAAA;EAAA,GACxBnB,CAAA,CAAAC,aAAA,CAACmB,CAAA,EAAU;IACTC,GAAA,EAAI;IACJC,OAAA,EAASnC,CAAA;IACToC,SAAA,EAAW3B,CAAA;IACXZ,IAAA,EAAMwC,CAAA;IACNC,IAAA,EAAK;IACLC,IAAA,EAAK;EAAA,IAKf;AAAA;AAEAC,MAAA,CAAOC,MAAA,CAAO1D,CAAA,EAAmB;EAC/B2D,WAAA,EAAa;AAAA;AAAA,SAAA3D,CAAA,IAAA4D,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
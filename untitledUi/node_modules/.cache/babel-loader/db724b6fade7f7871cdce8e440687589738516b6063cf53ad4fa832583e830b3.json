{"ast":null,"code":"import { slicedToArray as e, defineProperty as t } from \"../../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport r, { forwardRef as o, useRef as s, useState as a, useCallback as l, useMemo as n } from \"react\";\nimport i from \"classnames\";\nimport { withStaticProps as m } from \"../../../types/withStaticProps.js\";\nimport \"../../../utils/colors-vars-map.js\";\nimport { getTableRowLayoutStyles as u } from \"./tableHelpers.js\";\nimport { getTestId as c } from \"../../../tests/testIds.js\";\nimport { ComponentDefaultTestId as f } from \"../../../tests/constants.js\";\nimport { RowSizes as d, RowHeights as p } from \"./TableConsts.js\";\nimport b from \"./Table.module.scss.js\";\nimport { TableProvider as v } from \"../context/TableContext/TableContext.js\";\nimport { TableRowMenuProvider as j } from \"../context/TableRowMenuContext/TableRowMenuContext.js\";\nimport R from \"../../../hooks/useMergeRef.js\";\nvar S = m(o(function (o, m) {\n  var d = o.id,\n    S = o.className,\n    T = o[\"data-testid\"],\n    w = o.columns,\n    x = o.errorState,\n    y = o.emptyState,\n    z = o.dataState,\n    g = o.style,\n    h = o.children,\n    C = o.size,\n    M = void 0 === C ? \"medium\" : C,\n    E = o.withoutBorder,\n    H = s(null),\n    A = R(m, H),\n    B = a(!1),\n    I = e(B, 2),\n    O = I[0],\n    P = I[1],\n    k = a(null),\n    L = e(k, 2),\n    N = L[0],\n    V = L[1],\n    _ = l(function () {\n      P(!1), V(null);\n    }, []),\n    q = a(!1),\n    D = e(q, 2),\n    F = D[0],\n    G = D[1],\n    J = l(function () {\n      G(!0);\n    }, []),\n    K = a(!1),\n    Q = e(K, 2),\n    U = Q[0],\n    W = Q[1],\n    X = l(function (e) {\n      if (_(), !F) {\n        var t = e.target.scrollLeft > 0;\n        W(function (e) {\n          return e !== t ? t : e;\n        });\n      }\n    }, [_, F]),\n    Y = u(w),\n    Z = Object.assign({\n      \"--table-grid-template-columns\": Y.gridTemplateColumns,\n      \"--table-row-size\": \"\".concat(p[M], \"px\")\n    }, g),\n    $ = n(function () {\n      return {\n        columns: w,\n        dataState: z,\n        emptyState: y,\n        errorState: x,\n        size: M,\n        tableRootRef: H,\n        isVirtualized: F,\n        markTableAsVirtualized: J,\n        isScrolled: U,\n        setIsScrolled: function (e) {\n          return W(e);\n        }\n      };\n    }, [w, z, y, x, F, J, U, M]),\n    ee = n(function () {\n      return {\n        tableRootRef: H,\n        hoveredRowRef: N,\n        isMenuOpen: O,\n        resetHoveredRow: _,\n        setHoveredRowRef: function (e) {\n          return V(e);\n        },\n        setIsMenuOpen: function (e) {\n          return P(e);\n        }\n      };\n    }, [N, O, _, V]);\n  return r.createElement(v, {\n    value: $\n  }, r.createElement(j, {\n    value: ee\n  }, r.createElement(\"div\", {\n    ref: A,\n    id: d,\n    className: i(b.table, t(t(t({}, b.border, !E), b.virtualized, F), b.hasScroll, U), S),\n    \"data-testid\": T || c(f.TABLE, d),\n    role: \"table\",\n    style: Z,\n    onScroll: X\n  }, h)));\n}), {\n  sizes: d\n});\nexport { S as default };","map":{"version":3,"names":["S","m","o","d","id","className","T","w","columns","x","errorState","y","emptyState","z","dataState","g","style","h","children","C","size","M","E","withoutBorder","H","s","A","R","B","a","I","e","O","P","k","L","N","V","_","l","q","D","F","G","J","K","Q","U","W","X","t","target","scrollLeft","Y","u","Z","Object","assign","gridTemplateColumns","concat","p","$","n","tableRootRef","isVirtualized","markTableAsVirtualized","isScrolled","setIsScrolled","ee","hoveredRowRef","isMenuOpen","resetHoveredRow","setHoveredRowRef","setIsMenuOpen","r","createElement","v","value","j","ref","i","b","table","border","virtualized","hasScroll","c","f","TABLE","role","onScroll","sizes","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/Table/Table/Table.tsx"],"sourcesContent":["import React, { forwardRef, ReactElement, UIEventHandler, useCallback, useMemo, useRef, useState } from \"react\";\nimport cx from \"classnames\";\nimport { SubIcon, VibeComponentProps, withStaticProps } from \"../../../types\";\nimport { TableHeaderProps } from \"../TableHeader/TableHeader\";\nimport { TableBodyProps } from \"../TableBody/TableBody\";\nimport { getTableRowLayoutStyles } from \"./tableHelpers\";\nimport { getTestId } from \"../../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../../tests/constants\";\nimport { RowHeights, RowSizes as RowSizesEnum } from \"./TableConsts\";\nimport { RowSizes } from \"./Table.types\";\nimport styles from \"./Table.module.scss\";\nimport { TableProvider } from \"../context/TableContext/TableContext\";\nimport { TableRowMenuProvider } from \"../context/TableRowMenuContext/TableRowMenuContext\";\nimport useMergeRef from \"../../../hooks/useMergeRef\";\nimport { TableProviderValue } from \"../context/TableContext/TableContext.types\";\nimport { TableRowMenuProviderValue } from \"../context/TableRowMenuContext/TableRowMenuContext.types\";\n\nexport type TableLoadingStateType = \"long-text\" | \"medium-text\" | \"circle\" | \"rectangle\";\n\ntype Width = number | `${number}%` | `${number}px` | `${number}fr`;\n\nexport interface TableColumn {\n  /**\n   * Unique identifier for the column.\n   */\n  id: string;\n  /**\n   * Column title displayed in the header.\n   */\n  title: string;\n  /**\n   * Additional information displayed as a tooltip.\n   */\n  infoContent?: string;\n  /**\n   * Column width configuration.\n   */\n  width?: Width | { min: Width; max: Width };\n  /**\n   * Icon displayed next to the column title.\n   */\n  icon?: SubIcon;\n  /**\n   * Loading state type for the column when data is being fetched.\n   */\n  loadingStateType?: TableLoadingStateType;\n}\n\nexport interface TableProps extends VibeComponentProps {\n  /**\n   * Defines the columns of the table.\n   */\n  columns: TableColumn[];\n  /**\n   * State of the data being displayed (loading or error).\n   */\n  dataState?: {\n    isLoading?: boolean;\n    isError?: boolean;\n  };\n  /**\n   * React element displayed when there is an error state.\n   */\n  errorState: ReactElement;\n  /**\n   * React element displayed when there is no data.\n   */\n  emptyState: ReactElement;\n  /**\n   * Custom styles for the table.\n   */\n  style?: React.CSSProperties;\n  /**\n   * The child components inside the table, such as `<TableHeader />` and `<TableBody />`.\n   */\n  children?:\n    | ReactElement<TableHeaderProps>\n    | ReactElement<TableBodyProps>\n    | Array<ReactElement<TableHeaderProps> | ReactElement<TableBodyProps>>;\n  /**\n   * The row size of the table.\n   */\n  size?: RowSizes;\n  /**\n   * If true, removes the table's outer border.\n   */\n  withoutBorder?: boolean;\n}\n\nconst Table = forwardRef(\n  (\n    {\n      id,\n      className,\n      \"data-testid\": dataTestId,\n      columns,\n      errorState,\n      emptyState,\n      dataState,\n      style,\n      children,\n      size = \"medium\",\n      withoutBorder\n    }: TableProps,\n    ref: React.ForwardedRef<HTMLDivElement>\n  ) => {\n    const tableRootRef = useRef<HTMLDivElement>(null);\n    const mergedRef = useMergeRef(ref, tableRootRef);\n\n    const [isMenuOpen, setIsMenuOpen] = useState<boolean>(false);\n    const [hoveredRowRef, setHoveredRowRef] = useState<React.RefObject<HTMLDivElement>>(null);\n\n    const resetHoveredRow = useCallback(() => {\n      setIsMenuOpen(false);\n      setHoveredRowRef(null);\n    }, []);\n\n    const [isVirtualized, setIsVirtualized] = useState<boolean>(false);\n    const markTableAsVirtualized = useCallback(() => {\n      setIsVirtualized(true);\n    }, []);\n\n    const [isScrolled, setIsScrolled] = useState<boolean>(false);\n\n    const onScroll = useCallback<UIEventHandler<HTMLDivElement>>(\n      e => {\n        resetHoveredRow();\n        if (!isVirtualized) {\n          const newLeft = (e.target as HTMLDivElement).scrollLeft;\n          const hasScroll = newLeft > 0;\n          setIsScrolled(prevScroll => (prevScroll !== hasScroll ? hasScroll : prevScroll));\n        }\n      },\n      [resetHoveredRow, isVirtualized]\n    );\n\n    const { gridTemplateColumns } = getTableRowLayoutStyles(columns);\n\n    /**\n     * The `--table-grid-template-columns` and `--table-row-size` variables will be available under each <Table /> scope\n     * and will be consumed in the stylesheets of its children (<TableHeader />, <TableRow />, <TableHeaderCell />)\n     */\n    const calculatedStyle = {\n      \"--table-grid-template-columns\": gridTemplateColumns,\n      \"--table-row-size\": `${RowHeights[size]}px`,\n      ...style\n    } as React.CSSProperties;\n\n    const tableProviderValue = useMemo<TableProviderValue>(\n      () => ({\n        columns,\n        dataState,\n        emptyState,\n        errorState,\n        size,\n        tableRootRef,\n        isVirtualized,\n        markTableAsVirtualized,\n        isScrolled,\n        setIsScrolled: (scrollLeft: boolean) => setIsScrolled(scrollLeft)\n      }),\n      [columns, dataState, emptyState, errorState, isVirtualized, markTableAsVirtualized, isScrolled, size]\n    );\n\n    const tableRowMenuProviderValue = useMemo<TableRowMenuProviderValue>(\n      () => ({\n        tableRootRef,\n        hoveredRowRef,\n        isMenuOpen,\n        resetHoveredRow,\n        setHoveredRowRef: (rowRef: React.RefObject<HTMLDivElement>) => setHoveredRowRef(rowRef),\n        setIsMenuOpen: (isOpen: boolean) => setIsMenuOpen(isOpen)\n      }),\n      [hoveredRowRef, isMenuOpen, resetHoveredRow, setHoveredRowRef]\n    );\n\n    return (\n      <TableProvider value={tableProviderValue}>\n        <TableRowMenuProvider value={tableRowMenuProviderValue}>\n          <div\n            ref={mergedRef}\n            id={id}\n            className={cx(\n              styles.table,\n              {\n                [styles.border]: !withoutBorder,\n                [styles.virtualized]: isVirtualized,\n                [styles.hasScroll]: isScrolled\n              },\n              className\n            )}\n            data-testid={dataTestId || getTestId(ComponentDefaultTestId.TABLE, id)}\n            role=\"table\"\n            style={calculatedStyle}\n            onScroll={onScroll}\n          >\n            {children}\n          </div>\n        </TableRowMenuProvider>\n      </TableProvider>\n    );\n  }\n);\n\ninterface TableStaticProps {\n  sizes: typeof RowSizesEnum;\n}\n\nexport default withStaticProps<TableProps, TableStaticProps>(Table, { sizes: RowSizesEnum });\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
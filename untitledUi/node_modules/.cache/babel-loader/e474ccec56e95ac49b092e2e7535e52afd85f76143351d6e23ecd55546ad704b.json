{"ast":null,"code":"import e from \"classnames\";\nimport t, { useRef as o } from \"react\";\nimport { getTestId as s, ComponentDefaultTestId as n } from \"../../../tests/testIds.js\";\nimport i from \"../../Button/Button.js\";\nimport r from \"../../Tooltip/Tooltip.js\";\nimport l from \"../../../hooks/useMergeRef.js\";\nimport m from \"../MenuItem/hooks/useMenuItemMouseEvents.js\";\nimport u from \"../MenuItem/hooks/useMenuItemKeyboardEvents.js\";\nimport { withStaticPropsWithoutForwardRef as a } from \"../../../types/withStaticProps.js\";\nimport \"../../../utils/colors-vars-map.js\";\nimport d from \"../../Text/Text.js\";\nimport c from \"./MenuItemButton.module.scss.js\";\nimport { TooltipPositions as p } from \"../../Tooltip/TooltipConstants.js\";\nvar I = function (a) {\n  var p = a.className,\n    I = a.kind,\n    v = void 0 === I ? \"primary\" : I,\n    f = a.leftIcon,\n    M = void 0 === f ? null : f,\n    h = a.rightIcon,\n    b = void 0 === h ? null : h,\n    x = a.disabled,\n    j = void 0 !== x && x,\n    k = a.disableReason,\n    E = a.index,\n    C = a.activeItemIndex,\n    S = void 0 === C ? -1 : C,\n    y = a.onClick,\n    T = a.tooltipPosition,\n    B = void 0 === T ? \"right\" : T,\n    O = a.tooltipShowDelay,\n    N = void 0 === O ? 300 : O,\n    g = a.children,\n    A = a.resetOpenSubMenuIndex,\n    w = a.setSubMenuIsOpenByIndex,\n    D = a.setActiveItemIndex,\n    R = a.menuRef,\n    P = a.closeMenu,\n    U = a.useDocumentEventListeners,\n    L = a.id,\n    _ = a[\"data-testid\"],\n    z = o(null),\n    K = o(null),\n    q = l(z, K),\n    F = j && k,\n    G = k,\n    H = S === E,\n    J = m({\n      ref: z,\n      resetOpenSubMenuIndex: A,\n      setSubMenuIsOpenByIndex: w,\n      isActive: H,\n      setActiveItemIndex: D,\n      index: E,\n      hasChildren: !1\n    }),\n    Q = u({\n      onClick: y,\n      disabled: j,\n      isActive: H,\n      index: E,\n      setActiveItemIndex: D,\n      hasChildren: !1,\n      shouldShowSubMenu: !1,\n      setSubMenuIsOpenByIndex: w,\n      menuRef: R,\n      isMouseEnter: J,\n      closeMenu: P,\n      useDocumentEventListeners: U\n    }).onClickCallback;\n  return t.createElement(r, {\n    content: F ? G : null,\n    position: B,\n    showDelay: N\n  }, t.createElement(d, {\n    type: \"text2\",\n    element: \"li\",\n    \"data-testid\": _ || s(n.MENU_ITEM_BUTTON, L),\n    id: L,\n    className: e(c.itemButton, p),\n    ref: q,\n    role: \"menuitem\",\n    \"aria-current\": H\n  }, t.createElement(i, {\n    className: c.buttonComponent,\n    active: H,\n    disabled: j,\n    leftIcon: M,\n    rightIcon: b,\n    onClick: Q,\n    kind: v,\n    size: \"small\",\n    blurOnMouseUp: !1\n  }, t.createElement(\"div\", {\n    className: c.content\n  }, g))));\n};\nObject.assign(I, {\n  isSelectable: !0,\n  isMenuChild: !0\n});\nvar v = a(I, {\n  kinds: i.kinds,\n  tooltipPositions: p\n});\nexport { v as default };","map":{"version":3,"names":["I","MenuItemButton","a","p","className","kind","v","f","leftIcon","M","h","rightIcon","b","x","disabled","j","k","disableReason","E","index","C","activeItemIndex","S","y","onClick","T","tooltipPosition","B","O","tooltipShowDelay","N","g","children","A","resetOpenSubMenuIndex","w","setSubMenuIsOpenByIndex","D","setActiveItemIndex","R","menuRef","P","closeMenu","U","useDocumentEventListeners","L","id","_","z","o","K","q","l","F","G","H","J","m","ref","isActive","hasChildren","Q","u","shouldShowSubMenu","isMouseEnter","onClickCallback","t","createElement","r","content","position","showDelay","d","type","element","s","n","MENU_ITEM_BUTTON","e","c","itemButton","role","i","buttonComponent","active","size","blurOnMouseUp","Object","assign","isSelectable","isMenuChild","kinds","tooltipPositions","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/Menu/MenuItemButton/MenuItemButton.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, { useRef } from \"react\";\nimport { ComponentDefaultTestId, getTestId } from \"../../../tests/test-ids-utils\";\nimport Button from \"../../Button/Button\";\nimport Tooltip from \"../../Tooltip/Tooltip\";\nimport { ButtonType } from \"../../Button\";\nimport useMergeRef from \"../../../hooks/useMergeRef\";\nimport useMenuItemMouseEvents from \"../MenuItem/hooks/useMenuItemMouseEvents\";\nimport useMenuItemKeyboardEvents from \"../MenuItem/hooks/useMenuItemKeyboardEvents\";\nimport { SubIcon, VibeComponentProps, ElementContent, withStaticPropsWithoutForwardRef } from \"../../../types\";\nimport Text from \"../../Text/Text\";\nimport styles from \"./MenuItemButton.module.scss\";\nimport { TooltipPositions } from \"../../Tooltip\";\nimport { TooltipPositions as TooltipPositionsEnum } from \"../../Tooltip/TooltipConstants\";\n\nexport interface MenuItemButtonProps extends VibeComponentProps {\n  /**\n   * The style variant of the button.\n   */\n  kind?: ButtonType;\n  /**\n   * Icon displayed on the left side of the button.\n   */\n  leftIcon?: SubIcon;\n  /**\n   * Icon displayed on the right side of the button.\n   */\n  rightIcon?: SubIcon;\n  /**\n   * The index of the menu item in the menu.\n   */\n  index?: number;\n  /**\n   * The index of the currently active menu item.\n   */\n  activeItemIndex?: number;\n  /**\n   * If true, the button is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * The reason why the button is disabled, displayed as a tooltip.\n   */\n  disableReason?: string;\n  /**\n   * Callback fired when the button is clicked.\n   */\n  onClick?: (event: React.MouseEvent | React.KeyboardEvent) => void;\n  /**\n   * The position of the tooltip.\n   */\n  tooltipPosition?: TooltipPositions;\n  /**\n   * The delay in milliseconds before the tooltip appears.\n   */\n  tooltipShowDelay?: number;\n  /**\n   * Callback to reset the open submenu index.\n   */\n  resetOpenSubMenuIndex?: () => void;\n  /**\n   * Callback to open or close a submenu by index.\n   */\n  setSubMenuIsOpenByIndex?: (index: number, isOpen: boolean) => void;\n  /**\n   * Callback to set the active item index.\n   */\n  setActiveItemIndex?: (index: number) => void;\n  /**\n   * Reference to the menu container.\n   */\n  menuRef?: React.RefObject<HTMLElement>;\n  /**\n   * Function to close the menu.\n   */\n  closeMenu?: () => void;\n  /**\n   * If true, event listeners are added at the document level.\n   */\n  useDocumentEventListeners?: boolean;\n  /**\n   * The content of the button.\n   */\n  children?: ElementContent | ElementContent[];\n}\n\nconst MenuItemButton = ({\n  className,\n  kind = \"primary\",\n  leftIcon = null,\n  rightIcon = null,\n  disabled = false,\n  disableReason,\n  index,\n  activeItemIndex = -1,\n  onClick,\n  tooltipPosition = \"right\",\n  tooltipShowDelay = 300,\n  children,\n  resetOpenSubMenuIndex,\n  setSubMenuIsOpenByIndex,\n  setActiveItemIndex,\n  menuRef,\n  closeMenu,\n  useDocumentEventListeners,\n  id,\n  \"data-testid\": dataTestId\n}: MenuItemButtonProps) => {\n  const ref = useRef(null);\n  const referenceElementRef = useRef(null);\n  const mergedRef = useMergeRef(ref, referenceElementRef);\n\n  const shouldShowTooltip = disabled && disableReason;\n  const tooltipContent = disableReason;\n\n  const isActive = activeItemIndex === index;\n\n  const isMouseEnter = useMenuItemMouseEvents({\n    ref,\n    resetOpenSubMenuIndex,\n    setSubMenuIsOpenByIndex,\n    isActive,\n    setActiveItemIndex,\n    index,\n    hasChildren: false\n  });\n\n  const { onClickCallback } = useMenuItemKeyboardEvents({\n    onClick,\n    disabled,\n    isActive,\n    index,\n    setActiveItemIndex,\n    hasChildren: false,\n    shouldShowSubMenu: false,\n    setSubMenuIsOpenByIndex,\n    menuRef,\n    isMouseEnter,\n    closeMenu,\n    useDocumentEventListeners\n  });\n\n  return (\n    <Tooltip\n      content={shouldShowTooltip ? tooltipContent : null}\n      position={tooltipPosition}\n      showDelay={tooltipShowDelay}\n    >\n      <Text\n        type=\"text2\"\n        element=\"li\"\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.MENU_ITEM_BUTTON, id)}\n        id={id}\n        className={cx(styles.itemButton, className)}\n        ref={mergedRef}\n        role=\"menuitem\"\n        aria-current={isActive}\n      >\n        <Button\n          className={styles.buttonComponent}\n          active={isActive}\n          disabled={disabled}\n          leftIcon={leftIcon}\n          rightIcon={rightIcon}\n          onClick={onClickCallback}\n          kind={kind}\n          size=\"small\"\n          blurOnMouseUp={false}\n        >\n          <div className={styles.content}>{children}</div>\n        </Button>\n      </Text>\n    </Tooltip>\n  );\n};\n\nObject.assign(MenuItemButton, {\n  isSelectable: true,\n  isMenuChild: true\n});\n\ninterface MenuItemButtonStaticProps {\n  kinds: typeof Button.kinds;\n  tooltipPositions: typeof TooltipPositionsEnum;\n}\n\nexport default withStaticPropsWithoutForwardRef<MenuItemButtonProps, MenuItemButtonStaticProps>(MenuItemButton, {\n  kinds: Button.kinds,\n  tooltipPositions: TooltipPositionsEnum\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
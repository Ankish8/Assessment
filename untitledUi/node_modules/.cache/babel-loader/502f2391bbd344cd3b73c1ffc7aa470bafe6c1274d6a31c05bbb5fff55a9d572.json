{"ast":null,"code":"import { defineProperty as t } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { __rest as e } from \"../../../_virtual/_tslib.js\";\nimport { camelCase as o } from \"lodash-es\";\nimport { getTestId as r, ComponentDefaultTestId as i } from \"../../tests/testIds.js\";\nimport n from \"classnames\";\nimport s, { useRef as a, useMemo as l, useCallback as c, useEffect as m } from \"react\";\nimport { CSSTransition as u } from \"react-transition-group\";\nimport p from \"../Text/Text.js\";\nimport d from \"../Loader/Loader.js\";\nimport f from \"../Flex/Flex.js\";\nimport v from \"./ToastLink/ToastLink.js\";\nimport T from \"./ToastButton/ToastButton.js\";\nimport { ToastType as j, ToastActionType as y } from \"./ToastConstants.js\";\nimport { getIcon as h } from \"./ToastHelpers.js\";\nimport { NOOP as g } from \"../../utils/function-utils.js\";\nimport { getStyle as x } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport { withStaticPropsWithoutForwardRef as E } from \"../../types/withStaticProps.js\";\nimport \"../../utils/colors-vars-map.js\";\nimport N from \"./Toast.module.scss.js\";\nimport C from \"../IconButton/IconButton.js\";\nimport b from \"../../hooks/usePrevious/index.js\";\nimport k from \"../../../icons/dist/react/CloseSmall.js\";\nvar B = E(function (j) {\n  var y = j.open,\n    E = void 0 !== y && y,\n    B = j.loading,\n    L = void 0 !== B && B,\n    O = j.autoHideDuration,\n    A = void 0 === O ? null : O,\n    w = j.type,\n    S = void 0 === w ? \"normal\" : w,\n    _ = j.icon,\n    H = j.hideIcon,\n    I = void 0 !== H && H,\n    P = j.action,\n    z = j.actions,\n    F = j.children,\n    D = j.closeable,\n    M = void 0 === D || D,\n    U = j.onClose,\n    q = void 0 === U ? g : U,\n    G = j.className,\n    J = j.id,\n    K = j.closeButtonAriaLabel,\n    Q = void 0 === K ? \"Close\" : K,\n    R = j[\"data-testid\"],\n    V = a(null),\n    W = b(null == z ? void 0 : z.length),\n    X = l(function () {\n      return z ? z.filter(function (t) {\n        return \"link\" === t.type;\n      }).map(function (t) {\n        var o = e(t, [\"type\"]);\n        return s.createElement(v, Object.assign({\n          key: o.href,\n          className: N.actionLink\n        }, o));\n      }) : null;\n    }, [z]),\n    Y = l(function () {\n      return void 0 !== W && (null == z ? void 0 : z.length) !== W;\n    }, [z, W]),\n    Z = l(function () {\n      return z ? z.filter(function (t) {\n        return \"button\" === t.type;\n      }).map(function (o, r) {\n        var i = o.content,\n          a = e(o, [\"type\", \"content\"]);\n        return s.createElement(T, Object.assign({\n          key: \"alert-button-\".concat(r),\n          className: n(N.actionButton, t({}, N.withTransition, Y))\n        }, a), i);\n      }) : null;\n    }, [z, Y]),\n    $ = l(function () {\n      return n(N.toast, x(N, o(\"type-\" + S)), G);\n    }, [S, G]),\n    tt = c(function () {\n      q && q();\n    }, [q]),\n    et = a(),\n    ot = c(function (t) {\n      q && null != t && (clearTimeout(et.current), et.current = setTimeout(function () {\n        tt();\n      }, t));\n    }, [tt, q]);\n  m(function () {\n    return E && A > 0 && ot(A), function () {\n      clearTimeout(et.current);\n    };\n  }, [E, A, ot]);\n  var rt = !I && h(S, _),\n    it = c(function (t) {\n      var e = t.style.width;\n      t.style.width = \"auto\";\n      var o = getComputedStyle(t).width;\n      t.style.width = e, t.style.width = o;\n    }, []);\n  return m(function () {\n    V.current && it(V.current);\n  }, [F, it]), s.createElement(u, {\n    in: E,\n    classNames: {\n      enterActive: N.enterActive,\n      exitActive: N.exitActive\n    },\n    timeout: 400,\n    unmountOnExit: !0\n  }, s.createElement(p, {\n    id: J,\n    \"data-testid\": R || r(i.TOAST, J),\n    type: \"text2\",\n    element: \"div\",\n    color: \"fixedLight\",\n    className: $,\n    role: \"alert\",\n    \"aria-live\": \"polite\",\n    ref: V\n  }, rt && s.createElement(\"div\", {\n    className: n(N.icon)\n  }, rt), s.createElement(f, {\n    align: \"center\",\n    gap: \"large\",\n    className: N.content\n  }, s.createElement(f, {\n    gap: \"medium\",\n    \"data-testid\": r(i.TOAST_CONTENT),\n    className: N.textContent\n  }, s.createElement(\"span\", null, F), X), (Z || P) && (Z || P), L && s.createElement(d, {\n    size: \"xs\"\n  })), M && s.createElement(C, {\n    className: n(N.closeButton),\n    onClick: tt,\n    size: \"small\",\n    kind: \"tertiary\",\n    color: \"fixed-light\",\n    ariaLabel: Q,\n    \"data-testid\": r(i.TOAST_CLOSE_BUTTON),\n    icon: k,\n    hideTooltip: !0\n  })));\n}, {\n  types: j,\n  actionTypes: y\n});\nexport { B as default };","map":{"version":3,"names":["B","E","j","y","open","loading","L","O","autoHideDuration","A","w","type","S","_","icon","H","hideIcon","I","P","action","z","actions","F","children","D","closeable","M","U","onClose","q","g","G","className","J","id","K","closeButtonAriaLabel","Q","R","V","a","W","b","length","X","l","filter","t","map","o","e","s","createElement","v","Object","assign","key","href","N","actionLink","Y","Z","r","i","content","T","concat","n","actionButton","withTransition","$","toast","x","tt","c","et","ot","clearTimeout","current","setTimeout","m","rt","h","it","style","width","getComputedStyle","u","in","classNames","enterActive","exitActive","timeout","unmountOnExit","p","TOAST","element","color","role","ref","f","align","gap","TOAST_CONTENT","textContent","d","size","C","closeButton","onClick","kind","ariaLabel","TOAST_CLOSE_BUTTON","k","hideTooltip","types","actionTypes","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/Toast/Toast.tsx"],"sourcesContent":["import { camelCase } from \"lodash-es\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport cx from \"classnames\";\nimport React, { ReactElement, useCallback, useEffect, useMemo, useRef } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { IconSubComponentProps } from \"../Icon/Icon\";\nimport Text from \"../Text/Text\";\nimport Loader from \"../Loader/Loader\";\nimport Flex from \"../Flex/Flex\";\nimport { CloseSmall } from \"@vibe/icons\";\nimport ToastLink from \"./ToastLink/ToastLink\";\nimport ToastButton from \"./ToastButton/ToastButton\";\nimport { ToastActionType as ToastActionTypeEnum, ToastType as ToastTypeEnum } from \"./ToastConstants\";\nimport { ToastType, ToastAction } from \"./Toast.types\";\nimport { getIcon } from \"./ToastHelpers\";\nimport { NOOP } from \"../../utils/function-utils\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport { VibeComponentProps, withStaticPropsWithoutForwardRef } from \"../../types\";\nimport styles from \"./Toast.module.scss\";\nimport IconButton from \"../IconButton/IconButton\";\nimport usePrevious from \"../../hooks/usePrevious\";\n\nexport interface ToastProps extends VibeComponentProps {\n  /**\n   * The actions available in the toast.\n   */\n  actions?: ToastAction[];\n  /**\n   * If true, the toast is open (visible).\n   */\n  open?: boolean;\n  /**\n   * If true, displays a loading indicator inside the toast.\n   */\n  loading?: boolean;\n  /**\n   * The type of toast.\n   */\n  type?: ToastType;\n  /**\n   * The icon displayed in the toast.\n   */\n  icon?: string | React.FC<IconSubComponentProps> | null;\n  /**\n   * If true, hides the toast icon.\n   */\n  hideIcon?: boolean;\n  /**\n   * The action element displayed in the toast.\n   */\n  action?: JSX.Element;\n  /**\n   * If false, hides the close button.\n   */\n  closeable?: boolean;\n  /**\n   * Callback fired when the toast is closed.\n   */\n  onClose?: () => void;\n  /**\n   * The number of milliseconds before the toast automatically closes.\n   * (0 or null disables auto-close behavior).\n   */\n  autoHideDuration?: number;\n  /**\n   * The content displayed inside the toast.\n   */\n  children?: ReactElement | ReactElement[] | string;\n  /**\n   * The aria-label for the close button.\n   */\n  closeButtonAriaLabel?: string;\n}\n\nconst Toast = ({\n  open = false,\n  loading = false,\n  autoHideDuration = null,\n  type = \"normal\",\n  icon,\n  hideIcon = false,\n  action: deprecatedAction,\n  actions,\n  children,\n  closeable = true,\n  onClose = NOOP,\n  className,\n  id,\n  closeButtonAriaLabel = \"Close\",\n  \"data-testid\": dataTestId\n}: ToastProps) => {\n  const ref = useRef(null);\n  const prevActions = usePrevious(actions?.length);\n  const toastLinks = useMemo(() => {\n    return actions\n      ? actions\n          .filter(action => action.type === \"link\")\n          .map(({ type: _type, ...otherProps }) => (\n            <ToastLink key={otherProps.href} className={styles.actionLink} {...otherProps} />\n          ))\n      : null;\n  }, [actions]);\n\n  const shouldShowButtonTransition = useMemo(() => {\n    return prevActions !== undefined && actions?.length !== prevActions;\n  }, [actions, prevActions]);\n\n  const toastButtons: JSX.Element[] | null = useMemo(() => {\n    return actions\n      ? actions\n          .filter(action => action.type === \"button\")\n          .map(({ type: _type, content, ...otherProps }, index) => (\n            <ToastButton\n              key={`alert-button-${index}`}\n              className={cx(styles.actionButton, { [styles.withTransition]: shouldShowButtonTransition })}\n              {...otherProps}\n            >\n              {content}\n            </ToastButton>\n          ))\n      : null;\n  }, [actions, shouldShowButtonTransition]);\n\n  const classNames = useMemo(\n    () => cx(styles.toast, getStyle(styles, camelCase(\"type-\" + type)), className),\n    [type, className]\n  );\n\n  const handleClose = useCallback(() => {\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  /* Timer */\n  const timerAutoHide = useRef<NodeJS.Timeout>();\n  const setAutoHideTimer = useCallback(\n    (duration: number) => {\n      if (!onClose || duration == null) {\n        return;\n      }\n\n      clearTimeout(timerAutoHide.current);\n      timerAutoHide.current = setTimeout(() => {\n        handleClose();\n      }, duration);\n    },\n    [handleClose, onClose]\n  );\n\n  useEffect(() => {\n    if (open && autoHideDuration > 0) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return () => {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]);\n\n  const iconElement = !hideIcon && getIcon(type, icon);\n\n  // https://n12v.com/css-transition-to-from-auto/\n  const recalculateElementWidth = useCallback((element: HTMLElement) => {\n    const prevWidth = element.style.width;\n    element.style.width = \"auto\";\n    const endWidth = getComputedStyle(element).width;\n    element.style.width = prevWidth;\n    element.offsetWidth; // force repaint\n    element.style.width = endWidth;\n  }, []);\n\n  useEffect(() => {\n    if (ref.current) {\n      recalculateElementWidth(ref.current);\n    }\n  }, [children, recalculateElementWidth]);\n\n  return (\n    <CSSTransition\n      in={open}\n      classNames={{ enterActive: styles.enterActive, exitActive: styles.exitActive }}\n      timeout={400}\n      unmountOnExit\n    >\n      <Text\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.TOAST, id)}\n        type=\"text2\"\n        element=\"div\"\n        color=\"fixedLight\"\n        className={classNames}\n        role=\"alert\"\n        aria-live=\"polite\"\n        ref={ref}\n      >\n        {iconElement && <div className={cx(styles.icon)}>{iconElement}</div>}\n        <Flex align=\"center\" gap=\"large\" className={styles.content}>\n          <Flex\n            gap=\"medium\"\n            data-testid={getTestId(ComponentDefaultTestId.TOAST_CONTENT)}\n            className={styles.textContent}\n          >\n            <span>{children}</span>\n            {toastLinks}\n          </Flex>\n          {(toastButtons || deprecatedAction) && (toastButtons || deprecatedAction)}\n          {loading && <Loader size=\"xs\" />}\n        </Flex>\n        {closeable && (\n          <IconButton\n            className={cx(styles.closeButton)}\n            onClick={handleClose}\n            size=\"small\"\n            kind=\"tertiary\"\n            color=\"fixed-light\"\n            ariaLabel={closeButtonAriaLabel}\n            data-testid={getTestId(ComponentDefaultTestId.TOAST_CLOSE_BUTTON)}\n            icon={CloseSmall}\n            hideTooltip\n          />\n        )}\n      </Text>\n    </CSSTransition>\n  );\n};\n\ninterface ToastStaticProps {\n  types: typeof ToastTypeEnum;\n  actionTypes: typeof ToastActionTypeEnum;\n}\n\nexport default withStaticPropsWithoutForwardRef<ToastProps, ToastStaticProps>(Toast, {\n  types: ToastTypeEnum,\n  actionTypes: ToastActionTypeEnum\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
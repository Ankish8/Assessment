{"ast":null,"code":"import { defineProperty as e } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { isNil as t, camelCase as o } from \"lodash-es\";\nimport { getStyle as a } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport { getTestId as r, ComponentDefaultTestId as s } from \"../../tests/testIds.js\";\nimport i from \"classnames\";\nimport l, { useMemo as n, useCallback as c } from \"react\";\nimport { ElementAllowedColor as m } from \"../../utils/colors-vars-map.js\";\nimport { getElementColor as d } from \"../../types/Colors.js\";\nimport { AvatarType as p, AvatarSize as u } from \"./AvatarConstants.js\";\nimport b from \"./AvatarBadge.js\";\nimport g from \"./AvatarContent.js\";\nimport f from \"../Tooltip/Tooltip.js\";\nimport v from \"../Clickable/ClickableWrapper.js\";\nimport { withStaticPropsWithoutForwardRef as h } from \"../../types/withStaticProps.js\";\nimport j from \"./Avatar.module.scss.js\";\nvar C = h(function (m) {\n  var p = m.id,\n    u = m.type,\n    h = void 0 === u ? \"text\" : u,\n    C = m.className,\n    k = m.avatarContentWrapperClassName,\n    E = m.textClassName,\n    y = void 0 === E ? \"\" : E,\n    N = m.size,\n    B = void 0 === N ? \"large\" : N,\n    x = m.src,\n    P = m.icon,\n    z = m.text,\n    T = m.tooltipProps,\n    A = m.ariaLabel,\n    O = m.withoutTooltip,\n    w = void 0 !== O && O,\n    L = m.role,\n    R = m.backgroundColor,\n    I = void 0 === R ? \"chili-blue\" : R,\n    H = m.square,\n    W = m.disabled,\n    q = m.tabIndex,\n    S = m.ariaHidden,\n    _ = void 0 !== S && S,\n    D = m.topLeftBadgeProps,\n    M = m.topRightBadgeProps,\n    V = m.bottomLeftBadgeProps,\n    F = m.bottomRightBadgeProps,\n    G = m.withoutBorder,\n    J = void 0 !== G && G,\n    K = m.customSize,\n    Q = void 0 === K ? null : K,\n    U = m.customBackgroundColor,\n    X = void 0 === U ? null : U,\n    Y = m.onClick,\n    Z = m[\"data-testid\"],\n    $ = n(function () {\n      return X ? {\n        backgroundColor: X\n      } : x ? {} : {\n        backgroundColor: d(I)\n      };\n    }, [x, I, X]),\n    ee = n(function () {\n      return Q ? {\n        height: Q,\n        width: Q\n      } : {};\n    }, [Q]),\n    te = n(function () {\n      if (!w) return T ? Object.assign({\n        content: A\n      }, T) : {\n        content: A\n      };\n    }, [A, T, w]),\n    oe = n(function () {\n      var e = [];\n      return t(D) || e.push(l.createElement(\"div\", {\n        key: \"top-left-badge\",\n        className: i(j.badge, j.badgeTopLeft)\n      }, l.createElement(b, Object.assign({\n        size: B\n      }, D)))), t(M) || e.push(l.createElement(\"div\", {\n        key: \"top-right-badge\",\n        className: i(j.badge, j.badgeTopRight)\n      }, l.createElement(b, Object.assign({\n        size: B\n      }, M)))), t(V) || e.push(l.createElement(\"div\", {\n        key: \"bottom-left-badge\",\n        className: i(j.badge, j.badgeBottomLeft)\n      }, l.createElement(b, Object.assign({\n        size: B\n      }, V)))), t(F) || e.push(l.createElement(\"div\", {\n        key: \"bottom-right-bade\",\n        className: i(j.badge, j.badgeBottomRight)\n      }, l.createElement(b, Object.assign({\n        size: B\n      }, F)))), e.length > 0 ? l.createElement(\"div\", {\n        className: i(j.badges)\n      }, e) : null;\n    }, [B, D, M, V, F]),\n    ae = n(function () {\n      return W || !Y && !(null == te ? void 0 : te.content) ? -1 : 0;\n    }, [W, Y, null == te ? void 0 : te.content]),\n    re = null != q ? q : ae,\n    se = c(function (e) {\n      e.preventDefault(), Y && Y(e, p);\n    }, [Y, p]);\n  return l.createElement(\"div\", {\n    id: p,\n    \"data-testid\": Z || r(s.AVATAR, p),\n    className: i(j.avatar, j[B], C),\n    style: ee\n  }, l.createElement(v, {\n    isClickable: !!Y,\n    clickableProps: {\n      onClick: se,\n      tabIndex: \"-1\",\n      className: j.clickableWrapper\n    }\n  }, l.createElement(f, Object.assign({\n    showTrigger: [\"focus\", \"mouseenter\"],\n    hideTrigger: [\"blur\", \"mouseleave\"]\n  }, te), l.createElement(\"div\", {\n    className: i(j.circle, a(j, o(\"circle--\" + h)), e(e(e({}, j.disabled, W), j.square, H), j.withoutBorder, J), k),\n    \"aria-hidden\": _,\n    tabIndex: re,\n    style: Object.assign({}, $)\n  }, l.createElement(g, {\n    type: h,\n    size: B,\n    src: x,\n    icon: P,\n    text: z,\n    ariaLabel: A,\n    role: L,\n    textClassName: y\n  })), oe)));\n}, {\n  types: p,\n  sizes: u,\n  colors: m,\n  backgroundColors: m\n});\nexport { C as default };","map":{"version":3,"names":["C","h","m","p","id","u","type","className","k","avatarContentWrapperClassName","E","textClassName","y","N","size","B","x","src","P","icon","z","text","T","tooltipProps","A","ariaLabel","O","withoutTooltip","w","L","role","R","backgroundColor","I","H","square","W","disabled","q","tabIndex","S","ariaHidden","_","D","topLeftBadgeProps","M","topRightBadgeProps","V","bottomLeftBadgeProps","F","bottomRightBadgeProps","G","withoutBorder","J","K","customSize","Q","U","customBackgroundColor","X","Y","onClick","Z","$","n","d","ee","height","width","te","Object","assign","content","oe","e","t","push","l","createElement","key","i","j","badge","badgeTopLeft","b","badgeTopRight","badgeBottomLeft","badgeBottomRight","length","badges","ae","re","se","c","preventDefault","r","s","AVATAR","avatar","style","v","isClickable","clickableProps","clickableWrapper","f","showTrigger","hideTrigger","circle","a","o","g","types","sizes","colors","backgroundColors","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/Avatar/Avatar.tsx"],"sourcesContent":["import { camelCase } from \"lodash-es\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport cx from \"classnames\";\nimport React, { AriaRole, useCallback, useMemo } from \"react\";\nimport { isNil } from \"lodash-es\";\nimport { ElementAllowedColor as ElementAllowedColorEnum } from \"../../utils/colors-vars-map\";\nimport { ElementAllowedColor, getElementColor } from \"../../types/Colors\";\nimport { AvatarSize as AvatarSizeEnum, AvatarType as AvatarTypeEnum } from \"./AvatarConstants\";\nimport { AvatarSize, AvatarType } from \"./Avatar.types\";\nimport AvatarBadge, { AvatarBadgeProps } from \"./AvatarBadge\";\nimport AvatarContent from \"./AvatarContent\";\nimport Tooltip, { TooltipProps } from \"../Tooltip/Tooltip\";\nimport ClickableWrapper from \"../Clickable/ClickableWrapper\";\nimport { SubIcon, VibeComponentProps, withStaticPropsWithoutForwardRef } from \"../../types\";\nimport styles from \"./Avatar.module.scss\";\n\nexport interface AvatarProps extends VibeComponentProps {\n  /**\n   * The image source for the avatar.\n   */\n  src?: string;\n  /**\n   * The text displayed inside the avatar.\n   */\n  text?: string;\n  /**\n   * Props passed to the Tooltip component. See full options in the [Tooltip documentation](https://vibe.monday.com/?path=/docs/components-tooltip--docs).\n   */\n  tooltipProps?: Partial<TooltipProps>;\n  /**\n   * The ARIA label of the avatar.\n   */\n  ariaLabel?: string;\n  /**\n   * If true, the tooltip is disabled.\n   */\n  withoutTooltip?: boolean;\n  /**\n   * The icon displayed inside the avatar.\n   */\n  icon?: SubIcon;\n  /**\n   * The type of the avatar.\n   */\n  type?: AvatarType;\n  /**\n   * Class name applied to the text inside the avatar.\n   */\n  textClassName?: string;\n  /**\n   * Class name applied to the avatar content wrapper.\n   */\n  avatarContentWrapperClassName?: string;\n  /**\n   * The background color of the avatar.\n   */\n  backgroundColor?: ElementAllowedColor;\n  /**\n   * A custom background color.\n   */\n  customBackgroundColor?: string;\n  /**\n   * The ARIA role of the avatar.\n   */\n  role?: AriaRole;\n  /**\n   * The size of the avatar.\n   */\n  size?: AvatarSize;\n  /**\n   * A custom size in pixels.\n   */\n  customSize?: number;\n  /**\n   * The tab index of the avatar.\n   */\n  tabIndex?: number;\n  /**\n   * If true, the avatar is hidden from assistive technologies.\n   */\n  ariaHidden?: boolean;\n  /**\n   * If true, the avatar is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * If true, renders the avatar as a square instead of a circle.\n   */\n  square?: boolean;\n  /**\n   * Props for the top-left badge.\n   */\n  topLeftBadgeProps?: AvatarBadgeProps;\n  /**\n   * Props for the top-right badge.\n   */\n  topRightBadgeProps?: AvatarBadgeProps;\n  /**\n   * Props for the bottom-left badge.\n   */\n  bottomLeftBadgeProps?: AvatarBadgeProps;\n  /**\n   * Props for the bottom-right badge.\n   */\n  bottomRightBadgeProps?: AvatarBadgeProps;\n  /**\n   * If true, removes the avatar's border.\n   */\n  withoutBorder?: boolean;\n  /**\n   * Callback fired when the avatar is clicked.\n   */\n  onClick?: (event: React.MouseEvent | React.KeyboardEvent, avatarId: string) => void;\n}\n\nconst Avatar = ({\n  id,\n  type = \"text\",\n  className,\n  avatarContentWrapperClassName,\n  textClassName = \"\",\n  size = \"large\",\n  src,\n  icon,\n  text,\n  tooltipProps,\n  ariaLabel,\n  withoutTooltip = false,\n  role,\n  backgroundColor = \"chili-blue\",\n  square,\n  disabled,\n  tabIndex,\n  ariaHidden = false,\n  topLeftBadgeProps,\n  topRightBadgeProps,\n  bottomLeftBadgeProps,\n  bottomRightBadgeProps,\n  withoutBorder = false,\n  customSize = null,\n  customBackgroundColor = null,\n  onClick,\n  \"data-testid\": dataTestId\n}: AvatarProps) => {\n  const backgroundColorStyle = useMemo(() => {\n    if (customBackgroundColor) return { backgroundColor: customBackgroundColor };\n    return src ? {} : { backgroundColor: getElementColor(backgroundColor) };\n  }, [src, backgroundColor, customBackgroundColor]);\n  const sizeStyle = useMemo(() => {\n    return customSize ? { height: customSize, width: customSize } : {};\n  }, [customSize]);\n\n  const overrideTooltipProps = useMemo(() => {\n    if (withoutTooltip) return undefined;\n\n    if (tooltipProps) {\n      return { content: ariaLabel, ...tooltipProps };\n    } else {\n      return { content: ariaLabel };\n    }\n  }, [ariaLabel, tooltipProps, withoutTooltip]);\n\n  const badgesContainer = useMemo(() => {\n    const badges = [];\n    if (!isNil(topLeftBadgeProps)) {\n      badges.push(\n        <div key=\"top-left-badge\" className={cx(styles.badge, styles.badgeTopLeft)}>\n          <AvatarBadge size={size} {...topLeftBadgeProps} />\n        </div>\n      );\n    }\n    if (!isNil(topRightBadgeProps)) {\n      badges.push(\n        <div key=\"top-right-badge\" className={cx(styles.badge, styles.badgeTopRight)}>\n          <AvatarBadge size={size} {...topRightBadgeProps} />\n        </div>\n      );\n    }\n    if (!isNil(bottomLeftBadgeProps)) {\n      badges.push(\n        <div key=\"bottom-left-badge\" className={cx(styles.badge, styles.badgeBottomLeft)}>\n          <AvatarBadge size={size} {...bottomLeftBadgeProps} />\n        </div>\n      );\n    }\n    if (!isNil(bottomRightBadgeProps)) {\n      badges.push(\n        <div key=\"bottom-right-bade\" className={cx(styles.badge, styles.badgeBottomRight)}>\n          <AvatarBadge size={size} {...bottomRightBadgeProps} />\n        </div>\n      );\n    }\n\n    return badges.length > 0 ? <div className={cx(styles.badges)}>{badges}</div> : null;\n  }, [size, topLeftBadgeProps, topRightBadgeProps, bottomLeftBadgeProps, bottomRightBadgeProps]);\n\n  const defaultTabIndex = useMemo(() => {\n    if (!disabled && (onClick || overrideTooltipProps?.content)) {\n      return 0;\n    }\n    return -1;\n  }, [disabled, onClick, overrideTooltipProps?.content]);\n\n  const overrideTabIndex = tabIndex ?? defaultTabIndex;\n\n  const clickHandler = useCallback(\n    (event: React.MouseEvent | React.KeyboardEvent) => {\n      event.preventDefault();\n      if (onClick) {\n        onClick(event, id);\n      }\n    },\n    [onClick, id]\n  );\n\n  return (\n    <div\n      id={id}\n      data-testid={dataTestId || getTestId(ComponentDefaultTestId.AVATAR, id)}\n      className={cx(styles.avatar, styles[size], className)}\n      style={sizeStyle}\n    >\n      <ClickableWrapper\n        isClickable={!!onClick}\n        clickableProps={{\n          onClick: clickHandler,\n          tabIndex: \"-1\",\n          className: styles.clickableWrapper\n        }}\n      >\n        <Tooltip showTrigger={[\"focus\", \"mouseenter\"]} hideTrigger={[\"blur\", \"mouseleave\"]} {...overrideTooltipProps}>\n          <div\n            className={cx(\n              styles.circle,\n              getStyle(styles, camelCase(\"circle--\" + type)),\n              {\n                [styles.disabled]: disabled,\n                [styles.square]: square,\n                [styles.withoutBorder]: withoutBorder\n              },\n              avatarContentWrapperClassName\n            )}\n            aria-hidden={ariaHidden}\n            tabIndex={overrideTabIndex}\n            style={{ ...backgroundColorStyle }}\n          >\n            <AvatarContent\n              type={type}\n              size={size}\n              src={src}\n              icon={icon}\n              text={text}\n              ariaLabel={ariaLabel}\n              role={role}\n              textClassName={textClassName}\n            />\n          </div>\n          {badgesContainer}\n        </Tooltip>\n      </ClickableWrapper>\n    </div>\n  );\n};\n\ninterface AvatarStaticProps {\n  types: typeof AvatarTypeEnum;\n  sizes: typeof AvatarSizeEnum;\n  colors: typeof ElementAllowedColorEnum;\n  backgroundColors: typeof ElementAllowedColorEnum;\n}\n\nexport default withStaticPropsWithoutForwardRef<AvatarProps, AvatarStaticProps>(Avatar, {\n  types: AvatarTypeEnum,\n  sizes: AvatarSizeEnum,\n  colors: ElementAllowedColorEnum,\n  backgroundColors: ElementAllowedColorEnum\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
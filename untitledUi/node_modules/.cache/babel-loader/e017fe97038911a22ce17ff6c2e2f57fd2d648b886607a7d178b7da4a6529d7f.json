{"ast":null,"code":"import { defineProperty as t } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport e from \"classnames\";\nimport o, { useMemo as i } from \"react\";\nimport { camelCase as r } from \"lodash-es\";\nimport { getStyle as s } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport { getTestId as a, ComponentDefaultTestId as n } from \"../../tests/testIds.js\";\nimport c from \"../Icon/Icon.js\";\nimport m from \"../IconButton/IconButton.js\";\nimport { IconType as l } from \"../Icon/IconConstants.js\";\nimport { AttentionBoxType as p } from \"./AttentionBoxConstants.js\";\nimport { withStaticPropsWithoutForwardRef as d } from \"../../types/withStaticProps.js\";\nimport \"../../utils/colors-vars-map.js\";\nimport f from \"../Text/Text.js\";\nimport u from \"../Flex/Flex.js\";\nimport y from \"./AttentionBox.module.scss.js\";\nimport j from \"../../../icons/dist/react/Info.js\";\nimport v from \"../../../icons/dist/react/Alert.js\";\nimport x from \"../../../icons/dist/react/CloseSmall.js\";\nvar I = d(function (l) {\n  var p = l.className,\n    d = l.withIconWithoutHeader,\n    I = void 0 !== d && d,\n    h = l.type,\n    g = void 0 === h ? \"primary\" : h,\n    C = l.icon,\n    N = l.iconType,\n    T = void 0 === N ? \"svg\" : N,\n    E = l.title,\n    B = l.text,\n    A = l.children,\n    S = l.withoutIcon,\n    w = void 0 !== S && S,\n    H = l.onClose,\n    b = l.compact,\n    F = void 0 !== b && b,\n    z = l.id,\n    P = l[\"data-testid\"],\n    _ = l.closeButtonAriaLabel,\n    L = void 0 === _ ? \"Close\" : _,\n    O = l.entryAnimation,\n    W = void 0 !== O && O,\n    k = i(function () {\n      return \"primary\" === g ? j : v;\n    }, [g]),\n    M = void 0 === C ? k : C;\n  return o.createElement(\"aside\", {\n    className: e(y.attentionBox, s(y, r(\"type-\".concat(g))), p, t({}, y.entryAnimation, W)),\n    role: \"alert\",\n    \"data-testid\": P || a(n.ATTENTION_BOX, z)\n  }, E && o.createElement(u, {\n    justify: \"start\",\n    align: \"center\",\n    className: y.titleContainer,\n    gap: \"xs\"\n  }, !w && o.createElement(c, {\n    className: y.icon,\n    iconType: T,\n    ariaHidden: !0,\n    icon: M,\n    ignoreFocusStyle: !0,\n    iconSize: \"20\"\n  }), o.createElement(f, {\n    type: \"text1\",\n    element: \"h5\",\n    weight: \"medium\",\n    className: y.title\n  }, E)), o.createElement(u, {\n    justify: \"start\",\n    align: \"center\",\n    gap: \"xs\"\n  }, !E && F && !w && I && o.createElement(c, {\n    iconType: T,\n    iconSize: 18,\n    ariaHidden: !0,\n    icon: M,\n    ignoreFocusStyle: !0\n  }), o.createElement(f, {\n    type: \"text2\",\n    element: F ? void 0 : \"p\",\n    className: e(y.text, t(t(t({}, y.compact, F), y.dismissible, !!H), y.paragraph, !F))\n  }, B || A)), H && o.createElement(m, {\n    size: \"small\",\n    color: \"on-primary-color\",\n    className: y.closeIcon,\n    wrapperClassName: e(y.closeIconWrapper, t({}, y.closeIconCompact, F)),\n    ariaLabel: L,\n    hideTooltip: !0,\n    icon: x,\n    onClick: H\n  }));\n}, {\n  types: p,\n  iconTypes: l\n});\nexport { I as default };","map":{"version":3,"names":["I","d","l","p","className","withIconWithoutHeader","h","type","g","C","icon","N","iconType","T","E","title","B","text","A","children","S","withoutIcon","w","H","onClose","b","compact","F","z","id","P","_","closeButtonAriaLabel","L","O","entryAnimation","W","k","i","j","v","M","o","createElement","e","y","attentionBox","s","r","concat","t","role","a","n","ATTENTION_BOX","u","justify","align","titleContainer","gap","c","ariaHidden","ignoreFocusStyle","iconSize","f","element","weight","dismissible","paragraph","m","size","color","closeIcon","wrapperClassName","closeIconWrapper","closeIconCompact","ariaLabel","hideTooltip","x","onClick","types","iconTypes","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/AttentionBox/AttentionBox.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, { useMemo } from \"react\";\nimport { camelCase } from \"lodash-es\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport Icon from \"../Icon/Icon\";\nimport IconButton from \"../IconButton/IconButton\";\nimport { CloseSmall, Alert as AlertIcon, Info as InfoIcon } from \"@vibe/icons\";\nimport { IconType as IconTypeEnum } from \"../Icon/IconConstants\";\nimport { AttentionBoxType as AttentionBoxTypeEnum } from \"./AttentionBoxConstants\";\nimport { AttentionBoxType } from \"./AttentionBox.types\";\nimport { SubIcon, VibeComponentProps, ElementContent, withStaticPropsWithoutForwardRef } from \"../../types\";\nimport Text from \"../Text/Text\";\nimport Flex from \"../Flex/Flex\";\nimport styles from \"./AttentionBox.module.scss\";\n\nexport interface AttentionBoxProps extends VibeComponentProps {\n  // TODO: [breaking] remove prop\n  /**\n   * If true, displays an icon even when no header is provided.\n   */\n  withIconWithoutHeader?: boolean;\n  /**\n   * The type of the AttentionBox.\n   */\n  type?: AttentionBoxType;\n  /**\n   * The icon displayed next to the title or text.\n   */\n  icon?: SubIcon;\n  /**\n   * The type of the icon.\n   */\n  iconType?: \"svg\" | \"font\";\n  /**\n   * The title of the component.\n   */\n  title?: string;\n  /**\n   * The text content displayed inside.\n   */\n  text?: string;\n  /**\n   * The content of the component.\n   */\n  children?: ElementContent;\n  // TODO: [breaking] remove prop\n  /**\n   * If true, the icon is not displayed.\n   */\n  withoutIcon?: boolean;\n  /**\n   * Callback fired when the close button is clicked.\n   */\n  onClose?: (event: React.MouseEvent) => void;\n  /**\n   * If true, renders in compact mode.\n   */\n  compact?: boolean;\n  /**\n   * The label of the close button.\n   */\n  closeButtonAriaLabel?: string;\n  /**\n   * If true, an entry animation is applied when the component appears.\n   */\n  entryAnimation?: boolean;\n}\n\nconst AttentionBox = ({\n  className,\n  withIconWithoutHeader = false,\n  type = \"primary\",\n  icon,\n  iconType = \"svg\",\n  title,\n  text,\n  children,\n  withoutIcon = false,\n  onClose,\n  compact = false,\n  id,\n  \"data-testid\": dataTestId,\n  closeButtonAriaLabel = \"Close\",\n  entryAnimation = false\n}: AttentionBoxProps) => {\n  const defaultIcon = useMemo(() => {\n    return type === \"primary\" ? InfoIcon : AlertIcon;\n  }, [type]);\n\n  const overrideIcon = icon === undefined ? defaultIcon : icon;\n\n  return (\n    <aside\n      className={cx(styles.attentionBox, getStyle(styles, camelCase(`type-${type}`)), className, {\n        [styles.entryAnimation]: entryAnimation\n      })}\n      role=\"alert\"\n      data-testid={dataTestId || getTestId(ComponentDefaultTestId.ATTENTION_BOX, id)}\n    >\n      {title && (\n        <Flex justify=\"start\" align=\"center\" className={styles.titleContainer} gap=\"xs\">\n          {!withoutIcon && (\n            <Icon\n              className={styles.icon}\n              iconType={iconType}\n              ariaHidden\n              icon={overrideIcon}\n              ignoreFocusStyle\n              iconSize=\"20\"\n            />\n          )}\n          <Text type=\"text1\" element=\"h5\" weight=\"medium\" className={styles.title}>\n            {title}\n          </Text>\n        </Flex>\n      )}\n      <Flex justify=\"start\" align=\"center\" gap=\"xs\">\n        {!title && compact && !withoutIcon && withIconWithoutHeader && (\n          <Icon iconType={iconType} iconSize={18} ariaHidden icon={overrideIcon} ignoreFocusStyle />\n        )}\n        <Text\n          type=\"text2\"\n          element={compact ? undefined : \"p\"}\n          className={cx(styles.text, {\n            [styles.compact]: compact,\n            [styles.dismissible]: !!onClose,\n            [styles.paragraph]: !compact\n          })}\n        >\n          {text || children}\n        </Text>\n      </Flex>\n      {onClose && (\n        <IconButton\n          size=\"small\"\n          color=\"on-primary-color\"\n          className={styles.closeIcon}\n          wrapperClassName={cx(styles.closeIconWrapper, {\n            [styles.closeIconCompact]: compact\n          })}\n          ariaLabel={closeButtonAriaLabel}\n          hideTooltip\n          icon={CloseSmall}\n          onClick={onClose}\n        />\n      )}\n    </aside>\n  );\n};\n\ninterface AttentionBoxStaticProps {\n  types: typeof AttentionBoxTypeEnum;\n  iconTypes: typeof IconTypeEnum;\n}\n\nexport default withStaticPropsWithoutForwardRef<AttentionBoxProps, AttentionBoxStaticProps>(AttentionBox, {\n  types: AttentionBoxTypeEnum,\n  iconTypes: IconTypeEnum\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
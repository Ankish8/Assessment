{"ast":null,"code":"import { slicedToArray as r } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport s from \"react\";\nimport { InfixKind as o } from \"./SliderConstants.js\";\nimport { useSliderInfixComponent as i } from \"./SliderInfixHooks.js\";\nimport t from \"classnames\";\nimport { getStyle as e } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport { withStaticPropsWithoutForwardRef as m } from \"../../types/withStaticProps.js\";\nimport \"../../utils/colors-vars-map.js\";\nimport l from \"./SliderInfix.module.scss.js\";\nvar p = m(function o(m) {\n  var p = m.kind,\n    a = void 0 === p ? o.kinds.PREFIX : p,\n    n = i(a),\n    f = r(n, 4),\n    d = f[1],\n    c = f[2],\n    u = f[3];\n  return f[0] && s.createElement(\"div\", {\n    className: t(l.infix, e(l, a), d.map(function (r) {\n      return e(l, r);\n    })),\n    style: u\n  }, c);\n}, {\n  kinds: o\n});\nexport { p as default };","map":{"version":3,"names":["p","m","o","kind","a","kinds","PREFIX","n","i","f","r","d","c","u","s","createElement","className","t","l","infix","e","map","style","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/Slider/SliderInfix.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport { InfixKind as InfixKindEnum } from \"./SliderConstants\";\nimport { useSliderInfixComponent } from \"./SliderInfixHooks\";\nimport cx from \"classnames\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport { VibeComponentProps, withStaticPropsWithoutForwardRef } from \"../../types\";\nimport styles from \"./SliderInfix.module.scss\";\nimport { InfixKind } from \"./Slider.types\";\n\nexport interface SliderInfixProps extends VibeComponentProps {\n  /**\n   * Specifies the type of infix (prefix or postfix).\n   */\n  kind?: InfixKind;\n}\n\nconst SliderInfix: FC<SliderInfixProps> & { kinds?: typeof InfixKindEnum } = ({ kind = SliderInfix.kinds.PREFIX }) => {\n  const [isShow, modificators, InfixComponent, inlineStyle] = useSliderInfixComponent(kind);\n  return (\n    isShow && (\n      <div\n        className={cx(\n          styles.infix,\n          getStyle(styles, kind),\n          modificators.map(m => getStyle(styles, m))\n        )}\n        style={inlineStyle}\n      >\n        {InfixComponent}\n      </div>\n    )\n  );\n};\n\nexport default withStaticPropsWithoutForwardRef<SliderInfixProps, { kinds: typeof InfixKindEnum }>(SliderInfix, {\n  kinds: InfixKindEnum\n});\n"],"mappings":";;;;;;;;;AAgBA,IAkBeA,CAAA,GAAAC,CAAA,CAlB8D,SAAvEC,EAAWD,CAAA;EAAoG,IAAAD,CAAA,GAAAC,CAAA,CAArCE,IAAA;IAAAC,CAAA,QAAO,MAAHJ,CAAA,GAAGE,CAAA,CAAYG,KAAA,CAAMC,MAAA,GAAMN,CAAA;IAC7GO,CAAA,GAA4DC,CAAA,CAAwBJ,CAAA;IAAKK,CAAA,GAAAC,CAAA,CAAAH,CAAA;IAA1EI,CAAA,GAAYF,CAAA;IAAEG,CAAA,GAAcH,CAAA;IAAEI,CAAA,GAAWJ,CAAA;EACxD,OADaA,CAAA,OAGTK,CAAA,CAAAC,aAAA;IACEC,SAAA,EAAWC,CAAA,CACTC,CAAA,CAAOC,KAAA,EACPC,CAAA,CAASF,CAAA,EAAQd,CAAA,GACjBO,CAAA,CAAaU,GAAA,CAAI,UAAAX,CAAA;MAAC,OAAIU,CAAA,CAASF,CAAA,EAAQR,CAAA,CAAE;IAAA;IAE3CY,KAAA,EAAOT;EAAA,GAEND,CAAA,CAIT;AAAA,GAEgH;EAC9GP,KAAA,EAAOH;AAAA;AAAA,SAAAF,CAAA,IAAAuB,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
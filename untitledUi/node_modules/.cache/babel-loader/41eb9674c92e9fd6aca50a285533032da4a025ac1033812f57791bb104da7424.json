{"ast":null,"code":"import { defineProperty as e } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport t from \"classnames\";\nimport i, { forwardRef as s, useCallback as o, useMemo as r } from \"react\";\nimport l from \"../Divider/Divider.js\";\nimport { NOOP as a } from \"../../utils/function-utils.js\";\nimport n from \"./components/StepIndicator/StepIndicator.js\";\nimport { MultiStepType as p, StepStatus as m, TextPlacement as c, Size as d } from \"./MultiStepConstants.js\";\nimport { getTestId as f } from \"../../tests/testIds.js\";\nimport { ComponentDefaultTestId as u } from \"../../tests/constants.js\";\nimport { withStaticProps as v } from \"../../types/withStaticProps.js\";\nimport \"../../utils/colors-vars-map.js\";\nimport y from \"./MultiStepIndicator.module.scss.js\";\nimport S from \"../../../icons/dist/react/Check.js\";\nvar C = v(s(function (s, p) {\n  var m = s.className,\n    c = s.steps,\n    d = void 0 === c ? [] : c,\n    v = s.type,\n    C = void 0 === v ? \"primary\" : v,\n    N = s.stepComponentClassName,\n    j = s.dividerComponentClassName,\n    I = s.fulfilledStepIcon,\n    g = void 0 === I ? S : I,\n    b = s.fulfilledStepIconType,\n    D = void 0 === b ? \"svg\" : b,\n    T = s.isFulfilledStepDisplayNumber,\n    h = void 0 !== T && T,\n    k = s.onClick,\n    E = void 0 === k ? a : k,\n    P = s.textPlacement,\n    _ = void 0 === P ? \"horizontal\" : P,\n    x = s.id,\n    F = s[\"data-testid\"],\n    z = \"vertical\" === _ ? \"regular\" : s.size,\n    w = o(function (s, o) {\n      return i.createElement(i.Fragment, {\n        key: \"\".concat(s.titleText, \"_\").concat(o)\n      }, i.createElement(n, Object.assign({}, s, {\n        stepNumber: o + 1,\n        type: C,\n        stepComponentClassName: N,\n        fulfilledStepIcon: g,\n        fulfilledStepIconType: D,\n        onClick: E,\n        isFulfilledStepDisplayNumber: h,\n        size: z\n      })), o !== d.length - 1 && i.createElement(l, {\n        className: t(y.divider, j, e({}, y.compact, \"compact\" === z))\n      }));\n    }, [E, h, C, N, g, D, j, d.length, z]),\n    M = o(function (e, s) {\n      return i.createElement(n, Object.assign({}, e, {\n        key: \"\".concat(e.titleText, \"_\").concat(s),\n        stepNumber: s + 1,\n        type: C,\n        stepComponentClassName: N,\n        fulfilledStepIcon: g,\n        fulfilledStepIconType: D,\n        onClick: E,\n        isFollowedByDivider: s !== d.length - 1,\n        stepDividerClassName: t(y.divider, j),\n        isVertical: !0,\n        isFulfilledStepDisplayNumber: h\n      }));\n    }, [E, h, C, N, g, D, j, d.length]),\n    O = r(function () {\n      return \"vertical\" === _ ? M : w;\n    }, [_, M, w]);\n  return i.createElement(\"ol\", {\n    ref: p,\n    id: x,\n    \"data-testid\": F || f(u.MULTI_STEP_INDICATOR, x),\n    className: t(y.wrapper, m)\n  }, d.map(O));\n}), {\n  types: p,\n  stepStatuses: m,\n  textPlacements: c,\n  sizes: d\n});\nexport { C as default };","map":{"version":3,"names":["C","v","s","p","m","className","c","steps","d","type","N","stepComponentClassName","j","dividerComponentClassName","I","fulfilledStepIcon","g","S","b","fulfilledStepIconType","D","T","isFulfilledStepDisplayNumber","h","k","onClick","E","a","P","textPlacement","_","x","id","F","z","size","w","o","i","createElement","Fragment","key","concat","titleText","n","Object","assign","stepNumber","length","l","t","y","divider","e","compact","M","isFollowedByDivider","stepDividerClassName","isVertical","O","r","ref","f","u","MULTI_STEP_INDICATOR","wrapper","map","types","stepStatuses","textPlacements","sizes","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/MultiStepIndicator/MultiStepIndicator.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, { forwardRef, useCallback, useMemo } from \"react\";\nimport { Check } from \"@vibe/icons\";\nimport Divider from \"../../components/Divider/Divider\";\nimport { NOOP } from \"../../utils/function-utils\";\nimport StepIndicator from \"./components/StepIndicator/StepIndicator\";\nimport {\n  MultiStepType as MultiStepTypeEnum,\n  Size as SizeEnum,\n  StepStatus as StepStatusEnum,\n  TextPlacement as TextPlacementEnum\n} from \"./MultiStepConstants\";\nimport { MultiStepType, MultiStepSize, TextPlacement, Step } from \"./MultiStep.types\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../tests/constants\";\nimport { SubIcon, VibeComponentProps, withStaticProps } from \"../../types\";\nimport styles from \"./MultiStepIndicator.module.scss\";\n\nexport interface MultiStepIndicatorProps extends VibeComponentProps {\n  /**\n   * The list of steps in the multi-step indicator.\n   */\n  steps?: Step[];\n  /**\n   * The visual style of the multi-step indicator.\n   */\n  type?: MultiStepType;\n  /**\n   * Class name applied to each step component.\n   */\n  stepComponentClassName?: string;\n  /**\n   * Class name applied to the divider between steps.\n   */\n  dividerComponentClassName?: string;\n  /**\n   * The icon used for fulfilled steps.\n   */\n  fulfilledStepIcon?: SubIcon;\n  /**\n   * The type of the fulfilled step icon.\n   */\n  fulfilledStepIconType?: \"svg\" | \"font\";\n  /**\n   * If true, displays the step number instead of the fulfilled step icon.\n   */\n  isFulfilledStepDisplayNumber?: boolean;\n  /**\n   * Callback fired when a step is clicked.\n   */\n  onClick?: (stepNumber: number) => void;\n  /**\n   * The placement of the step text.\n   */\n  textPlacement?: TextPlacement;\n  /**\n   * The size of the multi-step indicator.\n   */\n  size?: MultiStepSize;\n}\n\nconst MultiStepIndicator = forwardRef(\n  (\n    {\n      className,\n      steps = [],\n      type = \"primary\",\n      stepComponentClassName,\n      dividerComponentClassName,\n      fulfilledStepIcon = Check,\n      fulfilledStepIconType = \"svg\",\n      isFulfilledStepDisplayNumber = false,\n      onClick = NOOP,\n      textPlacement = \"horizontal\",\n      id,\n      size,\n      \"data-testid\": dataTestId\n    }: MultiStepIndicatorProps,\n    ref: React.ForwardedRef<HTMLOListElement>\n  ) => {\n    const finalSize = textPlacement === \"vertical\" ? \"regular\" : size;\n\n    const renderHorizontalStepIndicator = useCallback(\n      (step: Step, index: number) => {\n        return (\n          <React.Fragment key={`${step.titleText}_${index}`}>\n            <StepIndicator\n              {...step}\n              stepNumber={index + 1}\n              type={type}\n              stepComponentClassName={stepComponentClassName}\n              fulfilledStepIcon={fulfilledStepIcon}\n              fulfilledStepIconType={fulfilledStepIconType}\n              onClick={onClick}\n              isFulfilledStepDisplayNumber={isFulfilledStepDisplayNumber}\n              size={finalSize}\n            />\n            {index !== steps.length - 1 && (\n              <Divider\n                className={cx(styles.divider, dividerComponentClassName, {\n                  [styles.compact]: finalSize === \"compact\"\n                })}\n              />\n            )}\n          </React.Fragment>\n        );\n      },\n      [\n        onClick,\n        isFulfilledStepDisplayNumber,\n        type,\n        stepComponentClassName,\n        fulfilledStepIcon,\n        fulfilledStepIconType,\n        dividerComponentClassName,\n        steps.length,\n        finalSize\n      ]\n    );\n\n    const renderVerticalStepIndicator = useCallback(\n      (step: Step, index: number) => {\n        return (\n          <StepIndicator\n            {...step}\n            key={`${step.titleText}_${index}`}\n            stepNumber={index + 1}\n            type={type}\n            stepComponentClassName={stepComponentClassName}\n            fulfilledStepIcon={fulfilledStepIcon}\n            fulfilledStepIconType={fulfilledStepIconType}\n            onClick={onClick}\n            isFollowedByDivider={index !== steps.length - 1}\n            stepDividerClassName={cx(styles.divider, dividerComponentClassName)}\n            isVertical\n            isFulfilledStepDisplayNumber={isFulfilledStepDisplayNumber}\n          />\n        );\n      },\n      [\n        onClick,\n        isFulfilledStepDisplayNumber,\n        type,\n        stepComponentClassName,\n        fulfilledStepIcon,\n        fulfilledStepIconType,\n        dividerComponentClassName,\n        steps.length\n      ]\n    );\n\n    const stepRenderer = useMemo(\n      () => (textPlacement === \"vertical\" ? renderVerticalStepIndicator : renderHorizontalStepIndicator),\n      [textPlacement, renderVerticalStepIndicator, renderHorizontalStepIndicator]\n    );\n\n    return (\n      <ol\n        ref={ref}\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.MULTI_STEP_INDICATOR, id)}\n        className={cx(styles.wrapper, className)}\n      >\n        {steps.map(stepRenderer)}\n      </ol>\n    );\n  }\n);\n\ninterface MultiStepIndicatorStaticProps {\n  types: typeof MultiStepTypeEnum;\n  stepStatuses: typeof StepStatusEnum;\n  textPlacements: typeof TextPlacementEnum;\n  sizes: typeof SizeEnum;\n}\n\nexport default withStaticProps<MultiStepIndicatorProps, MultiStepIndicatorStaticProps>(MultiStepIndicator, {\n  types: MultiStepTypeEnum,\n  stepStatuses: StepStatusEnum,\n  textPlacements: TextPlacementEnum,\n  sizes: SizeEnum\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
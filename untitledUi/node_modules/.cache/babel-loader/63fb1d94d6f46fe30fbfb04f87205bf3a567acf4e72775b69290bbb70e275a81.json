{"ast":null,"code":"import { defineProperty as i } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { getTestId as t, ComponentDefaultTestId as e } from \"../../tests/testIds.js\";\nimport o from \"classnames\";\nimport r, { forwardRef as s, useCallback as a } from \"react\";\nimport { NOOP as n } from \"../../utils/function-utils.js\";\nimport l from \"../Icon/Icon.js\";\nimport { IconPosition as m, LinkTarget as d } from \"./LinkConsts.js\";\nimport { withStaticProps as c } from \"../../types/withStaticProps.js\";\nimport \"../../utils/colors-vars-map.js\";\nimport p from \"./Link.module.scss.js\";\nimport { getStyle as f } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport { camelCase as v } from \"lodash-es\";\nfunction u(i, t, e) {\n  if (i) return r.createElement(l, {\n    className: e,\n    icon: t,\n    iconType: \"font\"\n  });\n}\nvar b = c(s(function (s, l) {\n  var m = s.className,\n    d = s.textClassName,\n    c = s.href,\n    b = void 0 === c ? \"\" : c,\n    j = s.text,\n    y = void 0 === j ? \"\" : j,\n    h = s.rel,\n    N = void 0 === h ? \"noreferrer\" : h,\n    k = s.onClick,\n    x = void 0 === k ? n : k,\n    g = s.target,\n    C = void 0 === g ? \"_blank\" : g,\n    L = s.ariaLabelDescription,\n    P = void 0 === L ? \"\" : L,\n    E = s.color,\n    I = void 0 === E ? \"primary\" : E,\n    S = s.ariaDescribedby,\n    D = void 0 === S ? \"\" : S,\n    T = s.icon,\n    _ = void 0 === T ? \"\" : T,\n    z = s.iconPosition,\n    B = s.id,\n    F = void 0 === B ? \"\" : B,\n    H = s.ariaLabeledBy,\n    w = void 0 === H ? \"\" : H,\n    K = s.disableNavigation,\n    M = void 0 !== K && K,\n    q = s.inheritFontSize,\n    A = void 0 !== q && q,\n    G = s.inlineText,\n    J = void 0 !== G && G,\n    O = s[\"data-testid\"],\n    Q = \"start\" === (void 0 === z ? \"start\" : z),\n    R = a(function (i) {\n      M && i.preventDefault(), x && x(i);\n    }, [M, x]);\n  return r.createElement(\"a\", {\n    \"data-testid\": O || t(e.LINK, F),\n    id: F,\n    href: b,\n    rel: N,\n    ref: l,\n    onClick: R,\n    target: C,\n    className: o(p.link, m, f(p, v(\"color-\" + I)), i(i({}, p.inheritFontSize, A), p.inlineText, J)),\n    \"aria-label\": P,\n    \"aria-describedby\": D,\n    \"aria-labelledby\": w\n  }, u(Q, _, o(p.iconStart)), r.createElement(\"span\", {\n    className: o(p.text, d)\n  }, y), u(!Q, _, o(p.iconEnd)));\n}), {\n  position: m,\n  iconPositions: m,\n  targets: d\n});\nexport { b as default };","map":{"version":3,"names":["u","i","t","e","r","createElement","l","className","icon","iconType","b","c","s","m","d","textClassName","href","j","text","y","h","rel","N","k","onClick","x","n","g","target","C","L","ariaLabelDescription","P","E","color","I","S","ariaDescribedby","D","T","_","z","iconPosition","B","id","F","H","ariaLabeledBy","w","K","disableNavigation","M","q","inheritFontSize","A","G","inlineText","J","O","Q","R","a","preventDefault","LINK","ref","o","p","link","f","v","iconStart","iconEnd","position","iconPositions","targets","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/Link/Link.tsx"],"sourcesContent":["import { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport cx from \"classnames\";\nimport React, { forwardRef, useCallback } from \"react\";\nimport { NOOP } from \"../../utils/function-utils\";\nimport Icon from \"../Icon/Icon\";\nimport { IconPosition as IconPositionEnum, LinkTarget as LinkTargetEnum } from \"./LinkConsts\";\nimport { LinkColor, LinkIconPosition, LinkTarget } from \"./Link.types\";\nimport { SubIcon, VibeComponentProps, withStaticProps } from \"../../types\";\nimport styles from \"./Link.module.scss\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport { camelCase } from \"lodash-es\";\n\nexport interface LinkProps extends VibeComponentProps {\n  /**\n   * Class name applied to the link text.\n   */\n  textClassName?: string;\n  /**\n   * The URL the link points to.\n   */\n  href?: string;\n  /**\n   * The text content of the link.\n   */\n  text?: string;\n  /**\n   * Specifies the relationship between the current document and the linked resource.\n   */\n  rel?: string;\n  /**\n   * Callback fired when the link is clicked.\n   */\n  onClick?: (event: React.MouseEvent) => void;\n  /**\n   * Specifies where to open the linked document.\n   */\n  target?: LinkTarget;\n  /**\n   * The ARIA label description for accessibility.\n   */\n  ariaLabelDescription?: string;\n  /**\n   * The ID of the element that describes this link.\n   */\n  ariaDescribedby?: string;\n  /**\n   * The ID of the element labeling this link.\n   */\n  ariaLabeledBy?: string;\n  /**\n   * Icon displayed next to the link text.\n   */\n  icon?: SubIcon;\n  /**\n   * The position of the icon relative to the text.\n   */\n  iconPosition?: LinkIconPosition;\n  /**\n   * If true, disables navigation when the link is clicked.\n   */\n  disableNavigation?: boolean;\n  /**\n   * If true, the link inherits the surrounding text's font size.\n   */\n  inheritFontSize?: boolean;\n  /**\n   * If true, the link is styled to fit within inline text content.\n   */\n  inlineText?: boolean;\n  /** The link's color style */\n  color?: LinkColor;\n}\n\nconst Link = forwardRef(\n  (\n    {\n      className,\n      textClassName,\n      href = \"\",\n      text = \"\",\n      rel = \"noreferrer\",\n      onClick = NOOP,\n      target = \"_blank\",\n      ariaLabelDescription = \"\",\n      color = \"primary\",\n      ariaDescribedby = \"\",\n      icon = \"\",\n      iconPosition = \"start\",\n      id = \"\",\n      ariaLabeledBy = \"\",\n      disableNavigation = false,\n      inheritFontSize = false,\n      inlineText = false,\n      \"data-testid\": dataTestId\n    }: LinkProps,\n    ref: React.ForwardedRef<HTMLAnchorElement>\n  ) => {\n    const isStart = iconPosition === \"start\";\n\n    const onClickWrapper = useCallback(\n      (e: React.MouseEvent<HTMLElement>) => {\n        if (disableNavigation) {\n          e.preventDefault();\n        }\n        onClick && onClick(e);\n      },\n      [disableNavigation, onClick]\n    );\n\n    return (\n      <a\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.LINK, id)}\n        id={id}\n        href={href}\n        rel={rel}\n        ref={ref}\n        onClick={onClickWrapper}\n        target={target}\n        className={cx(styles.link, className, getStyle(styles, camelCase(\"color-\" + color)), {\n          [styles.inheritFontSize]: inheritFontSize,\n          [styles.inlineText]: inlineText\n        })}\n        aria-label={ariaLabelDescription}\n        aria-describedby={ariaDescribedby}\n        aria-labelledby={ariaLabeledBy}\n      >\n        {getIcon(isStart, icon, cx(styles.iconStart))}\n        <span className={cx(styles.text, textClassName)}>{text}</span>\n        {getIcon(!isStart, icon, cx(styles.iconEnd))}\n      </a>\n    );\n  }\n);\n\nfunction getIcon(shouldShow: boolean, icon: string | React.FunctionComponent | null, className: string) {\n  if (!shouldShow) return;\n  return <Icon className={className} icon={icon} iconType=\"font\" />;\n}\n\ninterface LinkStaticProps {\n  targets: typeof LinkTargetEnum;\n  iconPositions: typeof IconPositionEnum;\n  position: typeof IconPositionEnum;\n}\n\nexport default withStaticProps<LinkProps, LinkStaticProps>(Link, {\n  position: IconPositionEnum,\n  iconPositions: IconPositionEnum,\n  targets: LinkTargetEnum\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { slicedToArray as n } from \"../../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { useState as t, useEffect as i } from \"react\";\nfunction e(e) {\n  var r = e.isMultiline,\n    o = e.ref,\n    l = e.selectedOptionsCount,\n    s = e.chipClassName,\n    a = e.chipWrapperClassName,\n    c = e.isCounterShown,\n    u = t(-1),\n    f = n(u, 2),\n    p = f[0],\n    d = f[1];\n  return i(function () {\n    var n = -1;\n    if (null != o && o.children && !r) for (var t = o.getBoundingClientRect().bottom, i = 0, e = 0, c = function () {\n        var r = o.children[e],\n          l = s.split(\" \");\n        if (r.classList.contains(a) || l.some(function (n) {\n          return r.classList.contains(n);\n        })) {\n          if (r.getBoundingClientRect().bottom > t) return n = i, 1;\n          i++;\n        }\n        e++;\n      }; o.children.length > e && l > i && !c(););\n    d(n);\n  }, [o, r, l, a, s, c]), {\n    overflowIndex: p,\n    hiddenOptionsCount: p > -1 ? l - p : 0\n  };\n}\nexport { e as useHiddenOptionsData };","map":{"version":3,"names":["e","r","isMultiline","o","ref","l","selectedOptionsCount","s","chipClassName","a","chipWrapperClassName","c","isCounterShown","u","t","f","n","p","d","i","children","getBoundingClientRect","bottom","split","classList","contains","some","length","overflowIndex","hiddenOptionsCount","useHiddenOptionsData"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/Dropdown/hooks/useHiddenOptionsData.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport function useHiddenOptionsData({\n  isMultiline,\n  ref,\n  selectedOptionsCount,\n  chipClassName,\n  chipWrapperClassName,\n  isCounterShown\n}) {\n  const [overflowIndex, setOverflowIndex] = useState(-1);\n  useEffect(() => {\n    let finalOverflowingIndex = -1;\n\n    if (ref?.children && !isMultiline) {\n      const { bottom: parentBottom } = ref.getBoundingClientRect();\n      let optionIndex = 0;\n      let childIndex = 0;\n\n      while (childIndex < ref.children.length && optionIndex < selectedOptionsCount) {\n        const child = ref.children[childIndex];\n        const chipClasses = chipClassName.split(\" \");\n\n        const isOption =\n          child.classList.contains(chipWrapperClassName) ||\n          chipClasses.some(className => child.classList.contains(className));\n\n        if (isOption) {\n          const { bottom: childBottom } = child.getBoundingClientRect();\n          if (childBottom > parentBottom) {\n            finalOverflowingIndex = optionIndex;\n            break;\n          }\n          optionIndex++;\n        }\n        childIndex++;\n      }\n    }\n\n    setOverflowIndex(finalOverflowingIndex);\n  }, [ref, isMultiline, selectedOptionsCount, chipWrapperClassName, chipClassName, isCounterShown]);\n\n  const hiddenOptionsCount = overflowIndex > -1 ? selectedOptionsCount - overflowIndex : 0;\n  return { overflowIndex, hiddenOptionsCount };\n}\n"],"mappings":";;AAEO,SAASA,EAAoBA,CAAA;EAOjC,IANDC,CAAA,GAAWD,CAAA,CAAXE,WAAA;IACAC,CAAA,GAAGH,CAAA,CAAHI,GAAA;IACAC,CAAA,GAAoBL,CAAA,CAApBM,oBAAA;IACAC,CAAA,GAAaP,CAAA,CAAbQ,aAAA;IACAC,CAAA,GAAoBT,CAAA,CAApBU,oBAAA;IACAC,CAAA,GAAcX,CAAA,CAAdY,cAAA;IAEAC,CAAA,GAA0CC,CAAA,EAAU;IAAEC,CAAA,GAAAC,CAAA,CAAAH,CAAA;IAA/CI,CAAA,GAAaF,CAAA;IAAEG,CAAA,GAAgBH,CAAA;EAiCtC,OAhCAI,CAAA,CAAU;IACR,IAAIH,CAAA,IAAyB;IAE7B,IAAI,QAAAb,CAAA,IAAAA,CAAA,CAAKiB,QAAA,KAAanB,CAAA,EAKpB,KAJA,IAAgBa,CAAA,GAAiBX,CAAA,CAAIkB,qBAAA,GAA7BC,MAAA,EACJH,CAAA,GAAc,GACdnB,CAAA,GAAa,GAAEW,CAAA,YAAAA,CAAA;QAGjB,IAAMV,CAAA,GAAQE,CAAA,CAAIiB,QAAA,CAASpB,CAAA;UACrBK,CAAA,GAAcE,CAAA,CAAcgB,KAAA,CAAM;QAMxC,IAHEtB,CAAA,CAAMuB,SAAA,CAAUC,QAAA,CAAShB,CAAA,KACzBJ,CAAA,CAAYqB,IAAA,CAAK,UAAAV,CAAA;UAAS,OAAIf,CAAA,CAAMuB,SAAA,CAAUC,QAAA,CAAST,CAAA;QAAA,IAE3C;UAEZ,IADgCf,CAAA,CAAMoB,qBAAA,GAA9BC,MAAA,GACUR,CAAA,EACoB,OAApCE,CAAA,GAAwBG,CAAA,EAAY;UAGtCA,CAAA,EACF;QAAA;QACAnB,CAAA;MAAA,GAhBkBG,CAAA,CAAIiB,QAAA,CAASO,MAAA,GAA1B3B,CAAA,IAAkDK,CAAA,GAAdc,CAAA,KAAkCR,CAAA;IAoB/EO,CAAA,CAAiBF,CAAA,CACnB;EAAA,GAAG,CAACb,CAAA,EAAKF,CAAA,EAAaI,CAAA,EAAsBI,CAAA,EAAsBF,CAAA,EAAeI,CAAA,IAG1E;IAAEiB,aAAA,EAAAX,CAAA;IAAeY,kBAAA,EADGZ,CAAA,IAAiB,IAAIZ,CAAA,GAAuBY,CAAA,GAAgB;EAAA,CAEzF;AAAA;AAAA,SAAAjB,CAAA,IAAA8B,oBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import e from \"classnames\";\nimport t, { forwardRef as a, useRef as s } from \"react\";\nimport i from \"../../hooks/useMergeRef.js\";\nimport r from \"../Text/Text.js\";\nimport m from \"./ListTitle.module.scss.js\";\nvar l = a(function (a, l) {\n  var o = a.className,\n    d = a.id,\n    n = a.children,\n    c = a.tabIndex,\n    f = a[\"data-testid\"],\n    p = s(null),\n    u = i(l, p);\n  return t.createElement(r, {\n    type: \"text1\",\n    weight: \"medium\",\n    \"data-testid\": f || d,\n    \"aria-level\": 3,\n    tabIndex: c,\n    role: \"heading\",\n    ref: u,\n    className: e(m.listTitle, o),\n    id: d\n  }, n);\n});\nObject.assign(l, {\n  displayName: \"ListTitle\"\n});\nexport { l as default };","map":{"version":3,"names":["l","a","o","className","d","id","n","children","c","tabIndex","f","p","s","u","i","t","createElement","r","type","weight","role","ref","e","m","listTitle","Object","assign","displayName","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/ListTitle/ListTitle.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, { forwardRef, useRef } from \"react\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport Text from \"../Text/Text\";\nimport styles from \"./ListTitle.module.scss\";\n\nexport interface ListTitleProps extends VibeComponentProps {\n  /**\n   * The tab index for keyboard navigation.\n   */\n  tabIndex?: number;\n  /**\n   * The title text.\n   */\n  children?: string;\n}\n\nconst ListTitle: React.FC<ListTitleProps> = forwardRef(\n  ({ className, id, children, tabIndex, \"data-testid\": dataTestId }, ref) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n\n    return (\n      <Text\n        type=\"text1\"\n        weight=\"medium\"\n        data-testid={dataTestId || id}\n        aria-level={3}\n        tabIndex={tabIndex}\n        role=\"heading\"\n        ref={mergedRef}\n        className={cx(styles.listTitle, className)}\n        id={id}\n      >\n        {children}\n      </Text>\n    );\n  }\n);\n\nObject.assign(ListTitle, {\n  // Used by VirtualizedListItems\n  displayName: \"ListTitle\"\n});\n\nexport default ListTitle;\n"],"mappings":";;;;;AAkBM,IAAAA,CAAA,GAAsCC,CAAA,CAC1C,UAAAA,CAAA,EAAmED,CAAA;EAAO,IAAvEE,CAAA,GAASD,CAAA,CAATE,SAAA;IAAWC,CAAA,GAAEH,CAAA,CAAFI,EAAA;IAAIC,CAAA,GAAQL,CAAA,CAARM,QAAA;IAAUC,CAAA,GAAQP,CAAA,CAARQ,QAAA;IAAyBC,CAAA,GAAUT,CAAA,CAAzB;IAC9BU,CAAA,GAAeC,CAAA,CAAO;IACtBC,CAAA,GAAYC,CAAA,CAAYd,CAAA,EAAKW,CAAA;EAEnC,OACEI,CAAA,CAAAC,aAAA,CAACC,CAAA,EAAI;IACHC,IAAA,EAAK;IACLC,MAAA,EAAO;IAAA,eACMT,CAAA,IAAcN,CAAA;IACf;IACZK,QAAA,EAAUD,CAAA;IACVY,IAAA,EAAK;IACLC,GAAA,EAAKR,CAAA;IACLV,SAAA,EAAWmB,CAAA,CAAGC,CAAA,CAAOC,SAAA,EAAWtB,CAAA;IAChCG,EAAA,EAAID;EAAA,GAEHE,CAAA,CAGP;AAAA;AAGFmB,MAAA,CAAOC,MAAA,CAAO1B,CAAA,EAAW;EAEvB2B,WAAA,EAAa;AAAA;AAAA,SAAA3B,CAAA,IAAA4B,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
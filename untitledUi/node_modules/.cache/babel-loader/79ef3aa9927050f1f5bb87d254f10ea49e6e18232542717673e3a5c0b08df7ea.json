{"ast":null,"code":"import r, { useMemo as o } from \"react\";\nimport t from \"classnames\";\nimport a from \"./AvatarGroupCounter.js\";\nimport { avatarOnClick as e } from \"./AvatarGroupHelper.js\";\nimport i from \"./AvatarGroup.module.scss.js\";\nvar s = function (s) {\n  var l = s.className,\n    n = s.avatarClassName,\n    p = s.id,\n    u = s.children,\n    c = s.size,\n    d = s.type,\n    v = s.max,\n    m = void 0 === v ? 5 : v,\n    f = s.counterProps,\n    A = s.counterTooltipCustomProps,\n    y = s.counterTooltipIsVirtualizedList,\n    C = void 0 !== y && y,\n    T = s.disabled,\n    z = o(function () {\n      if (!u) return {};\n      var o = Array.isArray(u) ? u : [u];\n      return {\n        displayAvatars: o.slice(0, m).map(function (o, a) {\n          var s, l;\n          return r.cloneElement(o, Object.assign(Object.assign({\n            key: a\n          }, null == o ? void 0 : o.props), {\n            size: c || (null === (s = null == o ? void 0 : o.props) || void 0 === s ? void 0 : s.size),\n            type: d || (null === (l = null == o ? void 0 : o.props) || void 0 === l ? void 0 : l.type),\n            className: t(i.avatarContainer, n),\n            onClick: function (r) {\n              return e(r, o.props);\n            },\n            disabled: T\n          }));\n        }),\n        counterTooltipAvatars: o.slice(m)\n      };\n    }, [n, u, T, m, c, d]),\n    b = z.displayAvatars,\n    j = z.counterTooltipAvatars;\n  return u ? r.createElement(\"div\", {\n    className: t(i.avatarGroupContainer, l),\n    id: p\n  }, b, r.createElement(a, {\n    counterTooltipAvatars: j,\n    counterProps: f,\n    counterTooltipCustomProps: A,\n    counterTooltipIsVirtualizedList: C,\n    size: c,\n    type: d,\n    disabled: T\n  })) : null;\n};\nexport { s as default };","map":{"version":3,"names":["s","AvatarGroup","l","className","n","avatarClassName","p","id","u","children","c","size","d","type","v","max","m","f","counterProps","A","counterTooltipCustomProps","y","counterTooltipIsVirtualizedList","C","T","disabled","z","o","Array","isArray","displayAvatars","slice","map","a","r","cloneElement","Object","assign","key","props","t","i","avatarContainer","onClick","e","counterTooltipAvatars","b","j","createElement","avatarGroupContainer","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/AvatarGroup/AvatarGroup.tsx"],"sourcesContent":["import React, { ReactElement, useMemo } from \"react\";\nimport cx from \"classnames\";\nimport { AvatarProps } from \"../Avatar/Avatar\";\nimport AvatarGroupCounter from \"./AvatarGroupCounter\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport { AvatarSize, AvatarType } from \"../Avatar/Avatar.types\";\nimport { avatarOnClick } from \"./AvatarGroupHelper\";\nimport { TooltipProps } from \"../Tooltip/Tooltip\";\nimport styles from \"./AvatarGroup.module.scss\";\nimport { AvatarGroupCounterVisualProps } from \"./AvatarGroup.types\";\n\nexport interface AvatarGroupProps extends VibeComponentProps {\n  /**\n   * Class name applied to each avatar.\n   */\n  avatarClassName?: string;\n  /**\n   * The avatars displayed in the group.\n   */\n  children?: ReactElement<AvatarProps> | ReactElement<AvatarProps>[];\n  /**\n   * The size of the avatars in the group.\n   */\n  size?: AvatarSize;\n  /**\n   * The type of the avatars in the group.\n   */\n  type?: AvatarType;\n  /**\n   * The maximum number of avatars displayed before showing a counter.\n   */\n  max?: number;\n  /**\n   * Props for customizing the counter display.\n   */\n  counterProps?: AvatarGroupCounterVisualProps;\n  /**\n   * Props passed to the Tooltip component. See full options in the [Tooltip documentation](https://vibe.monday.com/?path=/docs/components-tooltip--docs).\n   */\n  counterTooltipCustomProps?: Partial<TooltipProps>;\n  /**\n   * If true, the counter tooltip uses a virtualized list for performance optimization.\n   */\n  counterTooltipIsVirtualizedList?: boolean;\n  /**\n   * If true, the component is disabled and non-interactive.\n   */\n  disabled?: boolean;\n}\n\nconst AvatarGroup: React.FC<AvatarGroupProps> = ({\n  className,\n  avatarClassName,\n  id,\n  children,\n  size,\n  type,\n  max = 5,\n  counterProps,\n  counterTooltipCustomProps,\n  counterTooltipIsVirtualizedList = false,\n  disabled\n}) => {\n  const { displayAvatars, counterTooltipAvatars } = useMemo(() => {\n    if (!children) {\n      return {};\n    }\n    const childrenArray = Array.isArray(children) ? children : [children];\n    return {\n      displayAvatars: childrenArray.slice(0, max).map((avatar, index) => {\n        return React.cloneElement(avatar, {\n          key: index,\n          ...avatar?.props,\n          size: size || avatar?.props?.size,\n          type: type || avatar?.props?.type,\n          className: cx(styles.avatarContainer, avatarClassName),\n          onClick: (event: React.MouseEvent | React.KeyboardEvent) => avatarOnClick(event, avatar.props),\n          disabled\n        });\n      }),\n      counterTooltipAvatars: childrenArray.slice(max)\n    };\n  }, [avatarClassName, children, disabled, max, size, type]);\n\n  if (!children) {\n    return null;\n  }\n\n  return (\n    <div className={cx(styles.avatarGroupContainer, className)} id={id}>\n      {displayAvatars}\n      <AvatarGroupCounter\n        counterTooltipAvatars={counterTooltipAvatars}\n        counterProps={counterProps}\n        counterTooltipCustomProps={counterTooltipCustomProps}\n        counterTooltipIsVirtualizedList={counterTooltipIsVirtualizedList}\n        size={size}\n        type={type}\n        disabled={disabled}\n      />\n    </div>\n  );\n};\n\nexport default AvatarGroup;\n"],"mappings":";;;;;AAkDA,IAAMA,CAAA,GAA0C,SAAAC,CAA/BD,CAAA;EAYZ,IAXHE,CAAA,GAASF,CAAA,CAATG,SAAA;IACAC,CAAA,GAAeJ,CAAA,CAAfK,eAAA;IACAC,CAAA,GAAEN,CAAA,CAAFO,EAAA;IACAC,CAAA,GAAQR,CAAA,CAARS,QAAA;IACAC,CAAA,GAAIV,CAAA,CAAJW,IAAA;IACAC,CAAA,GAAIZ,CAAA,CAAJa,IAAA;IAAIC,CAAA,GAAAd,CAAA,CACJe,GAAA;IAAAC,CAAA,QAAM,MAAHF,CAAA,GAAG,IAACA,CAAA;IACPG,CAAA,GAAYjB,CAAA,CAAZkB,YAAA;IACAC,CAAA,GAAyBnB,CAAA,CAAzBoB,yBAAA;IAAyBC,CAAA,GAAArB,CAAA,CACzBsB,+BAAA;IAAAC,CAAA,QAAkC,MAAHF,CAAA,IAAQA,CAAA;IACvCG,CAAA,GAAQxB,CAAA,CAARyB,QAAA;IAEAC,CAAA,GAAkDC,CAAA,CAAQ;MACxD,KAAKnB,CAAA,EACH,OAAO;MAET,IAAMmB,CAAA,GAAgBC,KAAA,CAAMC,OAAA,CAAQrB,CAAA,IAAYA,CAAA,GAAW,CAACA,CAAA;MAC5D,OAAO;QACLsB,cAAA,EAAgBH,CAAA,CAAcI,KAAA,CAAM,GAAGf,CAAA,EAAKgB,GAAA,CAAI,UAACL,CAAA,EAAQM,CAAA;UAAA,IAAAjC,CAAA,EAAAE,CAAA;UACvD,OAAOgC,CAAA,CAAMC,YAAA,CAAaR,CAAA,EAAAS,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA;YACxBC,GAAA,EAAKL;UAAA,GACF,QAAAN,CAAA,YAAAA,CAAA,CAAQY,KAAA,GAAK;YAChB5B,IAAA,EAAMD,CAAA,eAAQV,CAAA,WAAA2B,CAAA,YAAAA,CAAA,CAAQY,KAAA,gBAAAvC,CAAA,YAAAA,CAAA,CAAOW,IAAA;YAC7BE,IAAA,EAAMD,CAAA,eAAQV,CAAA,WAAAyB,CAAA,YAAAA,CAAA,CAAQY,KAAA,gBAAArC,CAAA,YAAAA,CAAA,CAAOW,IAAA;YAC7BV,SAAA,EAAWqC,CAAA,CAAGC,CAAA,CAAOC,eAAA,EAAiBtC,CAAA;YACtCuC,OAAA,EAAS,SAAAA,CAACT,CAAA;cAA6C,OAAKU,CAAA,CAAcV,CAAA,EAAOP,CAAA,CAAOY,KAAA,CAAM;YAAA;YAC9Fd,QAAA,EAAAD;UAAA,GAEJ;QAAA;QACAqB,qBAAA,EAAuBlB,CAAA,CAAcI,KAAA,CAAMf,CAAA;MAAA,CAE/C;IAAA,GAAG,CAACZ,CAAA,EAAiBI,CAAA,EAAUgB,CAAA,EAAUR,CAAA,EAAKN,CAAA,EAAME,CAAA;IAnB5CkC,CAAA,GAAcpB,CAAA,CAAdI,cAAA;IAAgBiB,CAAA,GAAqBrB,CAAA,CAArBmB,qBAAA;EAqBxB,OAAKrC,CAAA,GAKH0B,CAAA,CAAAc,aAAA;IAAK7C,SAAA,EAAWqC,CAAA,CAAGC,CAAA,CAAOQ,oBAAA,EAAsB/C,CAAA;IAAYK,EAAA,EAAID;EAAA,GAC7DwC,CAAA,EACDZ,CAAA,CAAAc,aAAA,CAACf,CAAA,EAAkB;IACjBY,qBAAA,EAAuBE,CAAA;IACvB7B,YAAA,EAAcD,CAAA;IACdG,yBAAA,EAA2BD,CAAA;IAC3BG,+BAAA,EAAiCC,CAAA;IACjCZ,IAAA,EAAMD,CAAA;IACNG,IAAA,EAAMD,CAAA;IACNa,QAAA,EAAUD;EAAA,MAbP,IAiBX;AAAA;AAAA,SAAAxB,CAAA,IAAAkD,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { __rest as o } from \"../../../_virtual/_tslib.js\";\nimport t, { forwardRef as s, useContext as e, useRef as i } from \"react\";\nimport r from \"classnames\";\nimport l from \"../../hooks/useMergeRef.js\";\nimport { getTestId as a } from \"../../tests/testIds.js\";\nimport { ComponentDefaultTestId as m } from \"../../tests/constants.js\";\nimport { useEllipsisClass as p, useTooltipProps as n } from \"./TypographyHooks.js\";\nimport d from \"../Tooltip/Tooltip.js\";\nimport { TypographyContext as c } from \"./utils/TypographyContext.js\";\nimport f from \"./Typography.module.scss.js\";\nvar h = s(function (s, h) {\n  var v = s.className,\n    y = s.id,\n    g = s.children,\n    j = s.tooltipProps,\n    u = s[\"data-testid\"],\n    T = void 0 === u ? a(m.TEXT, y) : u,\n    x = s.element,\n    b = void 0 === x ? \"span\" : x,\n    w = s.color,\n    E = void 0 === w ? \"primary\" : w,\n    N = s.align,\n    k = void 0 === N ? \"start\" : N,\n    I = s.ellipsis,\n    L = void 0 === I || I,\n    O = s.maxLines,\n    P = void 0 === O ? 1 : O,\n    _ = s.withoutTooltip,\n    C = void 0 !== _ && _,\n    H = s.role,\n    M = o(s, [\"className\", \"id\", \"children\", \"tooltipProps\", \"data-testid\", \"element\", \"color\", \"align\", \"ellipsis\", \"maxLines\", \"withoutTooltip\", \"role\"]),\n    R = e(c).overflowTolerance,\n    X = i(null),\n    q = l(h, X),\n    z = 1 === P,\n    A = p(L, P),\n    B = A.class,\n    D = A.style,\n    F = n(X, C, L, j, g, z, R),\n    G = \"inherit\" === k ? \"alignInherit\" : k;\n  return t.createElement(d, Object.assign({}, F), t.createElement(b, Object.assign({\n    id: y,\n    style: D,\n    \"data-testid\": T,\n    className: r(f.typography, f[E], f[G], B, v),\n    ref: q,\n    role: H\n  }, M), g));\n});\nexport { h as default };","map":{"version":3,"names":["h","s","v","className","y","id","g","children","j","tooltipProps","u","T","a","m","TEXT","x","element","b","w","color","E","N","align","k","I","ellipsis","L","O","maxLines","P","_","withoutTooltip","C","H","role","M","o","R","e","c","overflowTolerance","X","i","q","l","z","A","p","B","class","D","style","F","n","G","t","createElement","d","Object","assign","r","f","typography","ref","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/Typography/Typography.tsx"],"sourcesContent":["import React, { forwardRef, useRef, HTMLAttributes, useContext } from \"react\";\nimport cx from \"classnames\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport { VibeComponentProps } from \"../../types\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../tests/constants\";\nimport { ElementContent } from \"../../types\";\nimport { TypographyAlign, TypographyColor } from \"./Typography.types\";\nimport { useEllipsisClass, useTooltipProps } from \"./TypographyHooks\";\nimport Tooltip, { TooltipProps } from \"../Tooltip/Tooltip\";\nimport { TypographyContext } from \"./utils/TypographyContext\";\nimport styles from \"./Typography.module.scss\";\n\nexport interface TypographyProps extends VibeComponentProps, HTMLAttributes<HTMLElement> {\n  /**\n   * The HTML element tag used for the text component.\n   */\n  element?: string;\n  /**\n   * The content inside the typography component.\n   */\n  children: ElementContent;\n  /**\n   * The text color.\n   */\n  color?: TypographyColor;\n  /**\n   * The text alignment.\n   */\n  align?: TypographyAlign;\n  /**\n   * If true, truncates overflowing text with an ellipsis.\n   */\n  ellipsis?: boolean;\n  /**\n   * The maximum number of lines before truncating with an ellipsis.\n   */\n  maxLines?: number;\n  /**\n   * Props passed to the tooltip displayed when hovering over the text.\n   */\n  tooltipProps?: Partial<TooltipProps>;\n  /**\n   * If true, disables the tooltip that appears when text is truncated.\n   */\n  withoutTooltip?: boolean;\n}\n\nconst Typography = forwardRef(\n  (\n    {\n      className,\n      id,\n      children,\n      tooltipProps,\n      \"data-testid\": dataTestId = getTestId(ComponentDefaultTestId.TEXT, id),\n      element = \"span\",\n      color = \"primary\",\n      align = \"start\",\n      ellipsis = true,\n      maxLines = 1,\n      withoutTooltip = false,\n      role,\n      ...htmlAttributes\n    }: TypographyProps,\n    ref: React.ForwardedRef<HTMLElement>\n  ) => {\n    const { overflowTolerance } = useContext(TypographyContext);\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n    const ignoreHeightOverflow = maxLines === 1;\n    const { class: ellipsisClass, style: ellipsisStyle } = useEllipsisClass(ellipsis, maxLines);\n    const overrideTooltipProps = useTooltipProps(\n      componentRef,\n      withoutTooltip,\n      ellipsis,\n      tooltipProps,\n      children,\n      ignoreHeightOverflow,\n      overflowTolerance\n    ) as TooltipProps;\n\n    const overrideAlign = align === \"inherit\" ? \"alignInherit\" : align;\n\n    return (\n      <Tooltip {...overrideTooltipProps}>\n        {React.createElement(\n          element,\n          {\n            id,\n            style: ellipsisStyle,\n            \"data-testid\": dataTestId,\n            className: cx(styles.typography, styles[color], styles[overrideAlign], ellipsisClass, className),\n            ref: mergedRef,\n            role,\n            ...htmlAttributes\n          },\n          children\n        )}\n      </Tooltip>\n    );\n  }\n);\n\nexport default Typography;\n"],"mappings":";;;;;;;;;;AAgDM,IAAAA,CAAA,GAAaC,CAAA,CACjB,UACEA,CAAA,EAeAD,CAAA;EAAA,IAdEE,CAAA,GAAAD,CAAA,CAAAE,SAAA;IACAC,CAAA,GAAAH,CAAA,CAAAI,EAAA;IACAC,CAAA,GAAAL,CAAA,CAAAM,QAAA;IACAC,CAAA,GAAAP,CAAA,CAAAQ,YAAA;IAAYC,CAAA,GAAAT,CAAA,CACZ;IAAeU,CAAA,QAAa,MAAHD,CAAA,GAAGE,CAAA,CAAUC,CAAA,CAAuBC,IAAA,EAAMV,CAAA,IAAGM,CAAA;IAAAK,CAAA,GAAAd,CAAA,CACtEe,OAAA;IAAAC,CAAA,QAAU,MAAHF,CAAA,GAAG,SAAMA,CAAA;IAAAG,CAAA,GAAAjB,CAAA,CAChBkB,KAAA;IAAAC,CAAA,QAAQ,MAAHF,CAAA,GAAG,YAASA,CAAA;IAAAG,CAAA,GAAApB,CAAA,CACjBqB,KAAA;IAAAC,CAAA,QAAQ,MAAHF,CAAA,GAAG,UAAOA,CAAA;IAAAG,CAAA,GAAAvB,CAAA,CACfwB,QAAA;IAAAC,CAAA,QAAW,MAAHF,CAAA,IAAOA,CAAA;IAAAG,CAAA,GAAA1B,CAAA,CACf2B,QAAA;IAAAC,CAAA,QAAW,MAAHF,CAAA,GAAG,IAACA,CAAA;IAAAG,CAAA,GAAA7B,CAAA,CACZ8B,cAAA;IAAAC,CAAA,QAAiB,MAAHF,CAAA,IAAQA,CAAA;IACtBG,CAAA,GAAAhC,CAAA,CAAAiC,IAAA;IACGC,CAAA,GAbLC,CAAA,CAAAnC,CAAA;IAiBQoC,CAAA,GAAsBC,CAAA,CAAWC,CAAA,EAAjCC,iBAAA;IACFC,CAAA,GAAeC,CAAA,CAAO;IACtBC,CAAA,GAAYC,CAAA,CAAY5C,CAAA,EAAKyC,CAAA;IAC7BI,CAAA,GAAoC,MAAbhB,CAAA;IAC7BiB,CAAA,GAAuDC,CAAA,CAAiBrB,CAAA,EAAUG,CAAA;IAAnEmB,CAAA,GAAaF,CAAA,CAApBG,KAAA;IAA6BC,CAAA,GAAaJ,CAAA,CAApBK,KAAA;IACxBC,CAAA,GAAuBC,CAAA,CAC3BZ,CAAA,EACAT,CAAA,EACAN,CAAA,EACAlB,CAAA,EACAF,CAAA,EACAuC,CAAA,EACAR,CAAA;IAGIiB,CAAA,GAA0B,cAAV/B,CAAA,GAAsB,iBAAiBA,CAAA;EAE7D,OACEgC,CAAA,CAACC,aAAA,CAAAC,CAAA,EAAYC,MAAA,CAAAC,MAAA,KAAAP,CAAA,GACVG,CAAA,CAAMC,aAAA,CACLvC,CAAA,EAEEyC,MAAA,CAAAC,MAAA;IAAAtD,EAAA,EAAAD,CAAA;IACA+C,KAAA,EAAOD,CAAA;IACP,eAAevC,CAAA;IACfR,SAAA,EAAWyD,CAAA,CAAGC,CAAA,CAAOC,UAAA,EAAYD,CAAA,CAAOzC,CAAA,GAAQyC,CAAA,CAAOP,CAAA,GAAgBN,CAAA,EAAe9C,CAAA;IACtF6D,GAAA,EAAKpB,CAAA;IACLT,IAAA,EAAAD;EAAA,GACGE,CAAA,GAEL7B,CAAA,EAIR;AAAA;AAAA,SAAAN,CAAA,IAAAgE,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
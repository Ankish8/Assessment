{"ast":null,"code":"import { slicedToArray as t, defineProperty as e } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport o, { forwardRef as i, useRef as r, useState as s, useCallback as l, useMemo as a, useEffect as n } from \"react\";\nimport { camelCase as d } from \"lodash-es\";\nimport u from \"classnames\";\nimport { getStyle as p } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport m from \"../Button/Button.js\";\nimport c from \"../../hooks/usePrevious/index.js\";\nimport f from \"../../hooks/useMergeRef.js\";\nimport { ButtonWrapper as v } from \"./ButtonWrapper.js\";\nimport { withStaticProps as b } from \"../../types/withStaticProps.js\";\nimport \"../../utils/colors-vars-map.js\";\nimport { getTestId as h } from \"../../tests/testIds.js\";\nimport { ComponentDefaultTestId as y, ComponentVibeId as B } from \"../../tests/constants.js\";\nimport j from \"./ButtonGroup.module.scss.js\";\nvar k = b(i(function (i, m) {\n  var b = i.className,\n    k = i.options,\n    C = i.name,\n    T = void 0 === C ? \"\" : C,\n    g = i.disabled,\n    N = void 0 !== g && g,\n    P = i.value,\n    x = void 0 === P ? \"\" : P,\n    M = i.onSelect,\n    O = i.size,\n    S = void 0 === O ? \"small\" : O,\n    U = i.kind,\n    D = void 0 === U ? \"secondary\" : U,\n    W = i.groupAriaLabel,\n    z = void 0 === W ? \"\" : W,\n    E = i.tooltipPosition,\n    G = i.tooltipHideDelay,\n    H = i.tooltipShowDelay,\n    I = i.tooltipContainerSelector,\n    _ = i.tooltipMoveBy,\n    w = i.blurOnMouseUp,\n    A = void 0 === w || w,\n    L = i.id,\n    R = i[\"data-testid\"],\n    F = i.fullWidth,\n    q = void 0 !== F && F,\n    J = r(),\n    K = f(m, J),\n    Q = s(x),\n    V = t(Q, 2),\n    X = V[0],\n    Y = V[1],\n    Z = c(x),\n    $ = l(function (t) {\n      N || t.disabled || (Y(t.value), M && M(t.value, T));\n    }, [M, N, T]),\n    tt = function (t) {\n      return (null == t ? void 0 : t.value) === X;\n    },\n    et = a(function () {\n      return k.find(function (t) {\n        return tt(t);\n      });\n    }, [k, X]),\n    ot = a(function () {\n      return k.map(function (t, i) {\n        var r = tt(t),\n          s = 0 === i,\n          l = i === k.length - 1,\n          a = tt(k[i + 1]);\n        return o.createElement(v, {\n          key: t.value,\n          size: S,\n          onClick: function () {\n            return $(t);\n          },\n          rightIcon: t.icon,\n          leftIcon: t.leftIcon,\n          active: r,\n          rightFlat: i !== k.length - 1,\n          leftFlat: 0 !== i,\n          kind: \"tertiary\",\n          preventClickAnimation: !0,\n          ariaLabel: t.ariaLabel,\n          tooltipContent: t.tooltipContent,\n          tooltipPosition: E,\n          tooltipHideDelay: G,\n          tooltipShowDelay: H,\n          tooltipContainerSelector: I,\n          tooltipMoveBy: _,\n          blurOnMouseUp: A,\n          fullWidth: q,\n          className: u(j.button, j.optionText, e(e(e(e(e(e({}, j.selected, r), j.disabled, N), j.buttonDisabled, t.disabled), j.fullWidth, q), j.startBorder, s), j.endBorder, l || !a)),\n          activeButtonClassName: j.activeButton\n        }, t.text);\n      });\n    }, [k, X, S, E, G, H, I, _, A, N, q, $]);\n  return n(function () {\n    x !== Z && x !== X && Y(x);\n  }, [x, Z, X, Y]), o.createElement(\"div\", {\n    className: u(j.buttonGroup, b, p(j, d(\"kind-\" + D)), e({}, j.disabled, N)),\n    id: L,\n    \"data-testid\": R || h(y.BUTTON_GROUP, L),\n    \"data-vibe\": B.BUTTON_GROUP,\n    ref: K\n  }, o.createElement(\"div\", {\n    role: \"group\",\n    \"aria-label\": z,\n    className: u(j.buttonsContainer, e({}, j.fullWidth, q)),\n    \"aria-disabled\": N\n  }, ot), et && et.subText && o.createElement(\"div\", {\n    className: u(j.subTextContainer)\n  }, et.subText));\n}), {\n  sizes: m.sizes,\n  kinds: m.kinds\n});\nexport { k as default };","map":{"version":3,"names":["k","b","i","m","className","options","C","name","T","g","disabled","N","P","value","x","M","onSelect","O","size","S","U","kind","D","W","groupAriaLabel","z","E","tooltipPosition","G","tooltipHideDelay","H","tooltipShowDelay","I","tooltipContainerSelector","_","tooltipMoveBy","w","blurOnMouseUp","A","L","id","R","F","fullWidth","q","J","r","K","f","Q","s","V","t","X","Y","Z","c","$","l","tt","isOptionActive","et","a","find","ot","map","length","o","createElement","v","key","onClick","rightIcon","icon","leftIcon","active","rightFlat","leftFlat","preventClickAnimation","ariaLabel","tooltipContent","u","j","button","optionText","e","selected","buttonDisabled","startBorder","endBorder","activeButtonClassName","activeButton","text","n","buttonGroup","p","d","h","y","BUTTON_GROUP","B","ref","role","buttonsContainer","subText","subTextContainer","sizes","kinds","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/ButtonGroup/ButtonGroup.tsx"],"sourcesContent":["import React, { forwardRef, useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { camelCase } from \"lodash-es\";\nimport cx from \"classnames\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport Button from \"../Button/Button\";\nimport usePrevious from \"../../hooks/usePrevious\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport { ButtonValue } from \"./ButtonGroupConstants\";\nimport { ButtonWrapper } from \"./ButtonWrapper\";\nimport { SIZES } from \"../../constants\";\nimport { ButtonType as ButtonTypeEnum } from \"../Button/ButtonConstants\";\nimport { ButtonType, ButtonSize } from \"../Button\";\nimport { SubIcon, VibeComponentProps, withStaticProps } from \"../../types\";\nimport { MoveBy } from \"../../types/MoveBy\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId, ComponentVibeId } from \"../../tests/constants\";\nimport styles from \"./ButtonGroup.module.scss\";\nimport { TooltipPositions } from \"../Tooltip\";\n\ntype ButtonGroupOption = {\n  icon?: SubIcon;\n  leftIcon?: SubIcon;\n  ariaLabel?: string;\n  subText?: string;\n  value: ButtonValue;\n  text: string;\n  disabled?: boolean;\n  tooltipContent?: string;\n};\n\nexport interface ButtonGroupProps extends VibeComponentProps {\n  /**\n   * The list of button options.\n   */\n  options: Array<ButtonGroupOption>;\n  /**\n   * The currently selected button value.\n   */\n  value?: ButtonValue;\n  /**\n   * Callback fired when a button is selected.\n   */\n  onSelect?: (value: ButtonValue, name: string) => void;\n  /**\n   * The size of the buttons.\n   */\n  size?: ButtonSize;\n  /**\n   * The style variant of the buttons.\n   */\n  kind?: Extract<ButtonType, \"secondary\" | \"tertiary\">;\n  /**\n   * The name of the button group.\n   */\n  name?: string;\n  /**\n   * If true, disables all buttons in the group.\n   */\n  disabled?: boolean;\n  /**\n   * The label of the button group for accessibility.\n   */\n  groupAriaLabel?: string;\n  /**\n   * The position of the tooltip relative to the button.\n   */\n  tooltipPosition?: TooltipPositions;\n  /**\n   * The delay in milliseconds before the tooltip hides.\n   */\n  tooltipHideDelay?: number;\n  /**\n   * The delay in milliseconds before the tooltip shows.\n   */\n  tooltipShowDelay?: number;\n  /**\n   * CSS selector for the tooltip container.\n   */\n  tooltipContainerSelector?: string;\n  /**\n   * Adjusts the tooltip position.\n   */\n  tooltipMoveBy?: MoveBy;\n  /**\n   * The content inside the button group.\n   */\n  children?: React.ReactNode;\n  /**\n   * If true, makes the button group take the full width of its container.\n   */\n  fullWidth?: boolean;\n  /**\n   * If true, removes focus from the button after clicking.\n   */\n  blurOnMouseUp?: boolean;\n}\n\nconst ButtonGroup = forwardRef(\n  (\n    {\n      className,\n      options,\n      name = \"\",\n      disabled = false,\n      value = \"\",\n      onSelect,\n      size = \"small\",\n      kind = \"secondary\",\n      groupAriaLabel = \"\",\n      tooltipPosition,\n      tooltipHideDelay,\n      tooltipShowDelay,\n      tooltipContainerSelector,\n      tooltipMoveBy,\n      blurOnMouseUp = true,\n      id,\n      \"data-testid\": dataTestId,\n      fullWidth = false\n    }: ButtonGroupProps,\n    ref: React.ForwardedRef<HTMLDivElement>\n  ) => {\n    const inputRef = useRef();\n    const mergedRef = useMergeRef(ref, inputRef);\n\n    const [valueState, setValueState] = useState(value);\n    const prevValue = usePrevious(value);\n\n    const onClick = useCallback(\n      (option: ButtonGroupOption) => {\n        const isDisabled = disabled || option.disabled;\n        if (!isDisabled) {\n          setValueState(option.value);\n          if (onSelect) {\n            onSelect(option.value, name);\n          }\n        }\n      },\n      [onSelect, disabled, name]\n    );\n\n    const isOptionActive = (option?: ButtonGroupOption) => option?.value === valueState;\n\n    const selectedOption = useMemo(() => {\n      return options.find(option => isOptionActive(option));\n    }, [options, valueState]);\n\n    const Buttons = useMemo(() => {\n      return options.map((option, index) => {\n        const isSelected = isOptionActive(option);\n        const isFirst = index === 0;\n        const isLast = index === options.length - 1;\n        const isNextOptionActive = isOptionActive(options[index + 1]);\n\n        return (\n          <ButtonWrapper\n            key={option.value}\n            size={size}\n            onClick={() => onClick(option)}\n            rightIcon={option.icon}\n            leftIcon={option.leftIcon}\n            active={isSelected}\n            rightFlat={index !== options.length - 1}\n            leftFlat={index !== 0}\n            kind=\"tertiary\"\n            preventClickAnimation\n            ariaLabel={option.ariaLabel}\n            tooltipContent={option.tooltipContent}\n            tooltipPosition={tooltipPosition}\n            tooltipHideDelay={tooltipHideDelay}\n            tooltipShowDelay={tooltipShowDelay}\n            tooltipContainerSelector={tooltipContainerSelector}\n            tooltipMoveBy={tooltipMoveBy}\n            blurOnMouseUp={blurOnMouseUp}\n            fullWidth={fullWidth}\n            className={cx(styles.button, styles.optionText, {\n              [styles.selected]: isSelected,\n              [styles.disabled]: disabled,\n              [styles.buttonDisabled]: option.disabled,\n              [styles.fullWidth]: fullWidth,\n              [styles.startBorder]: isFirst,\n              [styles.endBorder]: isLast || !isNextOptionActive\n            })}\n            activeButtonClassName={styles.activeButton}\n          >\n            {option.text}\n          </ButtonWrapper>\n        );\n      });\n    }, [\n      options,\n      valueState,\n      size,\n      tooltipPosition,\n      tooltipHideDelay,\n      tooltipShowDelay,\n      tooltipContainerSelector,\n      tooltipMoveBy,\n      blurOnMouseUp,\n      disabled,\n      fullWidth,\n      onClick\n    ]);\n\n    // Effects\n    useEffect(() => {\n      // Update value if changed from props\n      if (value !== prevValue && value !== valueState) {\n        setValueState(value);\n      }\n    }, [value, prevValue, valueState, setValueState]);\n\n    return (\n      <div\n        className={cx(styles.buttonGroup, className, getStyle(styles, camelCase(\"kind-\" + kind)), {\n          [styles.disabled]: disabled\n        })}\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.BUTTON_GROUP, id)}\n        data-vibe={ComponentVibeId.BUTTON_GROUP}\n        ref={mergedRef}\n      >\n        <div\n          role=\"group\"\n          aria-label={groupAriaLabel}\n          className={cx(styles.buttonsContainer, { [styles.fullWidth]: fullWidth })}\n          aria-disabled={disabled}\n        >\n          {Buttons}\n        </div>\n        {selectedOption && selectedOption.subText && (\n          <div className={cx(styles.subTextContainer)}>{selectedOption.subText}</div>\n        )}\n      </div>\n    );\n  }\n);\n\ninterface ButtonGroupStaticProps {\n  sizes: typeof SIZES;\n  kinds: typeof ButtonTypeEnum;\n}\n\nexport default withStaticProps<ButtonGroupProps, ButtonGroupStaticProps>(ButtonGroup, {\n  sizes: Button.sizes,\n  kinds: Button.kinds\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
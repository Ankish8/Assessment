{"ast":null,"code":"import { defineProperty as e } from \"../../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { getTestId as r, ComponentDefaultTestId as t } from \"../../../tests/testIds.js\";\nimport i from \"classnames\";\nimport o, { useRef as s } from \"react\";\nimport a from \"../../../hooks/useIsOverflowing/useIsOverflowing.js\";\nimport l from \"../../Tooltip/Tooltip.js\";\nimport { BreadcrumbContent as d } from \"./BreadcrumbContent/BreadcrumbContent.js\";\nimport m from \"./BreadcrumbItem.module.scss.js\";\nvar n = function (n) {\n  var c = n.className,\n    u = n.text,\n    f = void 0 === u ? \"\" : u,\n    p = n.disabled,\n    b = n.isClickable,\n    g = void 0 !== b && b,\n    v = n.link,\n    C = n.onClick,\n    T = n.isCurrent,\n    h = void 0 !== T && T,\n    k = n.icon,\n    w = n.id,\n    B = n.showText,\n    j = void 0 === B || B,\n    I = n[\"data-testid\"],\n    x = s(null),\n    E = a({\n      ref: x\n    });\n  return o.createElement(l, {\n    disableDialogSlide: !0,\n    withoutDialog: !1,\n    content: (E || !j) && f,\n    showTrigger: [\"mouseenter\"],\n    hideTrigger: [\"mouseleave\"],\n    addKeyboardHideShowTriggersByDefault: !j\n  }, o.createElement(\"li\", {\n    id: w,\n    \"data-testid\": I || r(t.BREADCRUMB_ITEM, w),\n    className: i(m.breadcrumbItemWrapper, c, e({}, m.disabled, p))\n  }, o.createElement(d, {\n    ref: x,\n    isClickable: g,\n    link: v,\n    onClick: C,\n    text: f,\n    icon: k,\n    isCurrent: h,\n    disabled: p,\n    showText: j\n  })));\n};\nexport { n as default };","map":{"version":3,"names":["n","BreadcrumbItem","c","className","u","text","f","p","disabled","b","isClickable","g","v","link","C","onClick","T","isCurrent","h","k","icon","w","id","B","showText","j","I","x","s","E","a","ref","o","createElement","l","disableDialogSlide","withoutDialog","content","showTrigger","hideTrigger","addKeyboardHideShowTriggersByDefault","r","t","BREADCRUMB_ITEM","i","m","breadcrumbItemWrapper","e","d","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/BreadcrumbsBar/BreadcrumbItem/BreadcrumbItem.tsx"],"sourcesContent":["import { ComponentDefaultTestId, getTestId } from \"../../../tests/test-ids-utils\";\nimport cx from \"classnames\";\nimport React, { useRef } from \"react\";\nimport useIsOverflowing from \"../../../hooks/useIsOverflowing/useIsOverflowing\";\nimport Tooltip from \"../../../components/Tooltip/Tooltip\";\nimport { BreadcrumbContent } from \"./BreadcrumbContent/BreadcrumbContent\";\nimport { SubIcon, VibeComponentProps } from \"../../../types\";\nimport styles from \"./BreadcrumbItem.module.scss\";\n\nexport interface BreadcrumbItemProps extends VibeComponentProps {\n  /**\n   * The display text of the breadcrumb item.\n   */\n  text?: string;\n  /**\n   * If true, the item is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * If true, the item is clickable.\n   */\n  isClickable?: boolean;\n  /**\n   * The URL the item links to if navigation is handled via a link.\n   */\n  link?: string;\n  /**\n   * Callback fired when the item is clicked.\n   */\n  onClick?: () => void;\n  /**\n   * If true, applies styling for the current page.\n   */\n  isCurrent?: boolean;\n  /**\n   * The icon displayed next to the text.\n   */\n  icon?: SubIcon;\n  /**\n   * If true, the breadcrumb text is shown.\n   */\n  showText?: boolean;\n}\n\nconst BreadcrumbItem: React.FC<BreadcrumbItemProps> = ({\n  className,\n  text = \"\",\n  disabled,\n  isClickable = false,\n  link,\n  onClick,\n  isCurrent = false,\n  icon,\n  id,\n  showText = true,\n  \"data-testid\": dataTestId\n}) => {\n  const componentRef = useRef<HTMLSpanElement>(null);\n  const isOverflowing = useIsOverflowing({ ref: componentRef });\n\n  return (\n    <Tooltip\n      disableDialogSlide={true}\n      withoutDialog={false}\n      content={(isOverflowing || !showText) && text}\n      showTrigger={[\"mouseenter\"]}\n      hideTrigger={[\"mouseleave\"]}\n      addKeyboardHideShowTriggersByDefault={!showText}\n    >\n      <li\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.BREADCRUMB_ITEM, id)}\n        className={cx(styles.breadcrumbItemWrapper, className, {\n          [styles.disabled]: disabled\n        })}\n      >\n        <BreadcrumbContent\n          ref={componentRef}\n          isClickable={isClickable}\n          link={link}\n          onClick={onClick}\n          text={text}\n          icon={icon}\n          isCurrent={isCurrent}\n          disabled={disabled}\n          showText={showText}\n        />\n      </li>\n    </Tooltip>\n  );\n};\n\nexport default BreadcrumbItem;\n"],"mappings":";;;;;;;;AA4CA,IAAMA,CAAA,GAAgD,SAAAC,CAAlCD,CAAA;EAYf,IAXHE,CAAA,GAASF,CAAA,CAATG,SAAA;IAASC,CAAA,GAAAJ,CAAA,CACTK,IAAA;IAAAC,CAAA,QAAO,MAAHF,CAAA,GAAG,KAAEA,CAAA;IACTG,CAAA,GAAQP,CAAA,CAARQ,QAAA;IAAQC,CAAA,GAAAT,CAAA,CACRU,WAAA;IAAAC,CAAA,QAAc,MAAHF,CAAA,IAAQA,CAAA;IACnBG,CAAA,GAAIZ,CAAA,CAAJa,IAAA;IACAC,CAAA,GAAOd,CAAA,CAAPe,OAAA;IAAOC,CAAA,GAAAhB,CAAA,CACPiB,SAAA;IAAAC,CAAA,QAAY,MAAHF,CAAA,IAAQA,CAAA;IACjBG,CAAA,GAAInB,CAAA,CAAJoB,IAAA;IACAC,CAAA,GAAErB,CAAA,CAAFsB,EAAA;IAAEC,CAAA,GAAAvB,CAAA,CACFwB,QAAA;IAAAC,CAAA,QAAW,MAAHF,CAAA,IAAOA,CAAA;IACAG,CAAA,GAAU1B,CAAA,CAAzB;IAEM2B,CAAA,GAAeC,CAAA,CAAwB;IACvCC,CAAA,GAAgBC,CAAA,CAAiB;MAAEC,GAAA,EAAKJ;IAAA;EAE9C,OACEK,CAAA,CAACC,aAAA,CAAAC,CAAA,EACC;IAAAC,kBAAA,GAAoB;IACpBC,aAAA,GAAe;IACfC,OAAA,GAAUR,CAAA,KAAkBJ,CAAA,KAAanB,CAAA;IACzCgC,WAAA,EAAa,CAAC;IACdC,WAAA,EAAa,CAAC;IACdC,oCAAA,GAAuCf;EAAA,GAEvCO,CAAA,CACEC,aAAA;IAAAX,EAAA,EAAID,CAAA;IACS,eAAAK,CAAA,IAAce,CAAA,CAAUC,CAAA,CAAuBC,eAAA,EAAiBtB,CAAA;IAC7ElB,SAAA,EAAWyC,CAAA,CAAGC,CAAA,CAAOC,qBAAA,EAAuB5C,CAAA,EAAS6C,CAAA,KAClDF,CAAA,CAAOrC,QAAA,EAAWD,CAAA;EAAA,GAGrByB,CAAA,CAAAC,aAAA,CAACe,CAAA,EACC;IAAAjB,GAAA,EAAKJ,CAAA;IACLjB,WAAA,EAAaC,CAAA;IACbE,IAAA,EAAMD,CAAA;IACNG,OAAA,EAASD,CAAA;IACTT,IAAA,EAAMC,CAAA;IACNc,IAAA,EAAMD,CAAA;IACNF,SAAA,EAAWC,CAAA;IACXV,QAAA,EAAUD,CAAA;IACViB,QAAA,EAAUC;EAAA,IAKpB;AAAA;AAAA,SAAAzB,CAAA,IAAAiD,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
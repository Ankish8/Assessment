{"ast":null,"code":"import { defineProperty as e } from \"../../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport r, { forwardRef as t } from \"react\";\nimport o from \"./TableHeader.module.scss.js\";\nimport s from \"classnames\";\nimport { getTestId as a } from \"../../../tests/testIds.js\";\nimport { ComponentDefaultTestId as l } from \"../../../tests/constants.js\";\nimport { useTable as i } from \"../context/TableContext/TableContext.js\";\nimport m from \"../../../hooks/useMergeRef.js\";\nvar d = t(function (t, d) {\n  var n = t.id,\n    f = t.className,\n    p = t[\"data-testid\"],\n    c = t.children,\n    u = i(),\n    j = u.onHeadScroll,\n    b = u.isVirtualized,\n    v = m(u.headRef, d);\n  return r.createElement(\"div\", {\n    ref: v,\n    id: n,\n    className: s(o.tableHeader, e({}, o.virtualized, b), f),\n    \"data-testid\": p || a(l.TABLE_HEADER, n),\n    role: \"rowgroup\",\n    onScroll: j\n  }, c);\n});\nexport { d as default };","map":{"version":3,"names":["d","t","n","id","f","className","p","c","children","u","i","j","onHeadScroll","b","isVirtualized","v","m","headRef","r","createElement","ref","s","o","tableHeader","e","virtualized","a","l","TABLE_HEADER","role","onScroll","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/Table/TableHeader/TableHeader.tsx"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport { VibeComponentProps } from \"../../../types\";\nimport styles from \"./TableHeader.module.scss\";\nimport { TableHeaderCellProps } from \"../TableHeaderCell/TableHeaderCell\";\nimport cx from \"classnames\";\nimport { getTestId } from \"../../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../../tests/constants\";\nimport { useTable } from \"../context/TableContext/TableContext\";\nimport useMergeRef from \"../../../hooks/useMergeRef\";\n\nexport interface TableHeaderProps extends VibeComponentProps {\n  /**\n   * The child elements inside the table header, typically `<TableHeaderCell />` components.\n   */\n  children?: React.ReactElement<TableHeaderCellProps> | React.ReactElement<TableHeaderCellProps>[];\n}\n\nconst TableHeader = forwardRef(\n  (\n    { id, className, \"data-testid\": dataTestId, children }: TableHeaderProps,\n    ref: React.ForwardedRef<HTMLDivElement>\n  ) => {\n    const { headRef, onHeadScroll, isVirtualized } = useTable();\n    const mergedRef = useMergeRef(headRef, ref);\n\n    return (\n      <div\n        ref={mergedRef}\n        id={id}\n        className={cx(styles.tableHeader, { [styles.virtualized]: isVirtualized }, className)}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.TABLE_HEADER, id)}\n        role=\"rowgroup\"\n        onScroll={onHeadScroll}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n\nexport default TableHeader;\n"],"mappings":";;;;;;;;AAiBM,IAAAA,CAAA,GAAcC,CAAA,CAClB,UAAAA,CAAA,EAEED,CAAA;EACE,IAFAE,CAAA,GAAED,CAAA,CAAFE,EAAA;IAAIC,CAAA,GAASH,CAAA,CAATI,SAAA;IAA0BC,CAAA,GAAUL,CAAA,CAAzB;IAA2BM,CAAA,GAAQN,CAAA,CAARO,QAAA;IAG5CC,CAAA,GAAiDC,CAAA;IAAhCC,CAAA,GAAYF,CAAA,CAAZG,YAAA;IAAcC,CAAA,GAAaJ,CAAA,CAAbK,aAAA;IACzBC,CAAA,GAAYC,CAAA,CADHP,CAAA,CAAPQ,OAAA,EAC+BjB,CAAA;EAEvC,OACEkB,CAAA,CACEC,aAAA;IAAAC,GAAA,EAAKL,CAAA;IACLZ,EAAA,EAAID,CAAA;IACJG,SAAA,EAAWgB,CAAA,CAAGC,CAAA,CAAOC,WAAA,EAAWC,CAAA,CAAK,IAAAF,CAAA,CAAOG,WAAA,EAAcZ,CAAA,GAAiBT,CAAA;IAAU,eACxEE,CAAA,IAAcoB,CAAA,CAAUC,CAAA,CAAuBC,YAAA,EAAc1B,CAAA;IAC1E2B,IAAA,EAAK;IACLC,QAAA,EAAUnB;EAAA,GAETJ,CAAA,CAGP;AAAA;AAAA,SAAAP,CAAA,IAAA+B,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
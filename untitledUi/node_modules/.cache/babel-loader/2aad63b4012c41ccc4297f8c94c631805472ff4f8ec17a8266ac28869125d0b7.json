{"ast":null,"code":"import { defineProperty as e } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { getStyle as t } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport r from \"classnames\";\nimport n, { forwardRef as o, useMemo as a } from \"react\";\nimport s from \"../IconButton/IconButton.js\";\nimport { AlertBannerBackgroundColor as i } from \"./AlertBannerConstants.js\";\nimport { NOOP as l } from \"../../utils/function-utils.js\";\nimport { ComponentDefaultTestId as m } from \"../../tests/constants.js\";\nimport { getTestId as c } from \"../../tests/testIds.js\";\nimport { withStaticProps as p } from \"../../types/withStaticProps.js\";\nimport \"../../utils/colors-vars-map.js\";\nimport d from \"./AlertBanner.module.scss.js\";\nimport u from \"../Text/Text.js\";\nimport { AlertBannerContext as f } from \"./AlertBannerContext.js\";\nimport v from \"../../../icons/dist/react/CloseSmall.js\";\nvar B = p(o(function (o, i) {\n  var p = o.children,\n    B = o.className,\n    b = o.backgroundColor,\n    j = void 0 === b ? \"primary\" : b,\n    y = o.onClose,\n    A = void 0 === y ? l : y,\n    C = o.ariaLabel,\n    k = void 0 === C ? \"\" : C,\n    E = o.closeButtonAriaLabel,\n    x = void 0 === E ? \"Close\" : E,\n    N = o.isCloseHidden,\n    g = void 0 !== N && N,\n    I = o.id,\n    T = o[\"data-testid\"],\n    h = a(function () {\n      return r(B, d.alertBanner, t(d, j));\n    }, [B, j]),\n    L = \"dark\" === j,\n    P = \"warning\" === j,\n    D = a(function () {\n      return P ? \"fixedDark\" : L ? \"onInverted\" : \"onPrimary\";\n    }, [L, P]),\n    H = a(function () {\n      return n.Children.toArray(p).filter(function (e) {\n        return !(!e.type.isAlertBannerItem && \"MDXCreateElement\" !== e.type.displayName) || (console.error(\"Alert banner child is not supported. Please use AlertBannerText, AlertBannerLink or AlertBannerButton.\", e), !1);\n      }).map(function (e, t) {\n        return n.cloneElement(e, Object.assign(Object.assign({}, null == e ? void 0 : e.props), {\n          marginLeft: t > 0,\n          isDarkBackground: L\n        }));\n      });\n    }, [p, L]);\n  return n.createElement(u, {\n    type: \"text2\",\n    color: D,\n    ref: i,\n    className: h,\n    role: \"banner\",\n    \"aria-label\": k || \"banner\",\n    id: I,\n    \"data-testid\": T || c(m.ALERT_BANNER, I)\n  }, n.createElement(f.Provider, {\n    value: {\n      textColor: D\n    }\n  }, n.createElement(\"div\", {\n    className: r(d.content)\n  }, H.map(function (t, o) {\n    var a = t.type.isAlertBannerText;\n    return n.createElement(\"div\", {\n      key: o,\n      className: r(d.contentItem, e({}, d.contentItemText, a))\n    }, a ? n.createElement(\"div\", {\n      className: r(d.ellipsis)\n    }, t) : t);\n  }))), n.createElement(\"div\", {\n    className: r(d.closeButtonWrapper)\n  }, g ? null : n.createElement(s, {\n    \"data-testid\": \"alert-banner-close-button\",\n    icon: v,\n    className: r(d.closeBtn),\n    hideTooltip: !0,\n    onClick: A,\n    size: \"small\",\n    kind: \"tertiary\",\n    color: L ? \"on-inverted-background\" : \"on-primary-color\",\n    ariaLabel: x\n  })));\n}), {\n  backgroundColors: i\n});\nexport { B as default };","map":{"version":3,"names":["B","p","o","i","children","className","b","backgroundColor","j","y","onClose","A","l","C","ariaLabel","k","E","closeButtonAriaLabel","x","N","isCloseHidden","g","I","id","T","h","a","r","d","alertBanner","t","L","P","D","H","n","Children","toArray","filter","e","type","isAlertBannerItem","displayName","console","error","map","cloneElement","Object","assign","props","marginLeft","isDarkBackground","createElement","u","color","ref","role","c","m","ALERT_BANNER","f","Provider","value","textColor","content","isAlertBannerText","key","contentItem","contentItemText","ellipsis","closeButtonWrapper","s","icon","v","closeBtn","hideTooltip","onClick","size","kind","backgroundColors","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/AlertBanner/AlertBanner.tsx"],"sourcesContent":["import { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport cx from \"classnames\";\nimport React, { ForwardedRef, forwardRef, ReactElement, useMemo } from \"react\";\nimport IconButton from \"../../components/IconButton/IconButton\";\nimport { CloseSmall } from \"@vibe/icons\";\nimport { AlertBannerBackgroundColor as AlertBannerBackgroundColorEnum } from \"./AlertBannerConstants\";\nimport { AlertBannerBackgroundColor } from \"./AlertBanner.types\";\nimport { NOOP } from \"../../utils/function-utils\";\nimport { AlertBannerLinkProps } from \"./AlertBannerLink/AlertBannerLink\";\nimport { AlertBannerButtonProps } from \"./AlertBannerButton/AlertBannerButton\";\nimport { AlertBannerTextProps } from \"./AlertBannerText/AlertBannerText\";\nimport { ComponentDefaultTestId } from \"../../tests/constants\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport { VibeComponentProps, withStaticProps } from \"../../types\";\nimport styles from \"./AlertBanner.module.scss\";\nimport Text from \"../Text/Text\";\nimport { AlertBannerContext } from \"./AlertBannerContext\";\n\ntype ChildrenType = ReactElement<AlertBannerButtonProps | AlertBannerLinkProps | AlertBannerTextProps>;\n\nexport interface AlertBannerProps extends VibeComponentProps {\n  /**\n   * The background color of the alert banner.\n   */\n  backgroundColor?: AlertBannerBackgroundColor;\n  /**\n   * If true, the close button is hidden.\n   */\n  isCloseHidden?: boolean;\n  /**\n   * The ARIA label of the alert banner for accessibility.\n   */\n  ariaLabel?: string;\n  /**\n   * The ARIA label of the close button for accessibility.\n   */\n  closeButtonAriaLabel?: string;\n  /**\n   * Callback fired when the close button is clicked.\n   */\n  onClose?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  /**\n   * The content of the alert banner.\n   */\n  children?: ChildrenType | ChildrenType[];\n}\n\nconst AlertBanner = forwardRef(\n  (\n    {\n      children: originalChildren,\n      className,\n      backgroundColor = \"primary\",\n      onClose = NOOP,\n      ariaLabel = \"\",\n      closeButtonAriaLabel = \"Close\",\n      isCloseHidden = false,\n      id,\n      \"data-testid\": dataTestId\n    }: AlertBannerProps,\n    ref: ForwardedRef<HTMLDivElement>\n  ) => {\n    const classNames = useMemo(() => {\n      return cx(className, styles.alertBanner, getStyle(styles, backgroundColor));\n    }, [className, backgroundColor]);\n\n    const isDarkBackground = backgroundColor === \"dark\";\n    const isFixedColor = backgroundColor === \"warning\";\n    const textColor = useMemo(() => {\n      if (isFixedColor) {\n        return \"fixedDark\";\n      }\n      return isDarkBackground ? \"onInverted\" : \"onPrimary\";\n    }, [isDarkBackground, isFixedColor]);\n    const children = useMemo(() => {\n      const allChildren = React.Children.toArray(originalChildren) as ReactElement[];\n      const filteredChildren = allChildren.filter(\n        (\n          child: ReactElement & {\n            type: Record<string, unknown>;\n          }\n        ) => {\n          if (child.type.isAlertBannerItem || child.type.displayName === \"MDXCreateElement\") return true;\n          console.error(\n            \"Alert banner child is not supported. Please use AlertBannerText, AlertBannerLink or AlertBannerButton.\",\n            child\n          );\n          return false;\n        }\n      );\n\n      return filteredChildren.map((child, index) => {\n        return React.cloneElement(child, {\n          ...child?.props,\n          marginLeft: index > 0,\n          isDarkBackground\n        });\n      });\n    }, [originalChildren, isDarkBackground]);\n\n    return (\n      <Text\n        type=\"text2\"\n        color={textColor}\n        ref={ref}\n        className={classNames}\n        role=\"banner\"\n        aria-label={ariaLabel || \"banner\"}\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.ALERT_BANNER, id)}\n      >\n        <AlertBannerContext.Provider value={{ textColor }}>\n          <div className={cx(styles.content)}>\n            {children.map(\n              (\n                child: ReactElement & {\n                  type: Record<string, unknown>;\n                },\n                index\n              ) => {\n                const childTypeIsAlertBannerText = child.type.isAlertBannerText;\n                return (\n                  <div\n                    key={index}\n                    className={cx(styles.contentItem, {\n                      [styles.contentItemText]: childTypeIsAlertBannerText\n                    })}\n                  >\n                    {childTypeIsAlertBannerText ? <div className={cx(styles.ellipsis)}>{child}</div> : child}\n                  </div>\n                );\n              }\n            )}\n          </div>\n        </AlertBannerContext.Provider>\n        <div className={cx(styles.closeButtonWrapper)}>\n          {isCloseHidden ? null : (\n            <IconButton\n              data-testid=\"alert-banner-close-button\"\n              icon={CloseSmall}\n              className={cx(styles.closeBtn)}\n              hideTooltip\n              onClick={onClose}\n              size=\"small\"\n              kind=\"tertiary\"\n              color={isDarkBackground ? \"on-inverted-background\" : \"on-primary-color\"}\n              ariaLabel={closeButtonAriaLabel}\n            />\n          )}\n        </div>\n      </Text>\n    );\n  }\n);\n\ninterface AlertBannerStaticProps {\n  backgroundColors: typeof AlertBannerBackgroundColorEnum;\n}\n\nexport default withStaticProps<AlertBannerProps, AlertBannerStaticProps>(AlertBanner, {\n  backgroundColors: AlertBannerBackgroundColorEnum\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var e = function () {\n  return {\n    name: \"observeContentResize\",\n    enabled: arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n    phase: \"beforeWrite\",\n    fn: function () {},\n    effect: function (e) {\n      var n = e.state,\n        t = e.instance,\n        r = new ResizeObserver(function () {\n          t.update();\n        });\n      return r.observe(n.elements.popper), function () {\n        r.disconnect();\n      };\n    }\n  };\n};\nexport { e as createObserveContentResizeModifier };","map":{"version":3,"names":["e","createObserveContentResizeModifier","name","enabled","arguments","length","phase","fn","effect","n","state","t","instance","r","ResizeObserver","update","observe","elements","popper","disconnect"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/Dialog/modifiers/observeContentResizeModifier.ts"],"sourcesContent":["import { Modifier } from \"react-popper\";\n\nexport const createObserveContentResizeModifier = (isEnabled = false): Modifier<\"observeContentResize\"> => ({\n  name: \"observeContentResize\",\n  enabled: isEnabled,\n  phase: \"beforeWrite\",\n  fn() {},\n  effect({ state, instance }) {\n    const observer = new ResizeObserver(() => {\n      instance.update();\n    });\n    observer.observe(state.elements.popper);\n\n    return () => {\n      observer.disconnect();\n    };\n  }\n});\n"],"mappings":"AAEa,IAAAA,CAAA,GAAqC,SAAAC,CAAA;EAAkB,OAAwC;IAC1GC,IAAA,EAAM;IACNC,OAAA,EAF0DC,SAAA,CAAAC,MAAA,mBAAAD,SAAA,OAAAA,SAAA;IAG1DE,KAAA,EAAO;IACPC,EAAA,EAAE,SAAAA,CAAA,GAAK;IACPC,MAAA,EAAM,SAAAA,CAAAR,CAAA;MAAoB,IAAjBS,CAAA,GAAKT,CAAA,CAALU,KAAA;QAAOC,CAAA,GAAQX,CAAA,CAARY,QAAA;QACRC,CAAA,GAAW,IAAIC,cAAA,CAAe;UAClCH,CAAA,CAASI,MAAA,EACX;QAAA;MAGA,OAFAF,CAAA,CAASG,OAAA,CAAQP,CAAA,CAAMQ,QAAA,CAASC,MAAA,GAEzB;QACLL,CAAA,CAASM,UAAA;MAAA,CAEb;IAAA;EAAA,CACD;AAAA;AAAA,SAAAnB,CAAA,IAAAC,kCAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
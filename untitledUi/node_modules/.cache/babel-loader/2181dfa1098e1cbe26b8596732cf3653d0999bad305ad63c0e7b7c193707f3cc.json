{"ast":null,"code":"import { slicedToArray as r } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { useState as e, useCallback as t } from \"react\";\nimport i from \"../useResizeObserver.js\";\nfunction n(r, e) {\n  return !!r && (r.scrollWidth > r.clientWidth + (arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0) || !e && r.scrollHeight > r.clientHeight + (arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0));\n}\nfunction o(o) {\n  var l = o.ref,\n    u = o.ignoreHeightOverflow,\n    c = void 0 !== u && u,\n    a = o.tolerance,\n    f = o.widthTolerance,\n    d = e(function () {\n      return n(null == l ? void 0 : l.current, c, a, f);\n    }),\n    s = r(d, 2),\n    v = s[0],\n    h = s[1],\n    g = t(function () {\n      var r = null == l ? void 0 : l.current;\n      if (r) {\n        var e = n(r, c, a, f);\n        h(function (r) {\n          return r !== e ? e : r;\n        });\n      }\n    }, [c, l, a, f]);\n  return i({\n    ref: l,\n    callback: g,\n    debounceTime: 0\n  }), v;\n}\nexport { o as default };","map":{"version":3,"names":["n","r","e","scrollWidth","clientWidth","arguments","length","scrollHeight","clientHeight","o","l","ref","u","ignoreHeightOverflow","c","a","tolerance","f","widthTolerance","d","current","s","v","h","g","t","i","callback","debounceTime","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/hooks/useIsOverflowing/useIsOverflowing.ts"],"sourcesContent":["import { RefObject, useCallback, useState } from \"react\";\nimport useResizeObserver from \"../useResizeObserver\";\n\nfunction checkOverflow(element: HTMLElement, ignoreHeightOverflow: boolean, heightTolerance = 0, widthTolerance = 0) {\n  if (!element) {\n    return false;\n  }\n  const isOverflowingWidth = element.clientWidth + widthTolerance < element.scrollWidth;\n  const isOverflowingHeight = !ignoreHeightOverflow && element.clientHeight + heightTolerance < element.scrollHeight;\n  return isOverflowingWidth || isOverflowingHeight;\n}\n\nexport default function useIsOverflowing({\n  ref,\n  ignoreHeightOverflow = false,\n  tolerance: heightTolerance,\n  widthTolerance\n}: {\n  /**\n   * The ref of the element to check for overflow.\n   */\n  ref: RefObject<HTMLElement>;\n  /**\n   * Whether to ignore height overflow.\n   */\n  ignoreHeightOverflow?: boolean;\n  /**\n   * The tolerance value to consider the element as overflowing (height overflow).\n   */\n  tolerance?: number;\n  /**\n   * The tolerance value to consider the element as overflowing (width overflow).\n   */\n  widthTolerance?: number;\n}) {\n  const [isOverflowing, setIsOverflowing] = useState<boolean>(() =>\n    checkOverflow(ref?.current, ignoreHeightOverflow, heightTolerance, widthTolerance)\n  );\n  const callback = useCallback(() => {\n    const element = ref?.current;\n    if (!element) return;\n\n    const newOverflowState = checkOverflow(element, ignoreHeightOverflow, heightTolerance, widthTolerance);\n    setIsOverflowing(prevState => (prevState !== newOverflowState ? newOverflowState : prevState));\n  }, [ignoreHeightOverflow, ref, heightTolerance, widthTolerance]);\n\n  useResizeObserver({\n    ref,\n    callback,\n    debounceTime: 0\n  });\n\n  return isOverflowing;\n}\n"],"mappings":";;;AAGA,SAASA,EAAcC,CAAA,EAAsBC,CAAA;EAC3C,SAAKD,CAAA,KAG6DA,CAAA,CAAQE,WAAA,GAA/CF,CAAA,CAAQG,WAAA,IAJ0EC,SAAA,CAAAC,MAAA,mBAAAD,SAAA,MAAAA,SAAA,MAAG,OAKnFH,CAAA,IAAiED,CAAA,CAAQM,YAAA,GAAjDN,CAAA,CAAQO,YAAA,IAL4BH,SAAA,CAAAC,MAAA,mBAAAD,SAAA,MAAAA,SAAA,MAAG,GAO9F;AAAA;AAEc,SAAUI,EAAgBA,CAAA;EAsBvC,IArBCC,CAAA,GAAGD,CAAA,CAAHE,GAAA;IAAGC,CAAA,GAAAH,CAAA,CACHI,oBAAA;IAAAC,CAAA,QAAuB,MAAHF,CAAA,IAAQA,CAAA;IACjBG,CAAA,GAAeN,CAAA,CAA1BO,SAAA;IACAC,CAAA,GAAcR,CAAA,CAAdS,cAAA;IAmBAC,CAAA,GAA0CjB,CAAA,CAAkB;MAAA,OAC1DF,CAAA,CAAc,QAAAU,CAAA,YAAAA,CAAA,CAAKU,OAAA,EAASN,CAAA,EAAsBC,CAAA,EAAiBE,CAAA;IAAA;IACpEI,CAAA,GAAApB,CAAA,CAAAkB,CAAA;IAFMG,CAAA,GAAaD,CAAA;IAAEE,CAAA,GAAgBF,CAAA;IAGhCG,CAAA,GAAWC,CAAA,CAAY;MAC3B,IAAMxB,CAAA,GAAU,QAAAS,CAAA,YAAAA,CAAA,CAAKU,OAAA;MACrB,IAAKnB,CAAA,EAAL;QAEA,IAAMC,CAAA,GAAmBF,CAAA,CAAcC,CAAA,EAASa,CAAA,EAAsBC,CAAA,EAAiBE,CAAA;QACvFM,CAAA,CAAiB,UAAAtB,CAAA;UAAS,OAAKA,CAAA,KAAcC,CAAA,GAAmBA,CAAA,GAAmBD,CAAS;QAAA,EAH9E;MAAA;IAIf,GAAE,CAACa,CAAA,EAAsBJ,CAAA,EAAKK,CAAA,EAAiBE,CAAA;EAQhD,OANAS,CAAA,CAAkB;IAChBf,GAAA,EAAAD,CAAA;IACAiB,QAAA,EAAAH,CAAA;IACAI,YAAA,EAAc;EAAA,IAGTN,CACT;AAAA;AAAA,SAAAb,CAAA,IAAAoB,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
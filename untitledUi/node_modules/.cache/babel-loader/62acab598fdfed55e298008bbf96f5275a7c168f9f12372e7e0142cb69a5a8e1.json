{"ast":null,"code":"import { slicedToArray as r } from \"../../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { useState as e, useRef as n, useCallback as o, useEffect as l } from \"react\";\nvar t = function () {\n  var t = e(!1),\n    i = r(t, 2),\n    c = i[0],\n    u = i[1],\n    a = e(!1),\n    s = r(a, 2),\n    f = s[0],\n    v = s[1],\n    d = e(!1),\n    p = r(d, 2),\n    b = p[0],\n    m = p[1],\n    S = n(null),\n    g = o(function () {\n      var r = S.current;\n      if (r) {\n        var e = r.scrollTop,\n          n = r.scrollHeight,\n          o = r.clientHeight;\n        v(n > o), u(e > 0), m(e + o >= n);\n      }\n    }, []),\n    H = o(function () {\n      g();\n    }, [g]);\n  return l(function () {\n    var r = S.current;\n    if (r) {\n      var e = new ResizeObserver(function () {\n        g();\n      });\n      return e.observe(r), g(), function () {\n        e.disconnect();\n      };\n    }\n  }, [g]), {\n    ref: S,\n    isContentScrolled: c,\n    isScrollable: f,\n    isScrolledToEnd: b,\n    onScroll: H\n  };\n};\nexport { t as default };","map":{"version":3,"names":["t","useLayoutScrolledContent","e","i","r","c","u","a","s","f","v","d","p","b","m","S","n","g","o","current","scrollTop","scrollHeight","clientHeight","H","l","ResizeObserver","observe","disconnect","ref","isContentScrolled","isScrollable","isScrolledToEnd","onScroll","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/Modal/layouts/useLayoutScrolledContent.ts"],"sourcesContent":["import { UIEventHandler, useCallback, useEffect, useRef, useState } from \"react\";\n\nconst useLayoutScrolledContent = () => {\n  const [isContentScrolled, setContentScrolled] = useState<boolean>(false);\n  const [isScrollable, setScrollable] = useState<boolean>(false);\n  const [isScrolledToEnd, setScrolledToEnd] = useState<boolean>(false);\n\n  const ref = useRef<HTMLDivElement>(null);\n\n  const checkScroll = useCallback(() => {\n    const element = ref.current;\n    if (element) {\n      const { scrollTop, scrollHeight, clientHeight } = element;\n      setScrollable(scrollHeight > clientHeight);\n      setContentScrolled(scrollTop > 0);\n      setScrolledToEnd(scrollTop + clientHeight >= scrollHeight);\n    }\n  }, []);\n\n  const onScroll: UIEventHandler<HTMLDivElement> = useCallback(() => {\n    checkScroll();\n  }, [checkScroll]);\n\n  useEffect(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const resizeObserver = new ResizeObserver(() => {\n      checkScroll();\n    });\n\n    resizeObserver.observe(element);\n\n    checkScroll();\n\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [checkScroll]);\n\n  return { ref, isContentScrolled, isScrollable, isScrolledToEnd, onScroll };\n};\n\nexport default useLayoutScrolledContent;\n"],"mappings":";;AAEA,IAAMA,CAAA,GAA2B,SAAAC,CAAA;EAC/B,IAAAD,CAAA,GAAgDE,CAAA,EAAkB;IAAMC,CAAA,GAAAC,CAAA,CAAAJ,CAAA;IAAjEK,CAAA,GAAiBF,CAAA;IAAEG,CAAA,GAAkBH,CAAA;IAC5CI,CAAA,GAAsCL,CAAA,EAAkB;IAAMM,CAAA,GAAAJ,CAAA,CAAAG,CAAA;IAAvDE,CAAA,GAAYD,CAAA;IAAEE,CAAA,GAAaF,CAAA;IAClCG,CAAA,GAA4CT,CAAA,EAAkB;IAAMU,CAAA,GAAAR,CAAA,CAAAO,CAAA;IAA7DE,CAAA,GAAeD,CAAA;IAAEE,CAAA,GAAgBF,CAAA;IAElCG,CAAA,GAAMC,CAAA,CAAuB;IAE7BC,CAAA,GAAcC,CAAA,CAAY;MAC9B,IAAMd,CAAA,GAAUW,CAAA,CAAII,OAAA;MACpB,IAAIf,CAAA,EAAS;QACX,IAAQF,CAAA,GAA0CE,CAAA,CAA1CgB,SAAA;UAAWJ,CAAA,GAA+BZ,CAAA,CAA/BiB,YAAA;UAAcH,CAAA,GAAiBd,CAAA,CAAjBkB,YAAA;QACjCZ,CAAA,CAAcM,CAAA,GAAeE,CAAA,GAC7BZ,CAAA,CAAmBJ,CAAA,GAAY,IAC/BY,CAAA,CAAiBZ,CAAA,GAAYgB,CAAA,IAAgBF,CAAA,CAC9C;MAAA;IACF,GAAE;IAEGO,CAAA,GAA2CL,CAAA,CAAY;MAC3DD,CAAA,EACF;IAAA,GAAG,CAACA,CAAA;EAmBJ,OAjBAO,CAAA,CAAU;IACR,IAAMpB,CAAA,GAAUW,CAAA,CAAII,OAAA;IACpB,IAAKf,CAAA,EAAL;MAEA,IAAMF,CAAA,GAAiB,IAAIuB,cAAA,CAAe;QACxCR,CAAA,EACF;MAAA;MAMA,OAJAf,CAAA,CAAewB,OAAA,CAAQtB,CAAA,GAEvBa,CAAA,IAEO;QACLf,CAAA,CAAeyB,UAAA;MAAA,CAXH;IAAA;EAahB,GAAG,CAACV,CAAA,IAEG;IAAEW,GAAA,EAAAb,CAAA;IAAKc,iBAAA,EAAAxB,CAAA;IAAmByB,YAAA,EAAArB,CAAA;IAAcsB,eAAA,EAAAlB,CAAA;IAAiBmB,QAAA,EAAAT;EAAA,CAClE;AAAA;AAAA,SAAAvB,CAAA,IAAAiC,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import o from \"./LegacyModalHeader/LegacyModalHeader.js\";\nimport t from \"./LegacyModalContent/LegacyModalContent.js\";\nimport e from \"./LegacyModalFooter/LegacyModalFooter.js\";\nimport r from \"./LegacyModalFooter/LegacyModalFooterButtons/LegacyModalFooterButtons.js\";\nvar a;\n!function (o) {\n  o.DEFAULT = \"default\", o.FULL_WIDTH = \"full-width\";\n}(a || (a = {}));\nvar n = function (t) {\n    return t.type === o;\n  },\n  d = function (o) {\n    return o.type === t;\n  },\n  i = function (o) {\n    return [e, r].some(function (t) {\n      return o.type === t;\n    });\n  },\n  l = function (o, t) {\n    if (!t.some(n) && !o) throw Error(\"Title prop is mandatory for Modal when HeaderModal isn't provided. Validation failed.\");\n  };\nexport { a as ModalWidth, d as isModalContent, i as isModalFooter, n as isModalHeader, l as validateTitleProp };","map":{"version":3,"names":["a","o","DEFAULT","FULL_WIDTH","n","isModalHeader","t","type","d","isModalContent","i","isModalFooter","e","r","some","l","validateTitleProp","Error","ModalWidth"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/LegacyModal/ModalHelper.ts"],"sourcesContent":["import { ReactElement } from \"react\";\nimport ModalHeader from \"./LegacyModalHeader/LegacyModalHeader\";\nimport ModalContent from \"./LegacyModalContent/LegacyModalContent\";\nimport ModalFooter from \"./LegacyModalFooter/LegacyModalFooter\";\nimport ModalFooterButtons from \"./LegacyModalFooter/LegacyModalFooterButtons/LegacyModalFooterButtons\";\n\n/**\n * @deprecated\n */\nexport enum ModalWidth {\n  DEFAULT = \"default\",\n  FULL_WIDTH = \"full-width\"\n}\n\n// the type A11yDialog is not exported from a11y-dialog, so mocking it with any for now\nexport type A11yDialogType = any;\n\nexport const isModalHeader = (child: ReactElement) => child.type === ModalHeader;\nexport const isModalContent = (child: ReactElement) => child.type === ModalContent;\nexport const isModalFooter = (child: ReactElement) =>\n  [ModalFooter, ModalFooterButtons].some(component => child.type === component);\nexport const validateTitleProp = (title: string, childrenArray: ReactElement[]) => {\n  const hasHeaderComponent = childrenArray.some(isModalHeader);\n  if (hasHeaderComponent) return;\n\n  if (!title) {\n    throw new Error(`Title prop is mandatory for Modal when HeaderModal isn't provided. Validation failed.`);\n  }\n};\n"],"mappings":";;;;IASYA,CAAA;AAAA,CAAZ,UAAYC,CAAA;EACVA,CAAA,CAAAC,OAAA,cACAD,CAAA,CAAAE,UAAA,eACD;AAAA,CAHD,CAAYH,CAAA,KAAAA,CAAA,GAGX;AAAA,IAKYI,CAAA,GAAgB,SAAAC,CAACC,CAAA;IAAmB,OAAKA,CAAA,CAAMC,IAAA,KAASN,CAAW;EAAA;EACnEO,CAAA,GAAiB,SAAAC,CAACR,CAAA;IAAmB,OAAKA,CAAA,CAAMM,IAAA,KAASD,CAAY;EAAA;EACrEI,CAAA,GAAgB,SAAAC,CAACV,CAAA;IAAmB,OAC/C,CAACW,CAAA,EAAaC,CAAA,EAAoBC,IAAA,CAAK,UAAAR,CAAA;MAAS,OAAIL,CAAA,CAAMM,IAAA,KAASD,CAAA;IAAA,EAAU;EAAA;EAClES,CAAA,GAAoB,SAAAC,CAACf,CAAA,EAAeK,CAAA;IAE/C,KAD2BA,CAAA,CAAcQ,IAAA,CAAKV,CAAA,MAGzCH,CAAA,EACH,MAAUgB,KAAA,CAAK,wFAEnB;EAAA;AAAA,SAAAjB,CAAA,IAAAkB,UAAA,EAAAV,CAAA,IAAAC,cAAA,EAAAC,CAAA,IAAAC,aAAA,EAAAP,CAAA,IAAAC,aAAA,EAAAU,CAAA,IAAAC,iBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
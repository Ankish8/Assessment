{"ast":null,"code":"import { slicedToArray as e, defineProperty as t } from \"../../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport o, { forwardRef as r, useState as n } from \"react\";\nimport s from \"classnames\";\nimport a from \"./TableHeaderCell.module.scss.js\";\nimport i from \"../../Icon/Icon.js\";\nimport l from \"../../IconButton/IconButton.js\";\nimport c from \"../../Text/Text.js\";\nimport m from \"../../Flex/Flex.js\";\nimport { getSortIcon as d, getNextSortState as p, getAriaSort as f } from \"../Table/tableHelpers.js\";\nimport u from \"../../Tooltip/Tooltip.js\";\nimport { getTestId as j } from \"../../../tests/testIds.js\";\nimport { ComponentDefaultTestId as E } from \"../../../tests/constants.js\";\nimport { getStyle as b } from \"../../../helpers/typesciptCssModulesHelper.js\";\nimport v from \"../../../../icons/dist/react/Info.js\";\nvar C = r(function (r, C) {\n  var x = r.id,\n    y = r.className,\n    T = r[\"data-testid\"],\n    H = r.title,\n    I = r.onSortClicked,\n    L = r.infoContent,\n    N = r.icon,\n    g = r.sortState,\n    B = void 0 === g ? \"none\" : g,\n    h = r.sortButtonAriaLabel,\n    k = void 0 === h ? \"Sort\" : h,\n    A = r.sticky,\n    w = n(!1),\n    S = e(w, 2),\n    _ = S[0],\n    F = S[1],\n    M = f(B),\n    P = \"none\" !== M || _;\n  return o.createElement(\"div\", {\n    ref: C,\n    id: x,\n    className: s(a.tableHeaderCell, t(t({}, a.sortActive, I && \"none\" !== M), a.sticky, A), y),\n    \"data-testid\": T || j(E.TABLE_HEADER_CELL, x),\n    role: \"columnheader\",\n    onMouseOver: function () {\n      return F(!0);\n    },\n    onMouseLeave: function () {\n      return F(!1);\n    },\n    onFocus: function () {\n      return F(!0);\n    },\n    onBlur: function () {\n      return F(!1);\n    },\n    \"aria-sort\": I ? M : void 0,\n    tabIndex: I ? 0 : void 0\n  }, o.createElement(m, {\n    direction: \"row\",\n    align: \"center\",\n    className: a.tableHeaderCellContent,\n    gap: \"xs\"\n  }, N && o.createElement(i, {\n    icon: N,\n    className: a.icon\n  }), \"string\" == typeof H ? o.createElement(c, {\n    type: \"text2\",\n    weight: \"medium\",\n    color: \"secondary\"\n  }, H) : H, L && o.createElement(u, {\n    content: L,\n    referenceWrapperClassName: a.infoTooltip\n  }, o.createElement(i, {\n    icon: v,\n    iconLabel: L\n  }))), I && o.createElement(m, {\n    direction: \"row\",\n    align: \"center\",\n    className: a.tableHeaderCellSort\n  }, o.createElement(l, {\n    icon: d(B),\n    kind: \"tertiary\",\n    size: \"xs\",\n    ariaLabel: k,\n    \"aria-hidden\": !P,\n    className: s(a.sort, b(a, B), t({}, a.show, P)),\n    onClick: function () {\n      return I(p(B));\n    }\n  })));\n});\nexport { C as default };","map":{"version":3,"names":["C","r","x","id","y","className","T","H","title","I","onSortClicked","L","infoContent","N","icon","g","sortState","B","h","sortButtonAriaLabel","k","A","sticky","w","n","S","e","_","F","M","f","P","o","createElement","ref","s","a","tableHeaderCell","t","sortActive","j","E","TABLE_HEADER_CELL","role","onMouseOver","onMouseLeave","onFocus","onBlur","tabIndex","m","direction","align","tableHeaderCellContent","gap","i","c","type","weight","color","u","content","referenceWrapperClassName","infoTooltip","v","iconLabel","tableHeaderCellSort","l","d","kind","size","ariaLabel","sort","b","show","onClick","p","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/Table/TableHeaderCell/TableHeaderCell.tsx"],"sourcesContent":["import React, { forwardRef, useState } from \"react\";\nimport cx from \"classnames\";\nimport { SubIcon, VibeComponentProps } from \"../../../types\";\nimport styles from \"./TableHeaderCell.module.scss\";\nimport Icon from \"../../Icon/Icon\";\nimport IconButton from \"../../IconButton/IconButton\";\nimport { Info } from \"@vibe/icons\";\nimport Text from \"../../Text/Text\";\nimport Flex from \"../../Flex/Flex\";\nimport { getAriaSort, getNextSortState, getSortIcon } from \"../Table/tableHelpers\";\nimport Tooltip from \"../../Tooltip/Tooltip\";\nimport { getTestId } from \"../../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../../tests/constants\";\nimport { getStyle } from \"../../../helpers/typesciptCssModulesHelper\";\n\nexport interface TableHeaderCellProps extends VibeComponentProps {\n  /**\n   * The title of the column, displayed inside the header cell.\n   */\n  title: string | React.ReactNode;\n  /**\n   * Icon displayed next to the column title.\n   */\n  icon?: SubIcon;\n  /**\n   * Tooltip content for additional information about the column.\n   */\n  infoContent?: string;\n  /**\n   * Current sorting state of the column.\n   */\n  sortState?: \"asc\" | \"desc\" | \"none\";\n  /**\n   * Callback fired when the column header is clicked to change sorting.\n   */\n  onSortClicked?: (direction: \"asc\" | \"desc\" | \"none\") => void;\n  /**\n   * ARIA label for the sort button.\n   */\n  sortButtonAriaLabel?: string;\n  /**\n   * If true, the header cell remains visible while scrolling horizontally.\n   */\n  sticky?: boolean;\n}\n\nconst TableHeaderCell = forwardRef(\n  (\n    {\n      id,\n      className,\n      \"data-testid\": dataTestId,\n      title,\n      onSortClicked,\n      infoContent,\n      icon,\n      sortState = \"none\",\n      sortButtonAriaLabel = \"Sort\",\n      sticky\n    }: TableHeaderCellProps,\n    ref: React.ForwardedRef<HTMLDivElement>\n  ) => {\n    const [isHovered, setIsHovered] = useState<boolean>(false);\n    const ariaSort = getAriaSort(sortState);\n    const isSortActive = onSortClicked && ariaSort !== \"none\";\n    const shouldShowSortIcon = ariaSort !== \"none\" || isHovered;\n\n    return (\n      <div\n        ref={ref}\n        id={id}\n        className={cx(\n          styles.tableHeaderCell,\n          { [styles.sortActive]: isSortActive, [styles.sticky]: sticky },\n          className\n        )}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.TABLE_HEADER_CELL, id)}\n        role=\"columnheader\"\n        onMouseOver={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n        onFocus={() => setIsHovered(true)}\n        onBlur={() => setIsHovered(false)}\n        aria-sort={onSortClicked ? ariaSort : undefined}\n        tabIndex={onSortClicked ? 0 : undefined}\n      >\n        <Flex direction=\"row\" align=\"center\" className={styles.tableHeaderCellContent} gap=\"xs\">\n          {icon && <Icon icon={icon} className={styles.icon} />}\n          {typeof title === \"string\" ? (\n            <Text type=\"text2\" weight=\"medium\" color=\"secondary\">\n              {title}\n            </Text>\n          ) : (\n            title\n          )}\n          {infoContent && (\n            <Tooltip content={infoContent} referenceWrapperClassName={styles.infoTooltip}>\n              <Icon icon={Info} iconLabel={infoContent} />\n            </Tooltip>\n          )}\n        </Flex>\n        {onSortClicked && (\n          <Flex direction=\"row\" align=\"center\" className={styles.tableHeaderCellSort}>\n            <IconButton\n              icon={getSortIcon(sortState)}\n              kind=\"tertiary\"\n              size=\"xs\"\n              ariaLabel={sortButtonAriaLabel}\n              aria-hidden={!shouldShowSortIcon}\n              className={cx(styles.sort, getStyle(styles, sortState), {\n                [styles.show]: shouldShowSortIcon\n              })}\n              onClick={() => onSortClicked(getNextSortState(sortState))}\n            />\n          </Flex>\n        )}\n      </div>\n    );\n  }\n);\n\nexport default TableHeaderCell;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
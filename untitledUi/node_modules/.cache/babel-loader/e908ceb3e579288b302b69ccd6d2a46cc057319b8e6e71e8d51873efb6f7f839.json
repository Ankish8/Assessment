{"ast":null,"code":"import { toConsumableArray as o } from \"../../../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { difference as r, intersection as e } from \"lodash-es\";\nimport t, { forwardRef as i, useRef as l, useCallback as n, useMemo as s } from \"react\";\nimport { BaseSizes as a } from \"../../../../constants/sizes.js\";\nimport { ColorStyle as c, contentColors as d } from \"../../../../utils/colors-vars-map.js\";\nimport { ColorShapes as m, DEFAULT_NUMBER_OF_COLORS_IN_LINE as u } from \"../../ColorPickerConstants.js\";\nimport { calculateColorPickerWidth as f } from \"../../services/ColorPickerStyleService.js\";\nimport { useGridKeyboardNavigationContext as p, GridKeyboardNavigationContext as C } from \"../../../GridKeyboardNavigationContext/GridKeyboardNavigationContext.js\";\nimport v from \"./ColorPickerClearButton.js\";\nimport I from \"./ColorPickerColorsGrid.js\";\nimport { withStaticProps as h } from \"../../../../types/withStaticProps.js\";\nimport S from \"../../../../hooks/useMergeRef.js\";\nimport j from \"../../../../../icons/dist/react/NoColor.js\";\nvar y = h(i(function (i, c) {\n  var m = i.className,\n    h = i.onValueChange,\n    y = i.value,\n    k = i.noColorText,\n    b = i.colorStyle,\n    g = void 0 === b ? \"regular\" : b,\n    N = i.ColorIndicatorIcon,\n    x = i.SelectedIndicatorIcon,\n    B = i.shouldRenderIndicatorWithoutBackground,\n    E = i.NoColorIcon,\n    M = void 0 === E ? j : E,\n    P = i.isBlackListMode,\n    w = void 0 === P || P,\n    z = i.colorsList,\n    L = i.isMultiselect,\n    O = i.colorSize,\n    R = void 0 === O ? a.MEDIUM : O,\n    T = i.numberOfColorsInLine,\n    G = void 0 === T ? u : T,\n    K = i.tooltipContentByColor,\n    U = void 0 === K ? {} : K,\n    W = i.focusOnMount,\n    _ = i.colorShape,\n    q = void 0 === _ ? \"square\" : _,\n    A = i.forceUseRawColorList,\n    D = i.showColorNameTooltip,\n    H = i.id,\n    V = i[\"data-testid\"],\n    F = l(null),\n    J = S(c, F),\n    Q = l(null),\n    X = l(null),\n    Y = n(function () {\n      h(null);\n    }, [h]),\n    Z = s(function () {\n      return A ? z : w ? r(d, z) : e(d, z);\n    }, [A, w, z]),\n    $ = n(function (r) {\n      if (L) {\n        var e = o(y);\n        if (e.includes(r)) {\n          var t = e.indexOf(r);\n          t > -1 && e.splice(t, 1);\n        } else e.push(r);\n        h(e);\n      } else h([r]);\n    }, [L, h, y]),\n    oo = s(function () {\n      return [{\n        topElement: Q,\n        bottomElement: X\n      }];\n    }, []),\n    ro = p(oo, F),\n    eo = f(R, G);\n  return t.createElement(\"div\", {\n    className: m,\n    style: {\n      width: eo\n    },\n    ref: J,\n    tabIndex: -1\n  }, t.createElement(C.Provider, {\n    value: ro\n  }, t.createElement(I, {\n    ref: Q,\n    onColorClicked: $,\n    colorsToRender: Z,\n    numberOfColorsInLine: G,\n    focusOnMount: W,\n    value: y,\n    colorStyle: g,\n    ColorIndicatorIcon: N,\n    shouldRenderIndicatorWithoutBackground: B,\n    SelectedIndicatorIcon: x,\n    colorSize: R,\n    tooltipContentByColor: U,\n    colorShape: q,\n    showColorNameTooltip: D,\n    id: H,\n    \"data-testid\": V\n  }), k && t.createElement(v, {\n    Icon: M,\n    onClick: Y,\n    text: k,\n    ref: X\n  })));\n}), {\n  sizes: a,\n  colorStyles: c,\n  colorSizes: a,\n  colorShapes: m\n});\nexport { y as default };","map":{"version":3,"names":["y","h","i","c","m","className","onValueChange","value","k","noColorText","b","colorStyle","g","N","ColorIndicatorIcon","x","SelectedIndicatorIcon","B","shouldRenderIndicatorWithoutBackground","E","NoColorIcon","M","j","P","isBlackListMode","w","z","colorsList","L","isMultiselect","O","colorSize","R","a","MEDIUM","T","numberOfColorsInLine","G","u","K","tooltipContentByColor","U","W","focusOnMount","_","colorShape","q","A","forceUseRawColorList","D","showColorNameTooltip","H","id","V","F","l","J","S","Q","X","Y","n","Z","s","r","d","e","$","o","includes","t","indexOf","splice","push","oo","topElement","bottomElement","ro","p","eo","f","createElement","style","width","ref","tabIndex","C","Provider","I","onColorClicked","colorsToRender","v","Icon","onClick","text","sizes","colorStyles","colorSizes","colorShapes","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx"],"sourcesContent":["import { difference as _difference, intersection as _intersection } from \"lodash-es\";\nimport React, { forwardRef, useCallback, useMemo, useRef } from \"react\";\nimport { BaseSizes } from \"../../../../constants\";\nimport { ColorStyle as ColorStyleEnum, CONTENT_COLORS_VALUES, contentColors } from \"../../../../utils/colors-vars-map\";\nimport { NoColor } from \"@vibe/icons\";\nimport { ColorShapes as ColorShapesEnum, DEFAULT_NUMBER_OF_COLORS_IN_LINE } from \"../../ColorPickerConstants\";\nimport { ColorShapes, ColorPickerSizes, ColorPickerValue, ColorPickerArrayValueOnly } from \"../../ColorPicker.types\";\nimport { calculateColorPickerWidth } from \"../../services/ColorPickerStyleService\";\nimport {\n  GridKeyboardNavigationContext,\n  useGridKeyboardNavigationContext\n} from \"../../../GridKeyboardNavigationContext\";\nimport ColorPickerClearButton from \"./ColorPickerClearButton\";\nimport ColorPickerColorsGrid from \"./ColorPickerColorsGrid\";\nimport { VibeComponentProps, SubIcon, withStaticProps } from \"../../../../types\";\nimport useMergeRef from \"../../../../hooks/useMergeRef\";\nimport { ColorStyle } from \"../../../../types\";\n\nexport interface ColorPickerContentProps extends VibeComponentProps {\n  /**\n   * The selected color(s).\n   */\n  value: ColorPickerValue;\n  /**\n   * Callback fired when the selected color(s) change.\n   */\n  onValueChange: (value: ColorPickerArrayValueOnly) => void;\n  /**\n   * The list of colors available for selection.\n   */\n  colorsList: ColorPickerArrayValueOnly;\n  /**\n   * Icon displayed as an indicator inside the color.\n   */\n  ColorIndicatorIcon?: SubIcon;\n  /**\n   * Icon displayed when a color is selected.\n   */\n  SelectedIndicatorIcon?: SubIcon;\n  /**\n   * Icon used for clearing the color selection.\n   */\n  NoColorIcon?: SubIcon;\n  /**\n   * The style applied to the colors.\n   */\n  colorStyle?: ColorStyle;\n  /**\n   * The size of the color items.\n   */\n  colorSize?: ColorPickerSizes;\n  /**\n   * The shape of the color items.\n   */\n  colorShape?: ColorShapes;\n  /**\n   * Custom tooltip content for specific colors.\n   */\n  tooltipContentByColor?: Partial<Record<CONTENT_COLORS_VALUES, string>>;\n  /**\n   * Text displayed for the \"no color\" option.\n   */\n  noColorText?: string;\n  /**\n   * If true, renders the color indicator without a background.\n   */\n  shouldRenderIndicatorWithoutBackground?: boolean;\n  /**\n   * If true, treats the color list as a blacklist rather than a whitelist.\n   */\n  isBlackListMode?: boolean;\n  /**\n   * The number of colors displayed per row.\n   */\n  numberOfColorsInLine?: number;\n  /**\n   * If true, the first color is focused when the component mounts.\n   */\n  focusOnMount?: boolean;\n  /**\n   * If true, allows selecting multiple colors.\n   */\n  isMultiselect?: boolean;\n  /**\n   * Used to force the component render the colorList prop as is. Usually, this flag should not be used. It's intended only for edge cases.\n   * Usually, only \"monday colors\" will be rendered (unless blacklist mode is used). This flag will override this behavior.\n   */\n  forceUseRawColorList?: boolean;\n  /**\n   * Used to enable color name tooltip on each color in the component.\n   * When \"tooltipContentByColor\" is supplied, it will override the color name tooltip.\n   */\n  showColorNameTooltip?: boolean;\n}\n\nconst ColorPickerContent = forwardRef(\n  (\n    {\n      className,\n      onValueChange,\n      value,\n      noColorText,\n      colorStyle = \"regular\",\n      ColorIndicatorIcon,\n      SelectedIndicatorIcon,\n      shouldRenderIndicatorWithoutBackground,\n      NoColorIcon = NoColor,\n      isBlackListMode = true,\n      colorsList,\n      isMultiselect,\n      colorSize = BaseSizes.MEDIUM,\n      numberOfColorsInLine = DEFAULT_NUMBER_OF_COLORS_IN_LINE,\n      tooltipContentByColor = {},\n      focusOnMount,\n      colorShape = \"square\",\n      forceUseRawColorList,\n      showColorNameTooltip,\n      id,\n      \"data-testid\": dataTestId\n    }: ColorPickerContentProps,\n    ref: React.ForwardedRef<HTMLDivElement>\n  ) => {\n    const gridRef = useRef(null);\n    const mergedRef = useMergeRef(ref, gridRef);\n    const colorsRef = useRef(null);\n    const buttonRef = useRef(null);\n\n    const onClearButton = useCallback(() => {\n      onValueChange(null);\n    }, [onValueChange]);\n\n    const colorsToRender = useMemo(() => {\n      if (forceUseRawColorList) {\n        return colorsList;\n      }\n      return isBlackListMode ? _difference(contentColors, colorsList) : _intersection(contentColors, colorsList);\n    }, [forceUseRawColorList, isBlackListMode, colorsList]);\n\n    const onColorClicked = useCallback(\n      (color: CONTENT_COLORS_VALUES) => {\n        if (!isMultiselect) {\n          onValueChange([color]);\n          return;\n        }\n        const colors = [...value];\n        if (colors.includes(color)) {\n          const indexInSelected = colors.indexOf(color);\n          if (indexInSelected > -1) {\n            colors.splice(indexInSelected, 1);\n          }\n        } else {\n          colors.push(color);\n        }\n        onValueChange(colors);\n      },\n      [isMultiselect, onValueChange, value]\n    );\n\n    const positions = useMemo(() => [{ topElement: colorsRef, bottomElement: buttonRef }], []);\n    const keyboardContext = useGridKeyboardNavigationContext(positions, gridRef);\n    const width = calculateColorPickerWidth(colorSize as BaseSizes, numberOfColorsInLine);\n\n    return (\n      <div className={className} style={{ width }} ref={mergedRef} tabIndex={-1}>\n        <GridKeyboardNavigationContext.Provider value={keyboardContext}>\n          <ColorPickerColorsGrid\n            ref={colorsRef}\n            onColorClicked={onColorClicked}\n            colorsToRender={colorsToRender}\n            numberOfColorsInLine={numberOfColorsInLine}\n            focusOnMount={focusOnMount}\n            value={value}\n            colorStyle={colorStyle}\n            ColorIndicatorIcon={ColorIndicatorIcon}\n            shouldRenderIndicatorWithoutBackground={shouldRenderIndicatorWithoutBackground}\n            SelectedIndicatorIcon={SelectedIndicatorIcon}\n            colorSize={colorSize}\n            tooltipContentByColor={tooltipContentByColor}\n            colorShape={colorShape}\n            showColorNameTooltip={showColorNameTooltip}\n            id={id}\n            data-testid={dataTestId}\n          />\n          {noColorText && (\n            <ColorPickerClearButton Icon={NoColorIcon} onClick={onClearButton} text={noColorText} ref={buttonRef} />\n          )}\n        </GridKeyboardNavigationContext.Provider>\n      </div>\n    );\n  }\n);\n\ninterface ColorPickerContentStaticProps {\n  sizes: typeof BaseSizes;\n  colorStyles: typeof ColorStyleEnum;\n  colorSizes: typeof BaseSizes;\n  colorShapes: typeof ColorShapesEnum;\n}\n\nexport default withStaticProps<ColorPickerContentProps, ColorPickerContentStaticProps>(ColorPickerContent, {\n  sizes: BaseSizes,\n  colorStyles: ColorStyleEnum,\n  colorSizes: BaseSizes,\n  colorShapes: ColorShapesEnum\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var a = function (a) {\n  var i = a.value,\n    n = a.step,\n    o = a.min,\n    t = a.max,\n    r = (null != i ? i : 0) + a.direction * (void 0 === n ? 1 : n);\n  return a.allowOutOfBounds || (void 0 !== o && (r = Math.max(o, r)), void 0 !== t && (r = Math.min(t, r))), r;\n};\nexport { a as calculateSteppedValue };","map":{"version":3,"names":["a","calculateSteppedValue","i","value","n","step","o","min","t","max","r","direction","allowOutOfBounds","Math"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/components/NumberField/utils/calcValue.ts"],"sourcesContent":["import { NumberFieldProps } from \"../NumberField.types\";\n\ntype CalculateSteppedValueProps = Pick<NumberFieldProps, \"value\" | \"step\" | \"min\" | \"max\" | \"allowOutOfBounds\"> & {\n  direction: number;\n};\n\nexport const calculateSteppedValue = ({\n  value,\n  direction,\n  step = 1,\n  min,\n  max,\n  allowOutOfBounds\n}: CalculateSteppedValueProps): number => {\n  const numericValue = value ?? 0;\n  let newValue = numericValue + direction * step;\n\n  if (allowOutOfBounds) {\n    return newValue;\n  }\n\n  if (min !== undefined) {\n    newValue = Math.max(min, newValue);\n  }\n  if (max !== undefined) {\n    newValue = Math.min(max, newValue);\n  }\n  return newValue;\n};\n"],"mappings":"IAMaA,CAAA,GAAwB,SAAAC,CAAHD,CAAA;EAOO,IANvCE,CAAA,GAAKF,CAAA,CAALG,KAAA;IACSC,CAAA,GAAAJ,CAAA,CACTK,IAAA;IACAC,CAAA,GAAGN,CAAA,CAAHO,GAAA;IACAC,CAAA,GAAGR,CAAA,CAAHS,GAAA;IAIIC,CAAA,IADiB,QAAAR,CAAA,GAAAA,CAAA,GAAS,KANrBF,CAAA,CAATW,SAAA,SACO,MAAHP,CAAA,GAAG,IAACA,CAAA;EAQR,OALgBJ,CAAA,CAAhBY,gBAAA,UASY,MAARN,CAAA,KACFI,CAAA,GAAWG,IAAA,CAAKJ,GAAA,CAAIH,CAAA,EAAKI,CAAA,SAEf,MAARF,CAAA,KACFE,CAAA,GAAWG,IAAA,CAAKN,GAAA,CAAIC,CAAA,EAAKE,CAAA,KAPlBA,CAUX;AAAA;AAAA,SAAAV,CAAA,IAAAC,qBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
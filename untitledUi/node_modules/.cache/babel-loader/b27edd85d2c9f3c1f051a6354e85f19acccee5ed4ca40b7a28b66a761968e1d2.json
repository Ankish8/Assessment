{"ast":null,"code":"import { useRef as e, useCallback as t } from \"react\";\nimport r from \"../useEventListener/index.js\";\nimport { isClient as o } from \"../../utils/ssr-utils.js\";\nvar i;\n!function (e) {\n  e.ALT = \"altKey\", e.META = \"metaKey\", e.CTRL = \"ctrlKey\", e.SHIFT = \"shiftKey\", e.CTRL_OR_META = \"ctrlOrMetaKey\";\n}(i || (i = {}));\nfunction n(a) {\n  var u = a.keys,\n    c = void 0 === u ? [] : u,\n    l = a.callback,\n    f = a.modifier,\n    s = a.withoutAnyModifier,\n    d = a.ref,\n    m = a.ignoreDocumentFallback,\n    v = void 0 !== m && m,\n    y = a.capture,\n    p = void 0 !== y && y,\n    K = a.preventDefault,\n    T = void 0 !== K && K,\n    k = a.stopPropagation,\n    M = void 0 !== k && k,\n    b = a.keyEventName,\n    A = void 0 === b ? \"keydown\" : b,\n    E = e(o() ? document.body : null),\n    L = t(function (e) {\n      c.includes(e.key) && (f && !function (e, t) {\n        return t === i.CTRL_OR_META ? e.ctrlKey || e.metaKey : e[t];\n      }(e, f) || s && !function (e) {\n        return !Object.values(n.modifiers).some(function (t) {\n          if (\"ctrlOrMetaKey\" !== t) return !!e[t];\n        });\n      }(e) || (T && e.preventDefault(), M && e.stopPropagation(), l(e)));\n    }, [c, f, s, T, M, l]);\n  r({\n    eventName: A,\n    callback: L,\n    ref: d || (v ? null : E),\n    capture: p\n  });\n}\nn.modifiers = i;\nexport { n as default };","map":{"version":3,"names":["i","e","ALT","META","CTRL","SHIFT","CTRL_OR_META","n","a","u","keys","c","l","callback","f","modifier","s","withoutAnyModifier","d","ref","m","ignoreDocumentFallback","v","y","capture","p","K","preventDefault","T","k","stopPropagation","M","b","keyEventName","A","E","o","document","body","L","t","includes","key","ctrlKey","metaKey","Object","values","modifiers","some","r","eventName","default"],"sources":["/Users/ankish/Downloads/MA/MAPIT/untitledUi/node_modules/@vibe/core/src/hooks/useKeyEvent/index.ts"],"sourcesContent":["import { RefObject, useCallback, useRef } from \"react\";\nimport useEventListener from \"../useEventListener\";\nimport { GenericEventCallback } from \"../../types/events\";\nimport { isClient } from \"../../utils/ssr-utils\";\n\nconst CTRL_OR_META = \"ctrlOrMetaKey\";\n\nenum Modifier {\n  ALT = \"altKey\",\n  META = \"metaKey\",\n  CTRL = \"ctrlKey\",\n  SHIFT = \"shiftKey\",\n  CTRL_OR_META = \"ctrlOrMetaKey\"\n}\n\nconst checkModifierInEvent = (event: KeyboardEvent, modifier: Modifier) => {\n  if (modifier === Modifier.CTRL_OR_META) {\n    return event.ctrlKey || event.metaKey;\n  }\n\n  return event[modifier];\n};\nconst checkWithoutModifierInEvent = (event: KeyboardEvent) => {\n  return !Object.values(useKeyEvent.modifiers).some((m: Modifier) => {\n    if (m !== CTRL_OR_META) {\n      return !!event[m];\n    }\n  });\n};\n\nexport interface UseKeyEventArgs {\n  /**\n   * The list of keys that should trigger the event.\n   */\n  keys: KeyboardEvent[\"key\"][];\n  // TODO: [breaking] change to keyboard event\n  /**\n   * Callback fired when a specified key is pressed.\n   */\n  callback: GenericEventCallback;\n  /**\n   * Modifier key that must be pressed along with the specified key.\n   */\n  modifier?: Modifier;\n  /**\n   * The keyboard event type to listen for (e.g., \"keydown\", \"keyup\").\n   */\n  keyEventName?: string;\n  /**\n   * If true, ensures no modifier keys are pressed when handling the event.\n   */\n  withoutAnyModifier?: boolean;\n  /**\n   * The element reference to listen for key events on.\n   */\n  ref?: RefObject<HTMLElement | Document>;\n  /**\n   * If true, prevents fallback to listening on the document when no ref is provided.\n   */\n  ignoreDocumentFallback?: boolean;\n  /**\n   * If true, uses capture phase instead of bubbling phase for event listening.\n   */\n  capture?: boolean;\n  /**\n   * If true, calls `preventDefault` on the key event.\n   */\n  preventDefault?: boolean;\n  /**\n   * If true, calls `stopPropagation` on the key event.\n   */\n  stopPropagation?: boolean;\n}\n\nexport default function useKeyEvent({\n  keys = [],\n  callback,\n  modifier,\n  withoutAnyModifier,\n  ref,\n  ignoreDocumentFallback = false,\n  capture = false,\n  preventDefault = false,\n  stopPropagation = false,\n  keyEventName = \"keydown\" // need keydown and not keyup to prevent scrolling with prevent default, for example during menu keyboard navigation\n}: UseKeyEventArgs) {\n  const documentRef = useRef(isClient() ? document.body : null);\n  const onKeyUpPress = useCallback(\n    (event: KeyboardEvent) => {\n      const { key } = event;\n      if (!keys.includes(key)) {\n        return;\n      }\n      if (modifier && !checkModifierInEvent(event, modifier)) {\n        return;\n      }\n      if (withoutAnyModifier && !checkWithoutModifierInEvent(event)) {\n        return;\n      }\n\n      if (preventDefault) {\n        event.preventDefault();\n      }\n\n      if (stopPropagation) {\n        event.stopPropagation();\n      }\n\n      callback(event);\n    },\n    [keys, modifier, withoutAnyModifier, preventDefault, stopPropagation, callback]\n  );\n\n  let listenerRef;\n\n  if (ref) {\n    listenerRef = ref;\n  } else if (ignoreDocumentFallback) {\n    listenerRef = null;\n  } else {\n    listenerRef = documentRef;\n  }\n\n  useEventListener({\n    eventName: keyEventName,\n    callback: onKeyUpPress,\n    ref: listenerRef,\n    capture\n  });\n}\n\nuseKeyEvent.modifiers = Modifier;\n"],"mappings":";;;AAKA,IAEKA,CAAA;AAAA,CAAL,UAAKC,CAAA;EACHA,CAAA,CAAAC,GAAA,aACAD,CAAA,CAAAE,IAAA,cACAF,CAAA,CAAAG,IAAA,cACAH,CAAA,CAAAI,KAAA,eACAJ,CAAA,CAAAK,YAAA,kBACD;AAAA,CAND,CAAKN,CAAA,KAAAA,CAAA,GAMJ;AA6Da,SAAUO,EAAWC,CAAA;EAWjB,IAAAC,CAAA,GAAAD,CAAA,CAVhBE,IAAA;IAAAC,CAAA,QAAO,MAAHF,CAAA,GAAG,KAAEA,CAAA;IACTG,CAAA,GAAQJ,CAAA,CAARK,QAAA;IACAC,CAAA,GAAQN,CAAA,CAARO,QAAA;IACAC,CAAA,GAAkBR,CAAA,CAAlBS,kBAAA;IACAC,CAAA,GAAGV,CAAA,CAAHW,GAAA;IAAGC,CAAA,GAAAZ,CAAA,CACHa,sBAAA;IAAAC,CAAA,QAAyB,MAAHF,CAAA,IAAQA,CAAA;IAAAG,CAAA,GAAAf,CAAA,CAC9BgB,OAAA;IAAAC,CAAA,QAAU,MAAHF,CAAA,IAAQA,CAAA;IAAAG,CAAA,GAAAlB,CAAA,CACfmB,cAAA;IAAAC,CAAA,QAAiB,MAAHF,CAAA,IAAQA,CAAA;IAAAG,CAAA,GAAArB,CAAA,CACtBsB,eAAA;IAAAC,CAAA,QAAkB,MAAHF,CAAA,IAAQA,CAAA;IAAAG,CAAA,GAAAxB,CAAA,CACvByB,YAAA;IAAAC,CAAA,QAAe,MAAHF,CAAA,GAAG,YAASA,CAAA;IAElBG,CAAA,GAAclC,CAAA,CAAOmC,CAAA,KAAaC,QAAA,CAASC,IAAA,GAAO;IAClDC,CAAA,GAAeC,CAAA,CACnB,UAACvC,CAAA;MAEMU,CAAA,CAAK8B,QAAA,CADMxC,CAAA,CAARyC,GAAA,MAIJ5B,CAAA,KA9EmB,UAACb,CAAA,EAAsBuC,CAAA;QAClD,OAAIA,CAAA,KAAaxC,CAAA,CAASM,YAAA,GACjBL,CAAA,CAAM0C,OAAA,IAAW1C,CAAA,CAAM2C,OAAA,GAGzB3C,CAAA,CAAMuC,CAAA,CACf;MAAA,CAwEuB,CAAqBvC,CAAA,EAAOa,CAAA,KAGzCE,CAAA,KA1E0B,UAACf,CAAA;QACnC,QAAQ4C,MAAA,CAAOC,MAAA,CAAOvC,CAAA,CAAYwC,SAAA,EAAWC,IAAA,CAAK,UAACR,CAAA;UACjD,IAnBiB,oBAmBbA,CAAA,EACF,SAASvC,CAAA,CAAMuC,CAAA,CAEnB;QAAA,EACF;MAAA,CAoEiC,CAA4BvC,CAAA,MAInD2B,CAAA,IACF3B,CAAA,CAAM0B,cAAA,IAGJI,CAAA,IACF9B,CAAA,CAAM6B,eAAA,IAGRlB,CAAA,CAASX,CAAA,GACX;IAAA,GACA,CAACU,CAAA,EAAMG,CAAA,EAAUE,CAAA,EAAoBY,CAAA,EAAgBG,CAAA,EAAiBnB,CAAA;EAaxEqC,CAAA,CAAiB;IACfC,SAAA,EAAWhB,CAAA;IACXrB,QAAA,EAAU0B,CAAA;IACVpB,GAAA,EAXED,CAAA,KAEOI,CAAA,GACK,OAEAa,CAAA;IAOdX,OAAA,EAAAC;EAAA,EAEJ;AAAA;AAEAlB,CAAA,CAAYwC,SAAA,GAAY/C,CAAA;AAAA,SAAAO,CAAA,IAAA4C,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}